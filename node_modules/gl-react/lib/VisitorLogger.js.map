{"version":3,"sources":["../src/VisitorLogger.js"],"names":["aggregateInfo","info","Array","isArray","reduce","acc","concat","String","dependency","getGLName","initialObj","textureOptions","VisitorLogger","Visitor","onSurfaceGLContextChange","surface","gl","onSurfaceDrawSkipped","onSurfaceDrawStart","width","height","getGLSize","console","groupCollapsed","groupNestedLvl","onSurfaceDrawError","e","error","groupEnd","onSurfaceDrawEnd","onNodeDrawSkipped","node","context","glSurface","_needsRedraw","onNodeDrawStart","group","onNodeSyncDeps","additions","deletions","length","log","map","n","join","onNodeDraw","preparedUniforms","blendFunc","clear","props","w","h","JSON","stringify","forEach","obj","key","type","value","getMetaInfo","values","undefined","v","spaces","i","onNodeDrawEnd"],"mappings":"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","sourcesContent":["//@flow\n/* eslint-disable no-console */\nimport log from \"./helpers/log\";\nimport type { Surface } from \"./createSurface\";\nimport type Node from \"./Node\";\nimport type Bus from \"./Bus\";\nimport Visitor from \"./Visitor\";\n\nconst aggregateInfo = info =>\n  Array.isArray(info)\n    ? info.reduce((acc, info) => acc.concat(aggregateInfo(info)), [])\n    : [\n        String(\n          (info.dependency && info.dependency.getGLName()) || info.initialObj\n        )\n      ].concat(info.textureOptions ? [info.textureOptions] : []);\n\n/**\n *\n */\nexport default class VisitorLogger extends Visitor {\n  groupNestedLvl = 0;\n  onSurfaceGLContextChange(surface: Surface, gl: ?WebGLRenderingContext) {\n    if (gl) {\n      log(surface.getGLName() + \" _context acquired_\");\n    } else {\n      log(surface.getGLName() + \" _context lost_\");\n    }\n  }\n  onSurfaceDrawSkipped() {}\n  onSurfaceDrawStart(surface: Surface) {\n    const [width, height] = surface.getGLSize();\n    console.groupCollapsed(\"Surface draw\");\n    this.groupNestedLvl = 1;\n    log(\"_size_ `\" + width + \"`x`\" + height + \"`\");\n  }\n  onSurfaceDrawError(e: Error) {\n    console.error(e);\n    while (this.groupNestedLvl > 0) {\n      console.groupEnd();\n      this.groupNestedLvl--;\n    }\n    return true;\n  }\n  onSurfaceDrawEnd() {\n    this.groupNestedLvl--;\n    console.groupEnd();\n  }\n  onNodeDrawSkipped(node: Node) {\n    log(\n      node.getGLName() +\n        \" redraw _skipped_: \" +\n        (!node.context.glSurface.gl\n          ? \"no gl context available!\"\n          : !node._needsRedraw ? \"no need to redraw\" : \"\")\n    );\n  }\n  onNodeDrawStart(node: Node) {\n    this.groupNestedLvl++;\n    console.group(node.getGLName());\n  }\n  onNodeSyncDeps(\n    node: Node,\n    additions: Array<Bus | Node>,\n    deletions: Array<Bus | Node>\n  ) {\n    if (additions.length)\n      console.log(\n        node.getGLName() +\n          \" +deps \" +\n          additions.map(n => n.getGLName()).join(\", \")\n      );\n    if (deletions.length)\n      console.log(\n        node.getGLName() +\n          \" -deps \" +\n          additions.map(n => n.getGLName()).join(\", \")\n      );\n  }\n  onNodeDraw(node: Node, preparedUniforms: Array<*>) {\n    const { blendFunc, clear } = node.props;\n    this.groupNestedLvl++;\n    console.group(\"DRAW \" + node.getGLName());\n    const [w, h] = node.getGLSize();\n    log(\n      \"_size_ `\" +\n        w +\n        \"`x`\" +\n        h +\n        \"` \" +\n        \"_clear_ `\" +\n        JSON.stringify(clear) +\n        \"` \" +\n        \"_blendFunc_ `\" +\n        JSON.stringify(blendFunc) +\n        \"`\"\n    );\n    log(\"_\" + preparedUniforms.length + \" uniforms:_\");\n    preparedUniforms.forEach(obj => {\n      let { key, type, value, getMetaInfo } = obj;\n      type = String(type || \"UNKNOWN\");\n      const values =\n        value === undefined\n          ? \"\"\n          : Array.isArray(value)\n            ? \"[\" + value.map(v => \"`\" + String(v) + \"`\").join(\",\") + \"]\"\n            : \"`\" + String(value) + \"`\";\n      let spaces = \"\";\n      for (let i = type.length + key.length - 18; i < 0; i++) {\n        spaces += \" \";\n      }\n      log(\n        `${spaces}*${type === \"UNKNOWN\"\n          ? \"[c='color:red']UNKNOWN[c]\"\n          : type}* _${key}_ = ${values}`,\n        ...(getMetaInfo ? aggregateInfo(getMetaInfo()) : [])\n      );\n    });\n  }\n  onNodeDrawEnd() {\n    this.groupNestedLvl -= 2;\n    console.groupEnd();\n    console.groupEnd();\n  }\n}\n"],"file":"VisitorLogger.js"}