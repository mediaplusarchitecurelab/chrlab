{"version":3,"sources":["../src/LoadersRegistry.js"],"names":["LoadersRegistry","add","loader","_loaders","push","sort","a","b","priority","remove","i","indexOf","splice","get"],"mappings":";;;;;;;;;AAGA;;;;AAIe,MAAMA,eAAN,CAAsB;AAAA;AAAA,sCACe,EADf;AAAA;;AAGnC;;;AAGAC,EAAAA,GAAG,CAACC,MAAD,EAAyC;AAC1C,SAAKC,QAAL,CAAcC,IAAd,CAAmBF,MAAnB;;AACA,SAAKC,QAAL,CAAcE,IAAd,CACE,CAACC,CAAD,EAAIC,CAAJ,KACE;AACA,KAAC,OAAOA,CAAC,CAACC,QAAT,KAAsB,QAAtB,GAAiCD,CAAC,CAACC,QAAnC,GAA8C,CAA/C,MACA;AACC,WAAOF,CAAC,CAACE,QAAT,KAAsB,QAAtB,GAAiCF,CAAC,CAACE,QAAnC,GAA8C,CAF/C,CAHJ;AAOD;AAED;;;;;AAGAC,EAAAA,MAAM,CAACP,MAAD,EAAyC;AAC7C,UAAMQ,CAAC,GAAG,KAAKP,QAAL,CAAcQ,OAAd,CAAsBT,MAAtB,CAAV;;AACA,QAAIQ,CAAC,KAAK,CAAC,CAAX,EAAc;AACZ,WAAKP,QAAL,CAAcS,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;AACD;AACF;AAED;;;;;AAGAG,EAAAA,GAAG,GAAG;AACJ,WAAO,KAAKV,QAAZ;AACD;;AAhCkC","sourcesContent":["//@flow\nimport type WebGLTextureLoader from \"./WebGLTextureLoader\";\n\n/**\n * LoadersRegistry\n * loaders can define a static priority number. more high is priority, more important the loader is to be used first.\n */\nexport default class LoadersRegistry {\n  _loaders: Array<Class<WebGLTextureLoader<any>>> = [];\n\n  /**\n   * Add a TextureLoader class to extend texture format support.\n   */\n  add(loader: Class<WebGLTextureLoader<any>>) {\n    this._loaders.push(loader);\n    this._loaders.sort(\n      (a, b) =>\n        // $FlowFixMe\n        (typeof b.priority === \"number\" ? b.priority : 0) -\n        // $FlowFixMe\n        (typeof a.priority === \"number\" ? a.priority : 0)\n    );\n  }\n\n  /**\n   * Remove a previously added WebGLTextureLoader class.\n   */\n  remove(loader: Class<WebGLTextureLoader<any>>) {\n    const i = this._loaders.indexOf(loader);\n    if (i !== -1) {\n      this._loaders.splice(i, 1);\n    }\n  }\n\n  /**\n   * List the loaders ordered by most priority first\n   */\n  get() {\n    return this._loaders;\n  }\n}\n"],"file":"LoadersRegistry.js"}