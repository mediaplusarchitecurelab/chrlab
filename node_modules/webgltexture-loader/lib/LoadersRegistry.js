"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * LoadersRegistry
 * loaders can define a static priority number. more high is priority, more important the loader is to be used first.
 */
class LoadersRegistry {
  constructor() {
    _defineProperty(this, "_loaders", []);
  }

  /**
   * Add a TextureLoader class to extend texture format support.
   */
  add(loader) {
    this._loaders.push(loader);

    this._loaders.sort((a, b) => // $FlowFixMe
    (typeof b.priority === "number" ? b.priority : 0) - ( // $FlowFixMe
    typeof a.priority === "number" ? a.priority : 0));
  }
  /**
   * Remove a previously added WebGLTextureLoader class.
   */


  remove(loader) {
    const i = this._loaders.indexOf(loader);

    if (i !== -1) {
      this._loaders.splice(i, 1);
    }
  }
  /**
   * List the loaders ordered by most priority first
   */


  get() {
    return this._loaders;
  }

}

exports.default = LoadersRegistry;
//# sourceMappingURL=LoadersRegistry.js.map