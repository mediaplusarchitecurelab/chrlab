{"ast":null,"code":"import * as THREE from 'three';\nimport * as dat from 'dat.gui';\nimport agentAGV from './agentAGV';\nimport agentCONTAINER from './agentCONTAINER';\nimport agentSTOCK from './agentSTOCK';\nimport agentRA from './agentRA';\nimport agentProduct from './agentProduct';\nimport taskReplenish from './taskReplenish';\nimport taskSchedule from './taskSchedule';\nexport default (scene => {\n  const maxParticleCount = 1000;\n  const particleCount = 100;\n  const w = 800.0;\n  const h = 450.0;\n  const d = 1200.0;\n  const r = 800.0;\n  const effectController = {\n    showDots: true,\n    showLines: true,\n    limitConnections: false,\n    maxConnections: 20,\n    particleCount: 200,\n    AGV_X: 0,\n    AGV_Y: 0,\n    RA_Height: 1,\n    stockProduct: 'loading...',\n    productName: 'input...[p-3]',\n    task: false,\n    task_con_num: 25,\n    task_Time: 0,\n    task_execute: false\n  };\n  const group = new THREE.Group();\n  const customContainer = document.getElementById('canvas-gui-container');\n  var stocksize = new THREE.Vector3(75.0, 60.0, 75.0);\n  var consize = new THREE.Vector3(45.0, 45.0, 45.0);\n  var congap = new THREE.Vector3(5.0, 5.0, 5.0);\n  var agvsize = new THREE.Vector3(60.0, 25.0, 60.0);\n  var particles;\n  var particlesData = [];\n  var positions, colors;\n  var pointCloud;\n  var particlePositions;\n  var linesMesh;\n  var gui = new dat.GUI({\n    autoPlace: false\n  });\n  var cons = [];\n  var stocks = [];\n  var tasks;\n  var agv, ra, stock;\n  var task, selcon, selstock;\n  var conRow = 3;\n  var conCol = 6;\n  var stockRow = 2;\n  var stockCol = 9;\n  var stockTable, conTable, tasksTable, msg;\n  var stockval = '';\n  var conval = '';\n  var tasksval = '';\n  var msgval = 'wait for new task, input productName...';\n  var nowtask = 0;\n  var animate = false; // =========CONSTANT==========\n  // GUI\n\n  function initGUI() {\n    var f1 = gui.addFolder('MANNUAL');\n    var f2 = gui.addFolder('TASK');\n    var f3 = gui.addFolder('EXECUTE');\n    f1.add(effectController, \"AGV_X\", -0.5 * w, 0.5 * w).listen();\n    f1.add(effectController, \"AGV_Y\", -0.5 * d, 0.5 * d).listen();\n    f1.add(effectController, \"RA_Height\", 1.0, 300.0).listen();\n    f2.add(effectController, \"stockProduct\").listen();\n    f2.add(effectController, \"productName\").onFinishChange(v => {\n      if (!effectController.task) {\n        let f = -1;\n        cons.some((c, i) => {\n          if (c.prop.type) {\n            if (c.prop.type === v) {\n              f = i;\n              return true;\n            }\n          }\n        });\n        let sf = -1;\n        stocks.some((st, i) => {\n          if (st.prop.type) {\n            if (st.prop.type === v) {\n              sf = i;\n              return true;\n            }\n          }\n        });\n\n        if (sf >= 0 && f >= 0) {\n          selcon = cons[f];\n          selstock = stocks[sf];\n          selstock.setSel();\n          selcon.setSel(); //effectController.taskmessage='select: '+selcon.prop.id+' & '+selstock.prop.id;\n\n          if (task) {\n            task.setTask(agv, selcon, selstock);\n          }\n        } else {//effectController.taskmessage='no product...';\n        }\n      }\n    }).listen();\n    f2.add(effectController, \"task\").onChange(v => {\n      if (v) {\n        //console.log(selcon);\n        if (selcon) {\n          if (selcon.prop.state === 0) {\n            task = new taskReplenish(agv, selcon, selstock);\n            task.setTask(agv, selcon, selstock);\n            task.setId('t-' + nowtask);\n          } else {\n            // err 1 = clear container\n            msgval = 'wait for clear conatiner, [' + selcon.prop.id + '] is full...';\n\n            if (selstock.prop.state === 0) {\n              msgval += '</br>' + 'wait for refill product, [' + selstock.prop.id + '] is empty...';\n            }\n\n            effectController.task = false;\n          }\n        } else if (selstock) {\n          // err 2 = refill product\n          if (selstock.prop.state === 0) {\n            msgval = 'wait for refill product, [' + selstock.prop.id + '] is empty...';\n            effectController.task = false;\n          }\n        } else {\n          //effectController.taskmessage = 'change productName...'\n          effectController.task = false;\n        }\n      } else {\n        if (task) {\n          if (task.prop.state > 220.0 / 240.0) {\n            selcon.setContain(task.prop.product);\n            selstock.setRemove(task.prop.product);\n            ra.setRemove();\n            task.prop.product.setPosition(selcon.prop.basecen);\n          } else {\n            ra.setRemove();\n            selstock.addContain(task.prop.product);\n            selcon.setRemove();\n          }\n        }\n\n        task = null;\n        selstock.setDesel();\n        selcon.setDesel(); //effectController.taskmessage = 'change productName...'\n\n        effectController.productName = 'input ex. [p-3]';\n        msgval = 'wait for next task, input productName...';\n      }\n    }).listen();\n    f2.add(effectController, \"task_Time\", 0, 240).listen();\n    f3.add(effectController, \"task_execute\").onChange(v => {\n      if (v) {\n        animate = true;\n      } else {\n        animate = false;\n      }\n    });\n    f1.open();\n    f2.open();\n    f3.open();\n    customContainer.appendChild(gui.domElement);\n  } // =========EXCUTE==========\n\n\n  init();\n\n  function init() {\n    initGUI();\n    const helper = new THREE.BoxHelper(new THREE.Mesh(new THREE.BoxBufferGeometry(w, h, d)));\n    helper.material.color.setHex(0x101010);\n    helper.material.blending = THREE.AdditiveBlending;\n    helper.material.transparent = true;\n    group.add(helper);\n    scene.add(group); // agents create\n\n    agv = new agentAGV(new THREE.Vector3(effectController.AGV_X, h * -0.5, effectController.AGV_Y), scene);\n    agv.setSize(agvsize);\n    ra = new agentRA(1, scene);\n    ra.setAGV(agv);\n\n    for (let i = 1; i < stockRow + 1; i += 1) {\n      for (let j = 0; j < stockCol; j += 1) {\n        let stock = new agentSTOCK(new THREE.Vector3(w * 0.5 - stocksize.x * 0.5 + congap.x, h * -0.5 + agvsize.y + stocksize.y * i + congap.y * i, stocksize.z * -0.5 * stockCol + stocksize.z * 0.5 + stocksize.z * j + congap.z * j), scene);\n        stock.setSize(stocksize);\n        stock.setId('st-' + i + '-' + j);\n        stock.setType('p-' + ((i - 1) * stockCol + j));\n\n        for (let k = 0; k < Math.floor(Math.random() * 5) + 1; k += 1) {\n          let p = new agentProduct(stock.prop.basecen, 'p-' + ((i - 1) * stockCol + j), scene); //console.log(p.prop.type);\n\n          p.setId('psn-' + p.prop.type + '-' + k);\n          stock.addContain(p);\n        }\n\n        stocks.push(stock);\n      }\n    }\n\n    for (let i = 1; i < conRow + 1; i += 1) {\n      for (let j = 0; j < conCol; j += 1) {\n        let con = new agentCONTAINER(new THREE.Vector3(w * -0.5 + consize.x * 0.5 + congap.x, h * -0.5 + agvsize.y + consize.y * i + congap.y * i, consize.z * -0.5 * conCol + consize.z * 0.5 + consize.z * j + congap.z * j), scene);\n        con.setSize(consize);\n        con.setId('con-' + i + '-' + j);\n        con.setType('p-' + ((i - 1) * conCol + j)); //let p =  new agentProduct(con.prop.basecen,'p-'+Math.floor(Math.random()*8),scene);\n        //con.setContain(p);\n\n        cons.push(con);\n      }\n    }\n\n    stockTable = document.getElementById('stockdata');\n    conTable = document.getElementById('condata');\n    tasksTable = document.getElementById('tasksdata');\n    msg = document.getElementById('msgdata');\n    tasks = new taskSchedule(agv, cons, stocks); //document.addEventListener('DOMContentLoaded',function(){\n    //    console.log(document.getElementsByClassName(\"stockli\")[0]);\n    //},false);\n  }\n\n  function update(time) {\n    // ANIMATE\n    if (animate) {\n      if (task) {\n        if (effectController.task_Time < 240) {\n          effectController.task = true;\n          tasks.run();\n          effectController.task_Time = tasks.getTime();\n        } else {\n          tasks.removeTaskByStock(selstock);\n          task = null;\n          selstock.setDesel();\n          selcon.setDesel();\n          tasks.tasksUpdate();\n          effectController.task = false;\n          effectController.task_Time = 0;\n        }\n      } else {\n        if (tasks.prop.table.length > 0) {\n          agv = tasks.prop.table[0].agv;\n          selcon = tasks.prop.table[0].con;\n          selstock = tasks.prop.table[0].stock;\n          selstock.setSel();\n          selcon.setSel();\n          task = new taskReplenish(agv, selcon, selstock);\n          task.setTask(agv, selcon, selstock);\n          task.setId('t-' + nowtask);\n          effectController.productName = selcon.prop.type;\n        } else {\n          msgval = tasks.getConclude();\n          tasks.tasksUpdate();\n        }\n      }\n\n      if (!effectController.task) {\n        effectController.task_Time = 0;\n      }\n    } else {\n      if (!effectController.task) {\n        effectController.task_Time = 0;\n      }\n    }\n\n    if (task) {\n      task.Progress(effectController.task_Time);\n      effectController.AGV_X = agv.prop.basecen.x;\n      effectController.AGV_Y = agv.prop.basecen.z;\n      effectController.RA_Height = ra.prop.height;\n      msgval = task.getMsg();\n    } else {\n      agv.setPosition(new THREE.Vector3(effectController.AGV_X, h * -0.5, effectController.AGV_Y));\n      ra.setHeight(effectController.RA_Height);\n    }\n\n    if (selstock) {\n      if (selstock.prop.contain.length > 0) {\n        effectController.stockProduct = selstock.prop.contain.length + ' products';\n      } else {\n        effectController.stockProduct = 'no product...';\n      }\n    } // UI\n\n\n    let stockval = '<div>STOCK</div><ul>';\n\n    if (stocks.length > 0) {\n      stocks.forEach((s, i) => {\n        stockval += s.getInfo();\n      });\n      stockTable.innerHTML = stockval + '</ul>';\n      stocks.forEach((s, i) => {\n        s.assignDom();\n      });\n    }\n\n    let conval = '<div>CONTAINER</div><ul>';\n\n    if (cons.length > 0) {\n      cons.forEach((c, i) => {\n        conval += c.getInfo();\n      });\n      conTable.innerHTML = conval + '</ul>';\n      cons.forEach((c, i) => {\n        c.assignDom();\n      });\n    }\n\n    let tasksval = '<div>TASKSCHEDULE</div><ul>';\n\n    if (tasks.prop.table.length > 0) {\n      tasks.prop.table.forEach((t, i) => {\n        tasksval += tasks.getInfo(i, animate);\n      });\n      tasksTable.innerHTML = tasksval + '</ul>';\n    } else {\n      tasksTable.innerHTML = tasksval + '<li>waiting for replenish stocks...</li>' + '</ul>';\n    }\n\n    msg.innerHTML = msgval; // listener\n    //console.log(document.getElementsByClassName(\"stockli\"));\n  }\n\n  return {\n    update\n  };\n});","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/StorageStorejs/threejs/SceneSubject.js"],"names":["THREE","dat","agentAGV","agentCONTAINER","agentSTOCK","agentRA","agentProduct","taskReplenish","taskSchedule","scene","maxParticleCount","particleCount","w","h","d","r","effectController","showDots","showLines","limitConnections","maxConnections","AGV_X","AGV_Y","RA_Height","stockProduct","productName","task","task_con_num","task_Time","task_execute","group","Group","customContainer","document","getElementById","stocksize","Vector3","consize","congap","agvsize","particles","particlesData","positions","colors","pointCloud","particlePositions","linesMesh","gui","GUI","autoPlace","cons","stocks","tasks","agv","ra","stock","selcon","selstock","conRow","conCol","stockRow","stockCol","stockTable","conTable","tasksTable","msg","stockval","conval","tasksval","msgval","nowtask","animate","initGUI","f1","addFolder","f2","f3","add","listen","onFinishChange","v","f","some","c","i","prop","type","sf","st","setSel","setTask","onChange","state","setId","id","setContain","product","setRemove","setPosition","basecen","addContain","setDesel","open","appendChild","domElement","init","helper","BoxHelper","Mesh","BoxBufferGeometry","material","color","setHex","blending","AdditiveBlending","transparent","setSize","setAGV","j","x","y","z","setType","k","Math","floor","random","p","push","con","update","time","run","getTime","removeTaskByStock","tasksUpdate","table","length","getConclude","Progress","height","getMsg","setHeight","contain","forEach","s","getInfo","innerHTML","assignDom","t"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\r\nimport * as dat from 'dat.gui';\r\nimport agentAGV from './agentAGV';\r\nimport agentCONTAINER from './agentCONTAINER';\r\nimport agentSTOCK from './agentSTOCK';\r\nimport agentRA from './agentRA';\r\nimport agentProduct from './agentProduct';\r\n\r\nimport taskReplenish from './taskReplenish';\r\nimport taskSchedule from './taskSchedule';\r\n\r\nexport default scene => {\r\n    const maxParticleCount = 1000;\r\n    const particleCount = 100;    \r\n    const w = 800.0;\r\n    const h = 450.0;\r\n    const d = 1200.0;\r\n    const r =800.0;\r\n    const effectController = {\r\n                showDots: true,\r\n                showLines: true,\r\n                limitConnections: false,\r\n                maxConnections: 20,\r\n                particleCount: 200,\r\n                AGV_X:0,\r\n                AGV_Y:0,\r\n                RA_Height:1,\r\n                stockProduct:'loading...',\r\n                productName:'input...[p-3]',\r\n                task: false,\r\n                task_con_num:25,\r\n                task_Time:0,\r\n                task_execute:false\r\n        };\r\n    const group = new THREE.Group();\r\n    const customContainer = document.getElementById('canvas-gui-container');\r\n\r\n    var stocksize = new THREE.Vector3(75.0,60.0,75.0);\r\n    var consize = new THREE.Vector3(45.0,45.0,45.0);\r\n    var congap = new THREE.Vector3(5.0,5.0,5.0);\r\n    var agvsize = new THREE.Vector3(60.0,25.0,60.0);\r\n\r\n    var particles;\r\n    var particlesData = [];\r\n    var positions, colors;\r\n    var pointCloud;\r\n    var particlePositions;\r\n    var linesMesh;\r\n    var gui = new dat.GUI({ autoPlace: false }); \r\n\r\n    var cons=[];\r\n    var stocks=[];\r\n    var tasks;\r\n    var agv,ra,stock;\r\n    var task,selcon, selstock;\r\n    var conRow = 3\r\n    var conCol = 6;\r\n    var stockRow = 2\r\n    var stockCol = 9;\r\n    var stockTable, conTable, tasksTable, msg;\r\n    var stockval='';\r\n    var conval='';\r\n    var tasksval='';\r\n    var msgval='wait for new task, input productName...';\r\n    var nowtask=0;\r\n    var animate=false;\r\n    // =========CONSTANT==========\r\n    // GUI\r\n    function initGUI() {\r\n        var f1 = gui.addFolder('MANNUAL');\r\n        var f2 = gui.addFolder('TASK');\r\n        var f3 = gui.addFolder('EXECUTE');\r\n        f1.add( effectController, \"AGV_X\", -0.5*w, 0.5*w ).listen();\r\n        f1.add( effectController, \"AGV_Y\", -0.5*d, 0.5*d ).listen();\r\n        f1.add( effectController, \"RA_Height\", 1.0, 300.0 ).listen();\r\n        f2.add( effectController, \"stockProduct\").listen();\r\n        f2.add( effectController, \"productName\" ).onFinishChange((v)=> {\r\n            if (!effectController.task){\r\n                let f = -1;\r\n                cons.some((c,i)=>{\r\n                    if (c.prop.type){\r\n                        if(c.prop.type===v){\r\n                            f =i;\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n                let sf = -1;\r\n                stocks.some((st,i)=>{\r\n                    if (st.prop.type){\r\n                        if(st.prop.type===v){\r\n                            sf =i;\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n                if (sf>=0 && f>=0){\r\n                    selcon = cons[f];\r\n                    selstock = stocks[sf];\r\n                    selstock.setSel();\r\n                    selcon.setSel();\r\n                    //effectController.taskmessage='select: '+selcon.prop.id+' & '+selstock.prop.id;\r\n                    if (task){\r\n                        task.setTask(agv,selcon,selstock);\r\n                    }\r\n                }else{\r\n                    //effectController.taskmessage='no product...';\r\n                }\r\n            }\r\n        }).listen();\r\n        f2.add( effectController, \"task\" ).onChange( (v)=> {\r\n            if (v){\r\n                //console.log(selcon);\r\n                if (selcon){\r\n                    if (selcon.prop.state===0){\r\n\r\n                        task=new taskReplenish(agv,selcon,selstock);\r\n                        task.setTask(agv,selcon,selstock);\r\n                        task.setId('t-'+nowtask);\r\n                    }else{\r\n                        // err 1 = clear container\r\n                        msgval = 'wait for clear conatiner, ['+selcon.prop.id+'] is full...';\r\n                        if (selstock.prop.state===0){\r\n                            msgval+='</br>'+'wait for refill product, ['+selstock.prop.id+'] is empty...';\r\n                        }\r\n                        effectController.task=false;\r\n                    }\r\n                }else if (selstock){\r\n                    // err 2 = refill product\r\n                    if (selstock.prop.state===0){\r\n                        msgval = 'wait for refill product, ['+selstock.prop.id+'] is empty...';\r\n                        effectController.task=false;\r\n                    }\r\n                }else{\r\n                    //effectController.taskmessage = 'change productName...'\r\n                        effectController.task=false;\r\n                }\r\n            }else{\r\n                if (task) {\r\n                    if (task.prop.state>220.0/240.0){\r\n                        selcon.setContain(task.prop.product);\r\n                        selstock.setRemove(task.prop.product);\r\n                        ra.setRemove();\r\n                        task.prop.product.setPosition(selcon.prop.basecen);\r\n                    }else{\r\n                        ra.setRemove();\r\n                        selstock.addContain(task.prop.product);\r\n                        selcon.setRemove();\r\n                    }\r\n                }\r\n                task=null;\r\n                selstock.setDesel();\r\n                selcon.setDesel();\r\n                //effectController.taskmessage = 'change productName...'\r\n                effectController.productName = 'input ex. [p-3]';\r\n                msgval='wait for next task, input productName...';\r\n            }\r\n        }).listen();\r\n        f2.add( effectController, \"task_Time\", 0,240 ).listen();\r\n        f3.add( effectController, \"task_execute\" ).onChange( (v)=> {\r\n            if (v){\r\n                animate=true;\r\n            }else{\r\n                animate=false;\r\n            }\r\n        });\r\n        f1.open();\r\n        f2.open();\r\n        f3.open();\r\n        customContainer.appendChild(gui.domElement);                \r\n    }\r\n\r\n    // =========EXCUTE==========\r\n    init();\r\n\r\n    function init() {\r\n        initGUI();\r\n        const helper = new THREE.BoxHelper( new THREE.Mesh( new THREE.BoxBufferGeometry( w, h, d ) ) );\r\n        helper.material.color.setHex( 0x101010 );\r\n        helper.material.blending = THREE.AdditiveBlending;\r\n        helper.material.transparent = true;\r\n        group.add( helper );\r\n        scene.add( group );\r\n\r\n        // agents create\r\n        agv = new agentAGV(new THREE.Vector3(effectController.AGV_X,h*-0.5,effectController.AGV_Y),scene);\r\n        agv.setSize(agvsize);\r\n        ra = new agentRA(1,scene);\r\n        ra.setAGV(agv);\r\n\r\n        for(let i=1;i<stockRow+1;i+=1){\r\n            for(let j=0;j<stockCol;j+=1){\r\n                let stock = new agentSTOCK(new THREE.Vector3( w*0.5-stocksize.x*0.5+congap.x,\r\n                                                            h*-0.5+agvsize.y+stocksize.y*i+congap.y*i,\r\n                                                            stocksize.z*-0.5*stockCol+stocksize.z*0.5+stocksize.z*j+congap.z*j),scene);\r\n                stock.setSize(stocksize);\r\n                stock.setId('st-'+i+'-'+j);\r\n                stock.setType('p-'+((i-1)*stockCol+j));\r\n                for(let k=0;k<Math.floor(Math.random()*5)+1;k+=1){\r\n                    let p =  new agentProduct(stock.prop.basecen,'p-'+((i-1)*stockCol+j),scene);\r\n                    //console.log(p.prop.type);\r\n                    p.setId('psn-'+p.prop.type+'-'+k);\r\n                    stock.addContain(p);\r\n                }\r\n                stocks.push(stock);\r\n            }\r\n        }\r\n        for(let i=1;i<conRow+1;i+=1){\r\n            for(let j=0;j<conCol;j+=1){\r\n                let con = new agentCONTAINER(new THREE.Vector3( w*-0.5+consize.x*0.5+congap.x,\r\n                                                                h*-0.5+agvsize.y+consize.y*i+congap.y*i,\r\n                                                                consize.z*-0.5*conCol+consize.z*0.5+consize.z*j+congap.z*j),scene);\r\n                con.setSize(consize);\r\n                con.setId('con-'+i+'-'+j);\r\n                con.setType('p-'+((i-1)*conCol+j));\r\n                //let p =  new agentProduct(con.prop.basecen,'p-'+Math.floor(Math.random()*8),scene);\r\n                //con.setContain(p);\r\n                cons.push(con);\r\n            }\r\n        }\r\n        stockTable = document.getElementById('stockdata');\r\n        conTable = document.getElementById('condata');\r\n        tasksTable = document.getElementById('tasksdata');\r\n        msg = document.getElementById('msgdata');\r\n        tasks = new taskSchedule(agv,cons,stocks);\r\n\r\n\r\n        //document.addEventListener('DOMContentLoaded',function(){\r\n        //    console.log(document.getElementsByClassName(\"stockli\")[0]);\r\n        //},false);\r\n    }\r\n    function update(time) {\r\n        \r\n        // ANIMATE\r\n        if (animate){\r\n            if (task){\r\n                if (effectController.task_Time<240){\r\n                    effectController.task = true;\r\n                    tasks.run();\r\n                    effectController.task_Time = tasks.getTime();\r\n                }else{\r\n                    tasks.removeTaskByStock(selstock);\r\n                    task=null;\r\n                    selstock.setDesel();\r\n                    selcon.setDesel();\r\n                    tasks.tasksUpdate();\r\n                    effectController.task = false;\r\n                    effectController.task_Time = 0;\r\n                }\r\n            }else{\r\n                if (tasks.prop.table.length>0){\r\n                    agv = tasks.prop.table[0].agv;\r\n                    selcon = tasks.prop.table[0].con;\r\n                    selstock = tasks.prop.table[0].stock;\r\n                    selstock.setSel();\r\n                    selcon.setSel();\r\n                    task=new taskReplenish(agv,selcon,selstock);\r\n                    task.setTask(agv,selcon,selstock);\r\n                    task.setId('t-'+nowtask);\r\n                    effectController.productName = selcon.prop.type;\r\n                }else{\r\n                    msgval = tasks.getConclude();\r\n                    tasks.tasksUpdate();\r\n                }\r\n            }\r\n            if (!effectController.task){\r\n                effectController.task_Time = 0;\r\n            }\r\n        }else{\r\n            if (!effectController.task){\r\n                effectController.task_Time = 0;\r\n            }\r\n        }\r\n\r\n        if (task){\r\n            task.Progress(effectController.task_Time);\r\n            effectController.AGV_X = agv.prop.basecen.x;\r\n            effectController.AGV_Y = agv.prop.basecen.z;\r\n            effectController.RA_Height = ra.prop.height;\r\n            msgval = task.getMsg();\r\n        }else{\r\n            agv.setPosition(new THREE.Vector3(effectController.AGV_X,h*-0.5,effectController.AGV_Y));\r\n            ra.setHeight(effectController.RA_Height);\r\n        }\r\n        if (selstock){\r\n            if (selstock.prop.contain.length>0){\r\n                effectController.stockProduct = selstock.prop.contain.length + ' products';\r\n            }else{\r\n                effectController.stockProduct = 'no product...';\r\n            }\r\n        }\r\n        // UI\r\n        let stockval = '<div>STOCK</div><ul>';\r\n            if (stocks.length>0){\r\n                stocks.forEach((s,i)=>{\r\n                    stockval+=s.getInfo();\r\n                });\r\n                stockTable.innerHTML=stockval+'</ul>';\r\n                stocks.forEach((s,i)=>{\r\n                    s.assignDom();\r\n                });\r\n            }\r\n\r\n        let conval = '<div>CONTAINER</div><ul>';\r\n            if (cons.length>0){\r\n                cons.forEach((c,i)=>{\r\n                    conval+=c.getInfo();\r\n                });\r\n                conTable.innerHTML=conval+'</ul>';\r\n                cons.forEach((c,i)=>{\r\n                    c.assignDom();\r\n                });\r\n            }\r\n        let tasksval = '<div>TASKSCHEDULE</div><ul>';\r\n            if (tasks.prop.table.length>0){\r\n                tasks.prop.table.forEach((t,i)=>{\r\n                    tasksval+=tasks.getInfo(i, animate);\r\n                });\r\n                tasksTable.innerHTML=tasksval+'</ul>';\r\n            }else{\r\n                tasksTable.innerHTML=tasksval+'<li>waiting for replenish stocks...</li>'+'</ul>';\r\n            }\r\n        msg.innerHTML=msgval;\r\n        // listener\r\n        //console.log(document.getElementsByClassName(\"stockli\"));\r\n    }\r\n    return {\r\n        update\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}