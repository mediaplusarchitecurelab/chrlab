{"ast":null,"code":"var _jsxFileName = \"D:\\\\chrlab\\\\src\\\\component\\\\panelComponent\\\\lrtabComponent.js\";\nimport React from 'react';\nimport { Image, Grid, Header, Tab } from 'semantic-ui-react';\nimport Slider from \"react-slick\";\nimport styled from 'styled-components'; // 匯入 slick的css\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"; // stlyed \n//======================panel======================\n\nconst LRPanelContain = styled.div`\n    width:100%;\n    padding:1.5em 1.5em 1.5em 1.5em;\n    top: 1.5em;\n    overflow: 'auto';\n    height:69vh;\n    .txtcontent{\n      text-align:justify;\n    }\n\t`;\n\nclass LRTabComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTabChange = (e, {\n      activeIndex\n    }) => {\n      this.setState({\n        activegroup: activeIndex\n      });\n    };\n\n    this.state = {\n      width: 0,\n      height: 0,\n      activedata: this.props.activedata,\n      contentdata: this.props.contentdata,\n      activegroup: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  } // ==================RESIZE=======================\n\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  // ==================LAYOUT=======================\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true\n    };\n\n    const itemspllit = (str, p) => {\n      let ar = str.split(p);\n      let datastr = [];\n\n      for (let i = 0; i < ar.length; i += 1) {\n        datastr.push( /*#__PURE__*/React.createElement(\"p\", {\n          key: `item-${ar[i]}`,\n          style: {\n            lineHeight: '1em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }\n        }, ar[i]));\n      }\n\n      return datastr;\n    };\n\n    const tabcontent = (data, id) => {\n      let contdata = [];\n      contdata.push( /*#__PURE__*/React.createElement(Header, {\n        key: `header-${id}`,\n        as: \"h2\",\n        style: {\n          fontFamily: 'Titillium Web'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, data.topic[id]));\n      contdata.push( /*#__PURE__*/React.createElement(Header, {\n        key: `info-${id}`,\n        as: \"h5\",\n        style: {\n          fontFamily: 'Titillium Web'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, data.info[id]));\n      return contdata;\n    };\n\n    const panelrender = () => {\n      //console.log(this.state.activedata);\n      let til = this.state.activedata.title; //let tilup = til.toUpperCase();\n\n      let cont = this.state.contentdata;\n      let panelcontent = [];\n      let grouppanes = [];\n\n      for (let i = 0; i < cont.topic.length; i += 1) {\n        if (this.state.activedata.filename === 'preliminary') {\n          grouppanes.push({\n            menuItem: `Group${i}`,\n            render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 67\n              }\n            }, tabcontent(cont, i))\n          });\n        } else if (this.state.activedata.filename === 'precedents') {\n          grouppanes.push({\n            menuItem: `Keynote${i}`,\n            render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 69\n              }\n            }, tabcontent(cont, i))\n          });\n        }\n      }\n\n      let elements = id => {\n        let picdata = [];\n\n        for (let i = 0; i < cont.pic1path[id].length; i += 1) {\n          picdata.push( /*#__PURE__*/React.createElement(Image, {\n            src: `${cont.pic1path[id][i]}`,\n            key: `${cont.topic[id]}-img-${i}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 24\n            }\n          }));\n        }\n\n        return picdata;\n      };\n\n      if (this.state.width < 640) {\n        panelcontent.push( /*#__PURE__*/React.createElement(Grid, {\n          key: `${til}-grid`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid.Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 18\n          }\n        }), elements(this.state.activegroup)))), /*#__PURE__*/React.createElement(Grid.Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h2\",\n          style: {\n            fontFamily: 'Titillium Web'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        }, til.toUpperCase()))));\n      } else {\n        let cl = this.state.width < 900 ? 8 : 5;\n        panelcontent.push( /*#__PURE__*/React.createElement(Grid, {\n          key: `${til}-grid`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Grid.Row, {\n          style: {\n            height: '54vh'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: cl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        }), elements(this.state.activegroup))), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 16 - cl,\n          className: \"txtcontent\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Tab, {\n          panes: grouppanes,\n          activeIndex: this.state.activegroup,\n          onTabChange: this.handleTabChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Grid.Row, {\n          divided: true,\n          style: {\n            height: '3vh'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h6\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, \"[Lecture]\"), /*#__PURE__*/React.createElement(Header, {\n          as: \"h5\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'right',\n            marginTop: '-0.5em',\n            inlineHeight: '0.05em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }\n        }, itemspllit(cont.lecture[this.state.activegroup], \"| \"))), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h6\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }\n        }, \"[Members]\"), /*#__PURE__*/React.createElement(Header, {\n          as: \"h5\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left',\n            marginTop: '-0.5em',\n            inlineHeight: '0.05em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }\n        }, itemspllit(cont.members[this.state.activegroup], \"| \"))), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h6\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }\n        }, \"[Hardware]\"), /*#__PURE__*/React.createElement(Header, {\n          as: \"h5\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left',\n            marginTop: '-0.5em',\n            inlineHeight: '0.05em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        }, itemspllit(cont.hardware[this.state.activegroup], \"| \"))), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h6\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        }, \"[Software]\"), /*#__PURE__*/React.createElement(Header, {\n          as: \"h5\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left',\n            marginTop: '-0.5em',\n            inlineHeight: '0.05em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }\n        }, itemspllit(cont.software[this.state.activegroup], \"| \"))), /*#__PURE__*/React.createElement(Grid.Column, {\n          width: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          as: \"h6\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }\n        }, \"[Material]\"), /*#__PURE__*/React.createElement(Header, {\n          as: \"h5\",\n          style: {\n            fontFamily: 'Titillium Web',\n            textAlign: 'left',\n            marginTop: '-0.5em',\n            inlineHeight: '0.05em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        }, itemspllit(cont.materials[this.state.activegroup], \"| \"))))));\n      }\n\n      return panelcontent;\n    };\n\n    return /*#__PURE__*/React.createElement(LRPanelContain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, panelrender());\n  }\n\n}\n\nexport default LRTabComponent;","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/lrtabComponent.js"],"names":["React","Image","Grid","Header","Tab","Slider","styled","LRPanelContain","div","LRTabComponent","Component","constructor","props","handleTabChange","e","activeIndex","setState","activegroup","state","width","height","activedata","contentdata","updateWindowDimensions","bind","window","innerWidth","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","itemspllit","str","p","ar","split","datastr","i","length","push","lineHeight","tabcontent","data","id","contdata","fontFamily","topic","info","panelrender","til","title","cont","panelcontent","grouppanes","filename","menuItem","elements","picdata","pic1path","toUpperCase","cl","textAlign","marginTop","inlineHeight","lecture","members","hardware","software","materials"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport Slider from \"react-slick\";\r\nimport styled from 'styled-components';\r\n\r\n// 匯入 slick的css\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst LRPanelContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: 'auto';\r\n    height:69vh;\r\n    .txtcontent{\r\n      text-align:justify;\r\n    }\r\n\t`;\r\n \r\nclass LRTabComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activedata: this.props.activedata,\r\n        contentdata: this.props.contentdata,\r\n        activegroup:0\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  handleTabChange = (e, { activeIndex }) => {\r\n    this.setState({ activegroup: activeIndex });\r\n  }\r\n  // ==================LAYOUT=======================\r\n  render() {\r\n  const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay: true\r\n  };\r\n  \r\n  const itemspllit =(str,p)=>{\r\n    let ar=str.split(p);\r\n    let datastr=[];\r\n    for (let i=0;i<ar.length;i+=1){\r\n      datastr.push(<p key={`item-${ar[i]}`} style={{lineHeight: '1em'}}>{ar[i]}</p>);\r\n    }\r\n    return datastr;\r\n  }\r\n\r\n  const tabcontent = (data, id)=>{\r\n    let contdata =[];\r\n      contdata.push(<Header key={`header-${id}`} as='h2' style={{fontFamily: 'Titillium Web'}}>{data.topic[id]}</Header>);\r\n      contdata.push(<Header key={`info-${id}`} as='h5' style={{fontFamily: 'Titillium Web'}}>{data.info[id]}</Header>);\r\n    return contdata;\r\n  }\r\n\r\n  const panelrender =()=>{\r\n      //console.log(this.state.activedata);\r\n\r\n      let til = this.state.activedata.title;\r\n      //let tilup = til.toUpperCase();\r\n      let cont = this.state.contentdata;\r\n\r\n      let panelcontent=[];\r\n\r\n      let grouppanes = [];\r\n      for (let i=0;i<cont.topic.length;i+=1){\r\n\r\n          if (this.state.activedata.filename==='preliminary'){\r\n            grouppanes.push({menuItem: `Group${i}`, render: () => <Tab.Pane>{tabcontent(cont, i)}</Tab.Pane>});\r\n          }else if(this.state.activedata.filename==='precedents'){\r\n            grouppanes.push({menuItem: `Keynote${i}`, render: () => <Tab.Pane>{tabcontent(cont, i)}</Tab.Pane>});\r\n          }\r\n      }\r\n\r\n      let elements=(id)=>{\r\n        let picdata=[];\r\n        for (let i=0;i<cont.pic1path[id].length;i+=1){\r\n          picdata.push(<Image src={`${cont.pic1path[id][i]}`} key={`${cont.topic[id]}-img-${i}`}/>);\r\n        }\r\n        return picdata;\r\n      }\r\n\r\n      if (this.state.width<640){\r\n        panelcontent.push(\r\n            <Grid key={`${til}-grid`}>\r\n              <Grid.Row>\r\n                <div>\r\n                 <Slider {...settings}>\r\n                    {elements(this.state.activegroup)}\r\n                 </Slider>\r\n                </div>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                  <Header as='h2' style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n              </Grid.Row>\r\n              </Grid>\r\n            );\r\n      }else{\r\n        let cl = (this.state.width<900)?8:5;\r\n        panelcontent.push(\r\n          <Grid key={`${til}-grid`}>\r\n            <Grid.Row style={{height:'54vh'}}>\r\n              <Grid.Column width={cl}>\r\n                <Slider {...settings}>\r\n                  {elements(this.state.activegroup)}\r\n                </Slider>\r\n              </Grid.Column>\r\n              <Grid.Column width={16-cl} className='txtcontent'>\r\n                <Tab panes={grouppanes} activeIndex={this.state.activegroup} onTabChange={this.handleTabChange}/>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row divided style={{height:'3vh'}}>\r\n              <Grid.Column width={3} >\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'right'}}>[Lecture]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'right',marginTop: '-0.5em', inlineHeight:'0.05em'}}>{itemspllit(cont.lecture[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Members]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left',marginTop: '-0.5em', inlineHeight:'0.05em'}}>{itemspllit(cont.members[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={3} >\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Hardware]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left',marginTop: '-0.5em', inlineHeight:'0.05em'}}>{itemspllit(cont.hardware[this.state.activegroup],\"| \")}</Header>  \r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Software]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left',marginTop: '-0.5em', inlineHeight:'0.05em'}}>{itemspllit(cont.software[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Material]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left',marginTop: '-0.5em', inlineHeight:'0.05em'}}>{itemspllit(cont.materials[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          );\r\n      }\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n    return (\r\n      <LRPanelContain>\r\n          {panelrender()}\r\n      </LRPanelContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LRTabComponent;\r\n"]},"metadata":{},"sourceType":"module"}