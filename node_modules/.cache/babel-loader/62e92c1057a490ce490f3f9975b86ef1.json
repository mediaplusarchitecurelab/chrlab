{"ast":null,"code":"/**\n * @author WestLangley / http://github.com/WestLangley\n */\nimport { Color } from '../math/Color.js';\nimport { LightProbe } from './LightProbe.js';\n\nfunction AmbientLightProbe(color, intensity) {\n  LightProbe.call(this, undefined, intensity);\n  var color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n  this.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n}\n\nAmbientLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n  constructor: AmbientLightProbe,\n  isAmbientLightProbe: true,\n  copy: function (source) {\n    // modifying color not currently supported\n    LightProbe.prototype.copy.call(this, source);\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n    return data;\n  }\n});\nexport { AmbientLightProbe };","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/threejs/src/lights/AmbientLightProbe.js"],"names":["Color","LightProbe","AmbientLightProbe","color","intensity","call","undefined","color1","set","sh","coefficients","r","g","b","multiplyScalar","Math","sqrt","PI","prototype","Object","assign","create","constructor","isAmbientLightProbe","copy","source","toJSON","meta","data"],"mappings":"AAAA;;;AAIA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,iBAAT,CAA4BC,KAA5B,EAAmCC,SAAnC,EAA+C;AAE9CH,EAAAA,UAAU,CAACI,IAAX,CAAiB,IAAjB,EAAuBC,SAAvB,EAAkCF,SAAlC;AAEA,MAAIG,MAAM,GAAG,IAAIP,KAAJ,GAAYQ,GAAZ,CAAiBL,KAAjB,CAAb,CAJ8C,CAM9C;;AACA,OAAKM,EAAL,CAAQC,YAAR,CAAsB,CAAtB,EAA0BF,GAA1B,CAA+BD,MAAM,CAACI,CAAtC,EAAyCJ,MAAM,CAACK,CAAhD,EAAmDL,MAAM,CAACM,CAA1D,EAA8DC,cAA9D,CAA8E,IAAIC,IAAI,CAACC,IAAL,CAAWD,IAAI,CAACE,EAAhB,CAAlF;AAEA;;AAEDf,iBAAiB,CAACgB,SAAlB,GAA8BC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAepB,UAAU,CAACiB,SAA1B,CAAf,EAAsD;AAEnFI,EAAAA,WAAW,EAAEpB,iBAFsE;AAInFqB,EAAAA,mBAAmB,EAAE,IAJ8D;AAMnFC,EAAAA,IAAI,EAAE,UAAWC,MAAX,EAAoB;AAAE;AAE3BxB,IAAAA,UAAU,CAACiB,SAAX,CAAqBM,IAArB,CAA0BnB,IAA1B,CAAgC,IAAhC,EAAsCoB,MAAtC;AAEA,WAAO,IAAP;AAEA,GAZkF;AAcnFC,EAAAA,MAAM,EAAE,UAAWC,IAAX,EAAkB;AAEzB,QAAIC,IAAI,GAAG3B,UAAU,CAACiB,SAAX,CAAqBQ,MAArB,CAA4BrB,IAA5B,CAAkC,IAAlC,EAAwCsB,IAAxC,CAAX,CAFyB,CAIzB;;AAEA,WAAOC,IAAP;AAEA;AAtBkF,CAAtD,CAA9B;AA0BA,SAAS1B,iBAAT","sourcesContent":["/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { Color } from '../math/Color.js';\nimport { LightProbe } from './LightProbe.js';\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nexport { AmbientLightProbe };\n"]},"metadata":{},"sourceType":"module"}