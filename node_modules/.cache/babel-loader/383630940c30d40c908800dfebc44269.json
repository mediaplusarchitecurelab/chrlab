{"ast":null,"code":"import { Object3D } from '../core/Object3D.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n  Object3D.call(this);\n  this.type = 'Scene';\n  this.background = null;\n  this.environment = null;\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n      detail: this\n    })); // eslint-disable-line no-undef\n\n  }\n}\n\nScene.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Scene,\n  isScene: true,\n  copy: function (source, recursive) {\n    Object3D.prototype.copy.call(this, source, recursive);\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.environment !== null) this.environment = source.environment.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n    this.autoUpdate = source.autoUpdate;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    if (this.background !== null) data.object.background = this.background.toJSON(meta);\n    if (this.environment !== null) data.object.environment = this.environment.toJSON(meta);\n    if (this.fog !== null) data.object.fog = this.fog.toJSON();\n    return data;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\nexport { Scene };","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/threejs/src/scenes/Scene.js"],"names":["Object3D","Scene","call","type","background","environment","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","dispatchEvent","CustomEvent","detail","prototype","Object","assign","create","constructor","isScene","copy","source","recursive","clone","matrixAutoUpdate","toJSON","meta","data","object","dispose"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAEA;;;;AAIA,SAASC,KAAT,GAAiB;AAEhBD,EAAAA,QAAQ,CAACE,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,OAAZ;AAEA,OAAKC,UAAL,GAAkB,IAAlB;AACA,OAAKC,WAAL,GAAmB,IAAnB;AACA,OAAKC,GAAL,GAAW,IAAX;AAEA,OAAKC,gBAAL,GAAwB,IAAxB;AAEA,OAAKC,UAAL,GAAkB,IAAlB,CAZgB,CAYQ;;AAExB,MAAK,OAAOC,kBAAP,KAA8B,WAAnC,EAAiD;AAEhDA,IAAAA,kBAAkB,CAACC,aAAnB,CAAkC,IAAIC,WAAJ,CAAiB,SAAjB,EAA4B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA5B,CAAlC,EAFgD,CAEoC;;AAEpF;AAED;;AAEDX,KAAK,CAACY,SAAN,GAAkBC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAehB,QAAQ,CAACa,SAAxB,CAAf,EAAoD;AAErEI,EAAAA,WAAW,EAAEhB,KAFwD;AAIrEiB,EAAAA,OAAO,EAAE,IAJ4D;AAMrEC,EAAAA,IAAI,EAAE,UAAWC,MAAX,EAAmBC,SAAnB,EAA+B;AAEpCrB,IAAAA,QAAQ,CAACa,SAAT,CAAmBM,IAAnB,CAAwBjB,IAAxB,CAA8B,IAA9B,EAAoCkB,MAApC,EAA4CC,SAA5C;AAEA,QAAKD,MAAM,CAAChB,UAAP,KAAsB,IAA3B,EAAkC,KAAKA,UAAL,GAAkBgB,MAAM,CAAChB,UAAP,CAAkBkB,KAAlB,EAAlB;AAClC,QAAKF,MAAM,CAACf,WAAP,KAAuB,IAA5B,EAAmC,KAAKA,WAAL,GAAmBe,MAAM,CAACf,WAAP,CAAmBiB,KAAnB,EAAnB;AACnC,QAAKF,MAAM,CAACd,GAAP,KAAe,IAApB,EAA2B,KAAKA,GAAL,GAAWc,MAAM,CAACd,GAAP,CAAWgB,KAAX,EAAX;AAE3B,QAAKF,MAAM,CAACb,gBAAP,KAA4B,IAAjC,EAAwC,KAAKA,gBAAL,GAAwBa,MAAM,CAACb,gBAAP,CAAwBe,KAAxB,EAAxB;AAExC,SAAKd,UAAL,GAAkBY,MAAM,CAACZ,UAAzB;AACA,SAAKe,gBAAL,GAAwBH,MAAM,CAACG,gBAA/B;AAEA,WAAO,IAAP;AAEA,GArBoE;AAuBrEC,EAAAA,MAAM,EAAE,UAAWC,IAAX,EAAkB;AAEzB,QAAIC,IAAI,GAAG1B,QAAQ,CAACa,SAAT,CAAmBW,MAAnB,CAA0BtB,IAA1B,CAAgC,IAAhC,EAAsCuB,IAAtC,CAAX;AAEA,QAAK,KAAKrB,UAAL,KAAoB,IAAzB,EAAgCsB,IAAI,CAACC,MAAL,CAAYvB,UAAZ,GAAyB,KAAKA,UAAL,CAAgBoB,MAAhB,CAAwBC,IAAxB,CAAzB;AAChC,QAAK,KAAKpB,WAAL,KAAqB,IAA1B,EAAiCqB,IAAI,CAACC,MAAL,CAAYtB,WAAZ,GAA0B,KAAKA,WAAL,CAAiBmB,MAAjB,CAAyBC,IAAzB,CAA1B;AACjC,QAAK,KAAKnB,GAAL,KAAa,IAAlB,EAAyBoB,IAAI,CAACC,MAAL,CAAYrB,GAAZ,GAAkB,KAAKA,GAAL,CAASkB,MAAT,EAAlB;AAEzB,WAAOE,IAAP;AAEA,GAjCoE;AAmCrEE,EAAAA,OAAO,EAAE,YAAY;AAEpB,SAAKlB,aAAL,CAAoB;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAApB;AAEA;AAvCoE,CAApD,CAAlB;AA6CA,SAASF,KAAT","sourcesContent":["import { Object3D } from '../core/Object3D.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.environment = null;\n\tthis.fog = null;\n\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\n\nexport { Scene };\n"]},"metadata":{},"sourceType":"module"}