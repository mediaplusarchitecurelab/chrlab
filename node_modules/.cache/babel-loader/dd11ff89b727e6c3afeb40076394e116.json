{"ast":null,"code":"import { Light } from './Light.js';\nimport { SpotLightShadow } from './SpotLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight(color, intensity, distance, angle, penumbra, decay) {\n  Light.call(this, color, intensity);\n  this.type = 'SpotLight';\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.target = new Object3D();\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      return this.intensity * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      this.intensity = power / Math.PI;\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.penumbra = penumbra !== undefined ? penumbra : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new SpotLightShadow();\n}\n\nSpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: SpotLight,\n  isSpotLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\nexport { SpotLight };","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/threejs/src/lights/SpotLight.js"],"names":["Light","SpotLightShadow","Object3D","SpotLight","color","intensity","distance","angle","penumbra","decay","call","type","position","copy","DefaultUp","updateMatrix","target","Object","defineProperty","get","Math","PI","set","power","undefined","shadow","prototype","assign","create","constructor","isSpotLight","source","clone"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA;;;;AAIA,SAASC,SAAT,CAAoBC,KAApB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,KAAhD,EAAuDC,QAAvD,EAAiEC,KAAjE,EAAyE;AAExET,EAAAA,KAAK,CAACU,IAAN,CAAY,IAAZ,EAAkBN,KAAlB,EAAyBC,SAAzB;AAEA,OAAKM,IAAL,GAAY,WAAZ;AAEA,OAAKC,QAAL,CAAcC,IAAd,CAAoBX,QAAQ,CAACY,SAA7B;AACA,OAAKC,YAAL;AAEA,OAAKC,MAAL,GAAc,IAAId,QAAJ,EAAd;AAEAe,EAAAA,MAAM,CAACC,cAAP,CAAuB,IAAvB,EAA6B,OAA7B,EAAsC;AACrCC,IAAAA,GAAG,EAAE,YAAY;AAEhB;AACA;AACA,aAAO,KAAKd,SAAL,GAAiBe,IAAI,CAACC,EAA7B;AAEA,KAPoC;AAQrCC,IAAAA,GAAG,EAAE,UAAWC,KAAX,EAAmB;AAEvB;AACA;AACA,WAAKlB,SAAL,GAAiBkB,KAAK,GAAGH,IAAI,CAACC,EAA9B;AAEA;AAdoC,GAAtC;AAiBA,OAAKf,QAAL,GAAkBA,QAAQ,KAAKkB,SAAf,GAA6BlB,QAA7B,GAAwC,CAAxD;AACA,OAAKC,KAAL,GAAeA,KAAK,KAAKiB,SAAZ,GAA0BjB,KAA1B,GAAkCa,IAAI,CAACC,EAAL,GAAU,CAAzD;AACA,OAAKb,QAAL,GAAkBA,QAAQ,KAAKgB,SAAf,GAA6BhB,QAA7B,GAAwC,CAAxD;AACA,OAAKC,KAAL,GAAeA,KAAK,KAAKe,SAAZ,GAA0Bf,KAA1B,GAAkC,CAA/C,CA/BwE,CA+BtB;;AAElD,OAAKgB,MAAL,GAAc,IAAIxB,eAAJ,EAAd;AAEA;;AAEDE,SAAS,CAACuB,SAAV,GAAsBT,MAAM,CAACU,MAAP,CAAeV,MAAM,CAACW,MAAP,CAAe5B,KAAK,CAAC0B,SAArB,CAAf,EAAiD;AAEtEG,EAAAA,WAAW,EAAE1B,SAFyD;AAItE2B,EAAAA,WAAW,EAAE,IAJyD;AAMtEjB,EAAAA,IAAI,EAAE,UAAWkB,MAAX,EAAoB;AAEzB/B,IAAAA,KAAK,CAAC0B,SAAN,CAAgBb,IAAhB,CAAqBH,IAArB,CAA2B,IAA3B,EAAiCqB,MAAjC;AAEA,SAAKzB,QAAL,GAAgByB,MAAM,CAACzB,QAAvB;AACA,SAAKC,KAAL,GAAawB,MAAM,CAACxB,KAApB;AACA,SAAKC,QAAL,GAAgBuB,MAAM,CAACvB,QAAvB;AACA,SAAKC,KAAL,GAAasB,MAAM,CAACtB,KAApB;AAEA,SAAKO,MAAL,GAAce,MAAM,CAACf,MAAP,CAAcgB,KAAd,EAAd;AAEA,SAAKP,MAAL,GAAcM,MAAM,CAACN,MAAP,CAAcO,KAAd,EAAd;AAEA,WAAO,IAAP;AAEA;AArBqE,CAAjD,CAAtB;AA0BA,SAAS7B,SAAT","sourcesContent":["import { Light } from './Light.js';\nimport { SpotLightShadow } from './SpotLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { SpotLight };\n"]},"metadata":{},"sourceType":"module"}