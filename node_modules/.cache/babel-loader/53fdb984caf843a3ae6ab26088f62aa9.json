{"ast":null,"code":"import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshNormalMaterial';\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalMapType = TangentSpaceNormalMap;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshNormalMaterial.prototype = Object.create(Material.prototype);\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalMapType = source.normalMapType;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n\nexport { MeshNormalMaterial };","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/threejs/src/materials/MeshNormalMaterial.js"],"names":["TangentSpaceNormalMap","Material","Vector2","MeshNormalMaterial","parameters","call","type","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","wireframe","wireframeLinewidth","fog","skinning","morphTargets","morphNormals","setValues","prototype","Object","create","constructor","isMeshNormalMaterial","copy","source"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,iBAAtC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAASC,kBAAT,CAA6BC,UAA7B,EAA0C;AAEzCH,EAAAA,QAAQ,CAACI,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,oBAAZ;AAEA,OAAKC,OAAL,GAAe,IAAf;AACA,OAAKC,SAAL,GAAiB,CAAjB;AAEA,OAAKC,SAAL,GAAiB,IAAjB;AACA,OAAKC,aAAL,GAAqBV,qBAArB;AACA,OAAKW,WAAL,GAAmB,IAAIT,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAnB;AAEA,OAAKU,eAAL,GAAuB,IAAvB;AACA,OAAKC,iBAAL,GAAyB,CAAzB;AACA,OAAKC,gBAAL,GAAwB,CAAxB;AAEA,OAAKC,SAAL,GAAiB,KAAjB;AACA,OAAKC,kBAAL,GAA0B,CAA1B;AAEA,OAAKC,GAAL,GAAW,KAAX;AAEA,OAAKC,QAAL,GAAgB,KAAhB;AACA,OAAKC,YAAL,GAAoB,KAApB;AACA,OAAKC,YAAL,GAAoB,KAApB;AAEA,OAAKC,SAAL,CAAgBjB,UAAhB;AAEA;;AAEDD,kBAAkB,CAACmB,SAAnB,GAA+BC,MAAM,CAACC,MAAP,CAAevB,QAAQ,CAACqB,SAAxB,CAA/B;AACAnB,kBAAkB,CAACmB,SAAnB,CAA6BG,WAA7B,GAA2CtB,kBAA3C;AAEAA,kBAAkB,CAACmB,SAAnB,CAA6BI,oBAA7B,GAAoD,IAApD;;AAEAvB,kBAAkB,CAACmB,SAAnB,CAA6BK,IAA7B,GAAoC,UAAWC,MAAX,EAAoB;AAEvD3B,EAAAA,QAAQ,CAACqB,SAAT,CAAmBK,IAAnB,CAAwBtB,IAAxB,CAA8B,IAA9B,EAAoCuB,MAApC;AAEA,OAAKrB,OAAL,GAAeqB,MAAM,CAACrB,OAAtB;AACA,OAAKC,SAAL,GAAiBoB,MAAM,CAACpB,SAAxB;AAEA,OAAKC,SAAL,GAAiBmB,MAAM,CAACnB,SAAxB;AACA,OAAKC,aAAL,GAAqBkB,MAAM,CAAClB,aAA5B;AACA,OAAKC,WAAL,CAAiBgB,IAAjB,CAAuBC,MAAM,CAACjB,WAA9B;AAEA,OAAKC,eAAL,GAAuBgB,MAAM,CAAChB,eAA9B;AACA,OAAKC,iBAAL,GAAyBe,MAAM,CAACf,iBAAhC;AACA,OAAKC,gBAAL,GAAwBc,MAAM,CAACd,gBAA/B;AAEA,OAAKC,SAAL,GAAiBa,MAAM,CAACb,SAAxB;AACA,OAAKC,kBAAL,GAA0BY,MAAM,CAACZ,kBAAjC;AAEA,OAAKE,QAAL,GAAgBU,MAAM,CAACV,QAAvB;AACA,OAAKC,YAAL,GAAoBS,MAAM,CAACT,YAA3B;AACA,OAAKC,YAAL,GAAoBQ,MAAM,CAACR,YAA3B;AAEA,SAAO,IAAP;AAEA,CAxBD;;AA2BA,SAASjB,kBAAT","sourcesContent":["import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n\nexport { MeshNormalMaterial };\n"]},"metadata":{},"sourceType":"module"}