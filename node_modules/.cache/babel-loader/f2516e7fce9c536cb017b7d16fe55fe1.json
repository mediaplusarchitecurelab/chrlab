{"ast":null,"code":"import { Light } from './Light.js';\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight(color, intensity, width, height) {\n  Light.call(this, color, intensity);\n  this.type = 'RectAreaLight';\n  this.width = width !== undefined ? width : 10;\n  this.height = height !== undefined ? height : 10;\n}\n\nRectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: RectAreaLight,\n  isRectAreaLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.width = source.width;\n    this.height = source.height;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Light.prototype.toJSON.call(this, meta);\n    data.object.width = this.width;\n    data.object.height = this.height;\n    return data;\n  }\n});\nexport { RectAreaLight };","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/threejs/src/lights/RectAreaLight.js"],"names":["Light","RectAreaLight","color","intensity","width","height","call","type","undefined","prototype","Object","assign","create","constructor","isRectAreaLight","copy","source","toJSON","meta","data","object"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AAEA;;;;AAIA,SAASC,aAAT,CAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,MAAjD,EAA0D;AAEzDL,EAAAA,KAAK,CAACM,IAAN,CAAY,IAAZ,EAAkBJ,KAAlB,EAAyBC,SAAzB;AAEA,OAAKI,IAAL,GAAY,eAAZ;AAEA,OAAKH,KAAL,GAAeA,KAAK,KAAKI,SAAZ,GAA0BJ,KAA1B,GAAkC,EAA/C;AACA,OAAKC,MAAL,GAAgBA,MAAM,KAAKG,SAAb,GAA2BH,MAA3B,GAAoC,EAAlD;AAEA;;AAEDJ,aAAa,CAACQ,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAeZ,KAAK,CAACS,SAArB,CAAf,EAAiD;AAE1EI,EAAAA,WAAW,EAAEZ,aAF6D;AAI1Ea,EAAAA,eAAe,EAAE,IAJyD;AAM1EC,EAAAA,IAAI,EAAE,UAAWC,MAAX,EAAoB;AAEzBhB,IAAAA,KAAK,CAACS,SAAN,CAAgBM,IAAhB,CAAqBT,IAArB,CAA2B,IAA3B,EAAiCU,MAAjC;AAEA,SAAKZ,KAAL,GAAaY,MAAM,CAACZ,KAApB;AACA,SAAKC,MAAL,GAAcW,MAAM,CAACX,MAArB;AAEA,WAAO,IAAP;AAEA,GAfyE;AAiB1EY,EAAAA,MAAM,EAAE,UAAWC,IAAX,EAAkB;AAEzB,QAAIC,IAAI,GAAGnB,KAAK,CAACS,SAAN,CAAgBQ,MAAhB,CAAuBX,IAAvB,CAA6B,IAA7B,EAAmCY,IAAnC,CAAX;AAEAC,IAAAA,IAAI,CAACC,MAAL,CAAYhB,KAAZ,GAAoB,KAAKA,KAAzB;AACAe,IAAAA,IAAI,CAACC,MAAL,CAAYf,MAAZ,GAAqB,KAAKA,MAA1B;AAEA,WAAOc,IAAP;AAEA;AA1ByE,CAAjD,CAA1B;AA8BA,SAASlB,aAAT","sourcesContent":["import { Light } from './Light.js';\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nexport { RectAreaLight };\n"]},"metadata":{},"sourceType":"module"}