{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.THREE = global.THREE || {});\n})(this, function (exports) {\n  'use strict'; // Polyfills\n\n  if (Number.EPSILON === undefined) {\n    Number.EPSILON = Math.pow(2, -52);\n  }\n\n  if (Number.isInteger === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    Number.isInteger = function (value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    };\n  } //\n\n\n  if (Math.sign === undefined) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n    Math.sign = function (x) {\n      return x < 0 ? -1 : x > 0 ? 1 : +x;\n    };\n  }\n\n  if (Function.prototype.name === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function () {\n        return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n      }\n    });\n  }\n\n  if (Object.assign === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    (function () {\n      Object.assign = function (target) {\n        'use strict';\n\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n\n        return output;\n      };\n    })();\n  }\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n\n  function EventDispatcher() {}\n\n  Object.assign(EventDispatcher.prototype, {\n    addEventListener: function (type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    },\n    hasEventListener: function (type, listener) {\n      if (this._listeners === undefined) return false;\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    },\n    removeEventListener: function (type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    },\n    dispatchEvent: function (event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this;\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  });\n  var REVISION = '86';\n  var MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n  };\n  var CullFaceNone = 0;\n  var CullFaceBack = 1;\n  var CullFaceFront = 2;\n  var CullFaceFrontBack = 3;\n  var FrontFaceDirectionCW = 0;\n  var FrontFaceDirectionCCW = 1;\n  var BasicShadowMap = 0;\n  var PCFShadowMap = 1;\n  var PCFSoftShadowMap = 2;\n  var FrontSide = 0;\n  var BackSide = 1;\n  var DoubleSide = 2;\n  var FlatShading = 1;\n  var SmoothShading = 2;\n  var NoColors = 0;\n  var FaceColors = 1;\n  var VertexColors = 2;\n  var NoBlending = 0;\n  var NormalBlending = 1;\n  var AdditiveBlending = 2;\n  var SubtractiveBlending = 3;\n  var MultiplyBlending = 4;\n  var CustomBlending = 5;\n  var AddEquation = 100;\n  var SubtractEquation = 101;\n  var ReverseSubtractEquation = 102;\n  var MinEquation = 103;\n  var MaxEquation = 104;\n  var ZeroFactor = 200;\n  var OneFactor = 201;\n  var SrcColorFactor = 202;\n  var OneMinusSrcColorFactor = 203;\n  var SrcAlphaFactor = 204;\n  var OneMinusSrcAlphaFactor = 205;\n  var DstAlphaFactor = 206;\n  var OneMinusDstAlphaFactor = 207;\n  var DstColorFactor = 208;\n  var OneMinusDstColorFactor = 209;\n  var SrcAlphaSaturateFactor = 210;\n  var NeverDepth = 0;\n  var AlwaysDepth = 1;\n  var LessDepth = 2;\n  var LessEqualDepth = 3;\n  var EqualDepth = 4;\n  var GreaterEqualDepth = 5;\n  var GreaterDepth = 6;\n  var NotEqualDepth = 7;\n  var MultiplyOperation = 0;\n  var MixOperation = 1;\n  var AddOperation = 2;\n  var NoToneMapping = 0;\n  var LinearToneMapping = 1;\n  var ReinhardToneMapping = 2;\n  var Uncharted2ToneMapping = 3;\n  var CineonToneMapping = 4;\n  var UVMapping = 300;\n  var CubeReflectionMapping = 301;\n  var CubeRefractionMapping = 302;\n  var EquirectangularReflectionMapping = 303;\n  var EquirectangularRefractionMapping = 304;\n  var SphericalReflectionMapping = 305;\n  var CubeUVReflectionMapping = 306;\n  var CubeUVRefractionMapping = 307;\n  var RepeatWrapping = 1000;\n  var ClampToEdgeWrapping = 1001;\n  var MirroredRepeatWrapping = 1002;\n  var NearestFilter = 1003;\n  var NearestMipMapNearestFilter = 1004;\n  var NearestMipMapLinearFilter = 1005;\n  var LinearFilter = 1006;\n  var LinearMipMapNearestFilter = 1007;\n  var LinearMipMapLinearFilter = 1008;\n  var UnsignedByteType = 1009;\n  var ByteType = 1010;\n  var ShortType = 1011;\n  var UnsignedShortType = 1012;\n  var IntType = 1013;\n  var UnsignedIntType = 1014;\n  var FloatType = 1015;\n  var HalfFloatType = 1016;\n  var UnsignedShort4444Type = 1017;\n  var UnsignedShort5551Type = 1018;\n  var UnsignedShort565Type = 1019;\n  var UnsignedInt248Type = 1020;\n  var AlphaFormat = 1021;\n  var RGBFormat = 1022;\n  var RGBAFormat = 1023;\n  var LuminanceFormat = 1024;\n  var LuminanceAlphaFormat = 1025;\n  var RGBEFormat = RGBAFormat;\n  var DepthFormat = 1026;\n  var DepthStencilFormat = 1027;\n  var RGB_S3TC_DXT1_Format = 2001;\n  var RGBA_S3TC_DXT1_Format = 2002;\n  var RGBA_S3TC_DXT3_Format = 2003;\n  var RGBA_S3TC_DXT5_Format = 2004;\n  var RGB_PVRTC_4BPPV1_Format = 2100;\n  var RGB_PVRTC_2BPPV1_Format = 2101;\n  var RGBA_PVRTC_4BPPV1_Format = 2102;\n  var RGBA_PVRTC_2BPPV1_Format = 2103;\n  var RGB_ETC1_Format = 2151;\n  var LoopOnce = 2200;\n  var LoopRepeat = 2201;\n  var LoopPingPong = 2202;\n  var InterpolateDiscrete = 2300;\n  var InterpolateLinear = 2301;\n  var InterpolateSmooth = 2302;\n  var ZeroCurvatureEnding = 2400;\n  var ZeroSlopeEnding = 2401;\n  var WrapAroundEnding = 2402;\n  var TrianglesDrawMode = 0;\n  var TriangleStripDrawMode = 1;\n  var TriangleFanDrawMode = 2;\n  var LinearEncoding = 3000;\n  var sRGBEncoding = 3001;\n  var GammaEncoding = 3007;\n  var RGBEEncoding = 3002;\n  var LogLuvEncoding = 3003;\n  var RGBM7Encoding = 3004;\n  var RGBM16Encoding = 3005;\n  var RGBDEncoding = 3006;\n  var BasicDepthPacking = 3200;\n  var RGBADepthPacking = 3201;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _Math = {\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    generateUUID: function () {\n      // http://www.broofa.com/Tools/Math.uuid.htm\n      var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n      var uuid = new Array(36);\n      var rnd = 0,\n          r;\n      return function generateUUID() {\n        for (var i = 0; i < 36; i++) {\n          if (i === 8 || i === 13 || i === 18 || i === 23) {\n            uuid[i] = '-';\n          } else if (i === 14) {\n            uuid[i] = '4';\n          } else {\n            if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n            r = rnd & 0xf;\n            rnd = rnd >> 4;\n            uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n          }\n        }\n\n        return uuid.join('');\n      };\n    }(),\n    clamp: function (value, min, max) {\n      return Math.max(min, Math.min(max, value));\n    },\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n    euclideanModulo: function (n, m) {\n      return (n % m + m) % m;\n    },\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n    mapLinear: function (x, a1, a2, b1, b2) {\n      return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n    },\n    // https://en.wikipedia.org/wiki/Linear_interpolation\n    lerp: function (x, y, t) {\n      return (1 - t) * x + t * y;\n    },\n    // http://en.wikipedia.org/wiki/Smoothstep\n    smoothstep: function (x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * (3 - 2 * x);\n    },\n    smootherstep: function (x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * x * (x * (x * 6 - 15) + 10);\n    },\n    // Random integer from <low, high> interval\n    randInt: function (low, high) {\n      return low + Math.floor(Math.random() * (high - low + 1));\n    },\n    // Random float from <low, high> interval\n    randFloat: function (low, high) {\n      return low + Math.random() * (high - low);\n    },\n    // Random float from <-range/2, range/2> interval\n    randFloatSpread: function (range) {\n      return range * (0.5 - Math.random());\n    },\n    degToRad: function (degrees) {\n      return degrees * _Math.DEG2RAD;\n    },\n    radToDeg: function (radians) {\n      return radians * _Math.RAD2DEG;\n    },\n    isPowerOfTwo: function (value) {\n      return (value & value - 1) === 0 && value !== 0;\n    },\n    nearestPowerOfTwo: function (value) {\n      return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n    },\n    nextPowerOfTwo: function (value) {\n      value--;\n      value |= value >> 1;\n      value |= value >> 2;\n      value |= value >> 4;\n      value |= value >> 8;\n      value |= value >> 16;\n      value++;\n      return value;\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author philogb / http://blog.thejit.org/\n   * @author egraether / http://egraether.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  function Vector2(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  Object.defineProperties(Vector2.prototype, {\n    \"width\": {\n      get: function () {\n        return this.x;\n      },\n      set: function (value) {\n        this.x = value;\n      }\n    },\n    \"height\": {\n      get: function () {\n        return this.y;\n      },\n      set: function (value) {\n        this.y = value;\n      }\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    isVector2: true,\n    set: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    },\n    multiply: function (v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    },\n    clampScalar: function () {\n      var min = new Vector2();\n      var max = new Vector2();\n      return function clampScalar(minVal, maxVal) {\n        min.set(minVal, minVal);\n        max.set(maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    lengthManhattan: function () {\n      return Math.abs(this.x) + Math.abs(this.y);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    angle: function () {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(this.y, this.x);\n      if (angle < 0) angle += 2 * Math.PI;\n      return angle;\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    },\n    distanceToManhattan: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      return this;\n    },\n    rotateAround: function (center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var textureId = 0;\n\n  function Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n    this.mipmaps = [];\n    this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n    this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n    this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n    this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n    this.format = format !== undefined ? format : RGBAFormat;\n    this.type = type !== undefined ? type : UnsignedByteType;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding !== undefined ? encoding : LinearEncoding;\n    this.version = 0;\n    this.onUpdate = null;\n  }\n\n  Texture.DEFAULT_IMAGE = undefined;\n  Texture.DEFAULT_MAPPING = UVMapping;\n  Object.defineProperty(Texture.prototype, \"needsUpdate\", {\n    set: function (value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(Texture.prototype, EventDispatcher.prototype, {\n    constructor: Texture,\n    isTexture: true,\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    },\n    toJSON: function (meta) {\n      if (meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      function getDataURL(image) {\n        var canvas;\n\n        if (image.toDataURL !== undefined) {\n          canvas = image;\n        } else {\n          canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n          canvas.width = image.width;\n          canvas.height = image.height;\n          canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        if (canvas.width > 2048 || canvas.height > 2048) {\n          return canvas.toDataURL('image/jpeg', 0.6);\n        } else {\n          return canvas.toDataURL('image/png');\n        }\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        wrap: [this.wrapS, this.wrapT],\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = _Math.generateUUID(); // UGH\n        }\n\n        if (meta.images[image.uuid] === undefined) {\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: getDataURL(image)\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      meta.textures[this.uuid] = output;\n      return output;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    },\n    transformUv: function (uv) {\n      if (this.mapping !== UVMapping) return;\n      uv.multiply(this.repeat);\n      uv.add(this.offset);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n    }\n  });\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector4(x, y, z, w) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Vector4.prototype, {\n    isVector4: true,\n    set: function (x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setW: function (w) {\n      this.w = w;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    setAxisAngleFromQuaternion: function (q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    },\n    setAxisAngleFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle,\n          x,\n          y,\n          z,\n          // variables for result\n      epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    },\n    clampScalar: function () {\n      var min, max;\n      return function clampScalar(minVal, maxVal) {\n        if (min === undefined) {\n          min = new Vector4();\n          max = new Vector4();\n        }\n\n        min.set(minVal, minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n    lengthManhattan: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      this.w = attribute.getW(index);\n      return this;\n    }\n  });\n  /**\n   * @author szimek / https://github.com/szimek/\n   * @author alteredq / http://alteredqualia.com/\n   * @author Marius Kintel / https://github.com/kintel\n   */\n\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n  function WebGLRenderTarget(width, height, options) {\n    this.uuid = _Math.generateUUID();\n    this.width = width;\n    this.height = height;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    options = options || {};\n    if (options.minFilter === undefined) options.minFilter = LinearFilter;\n    this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n\n  Object.assign(WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n    isWebGLRenderTarget: true,\n    setSize: function (width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      this.depthTexture = source.depthTexture;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com\n   */\n\n  function WebGLRenderTargetCube(width, height, options) {\n    WebGLRenderTarget.call(this, width, height, options);\n    this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n    this.activeMipMapLevel = 0;\n  }\n\n  WebGLRenderTargetCube.prototype = Object.create(WebGLRenderTarget.prototype);\n  WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n  WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  function Quaternion(x, y, z, w) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Quaternion, {\n    slerp: function (qa, qb, qm, t) {\n      return qm.copy(qa).slerp(qb, t);\n    },\n    slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3],\n          x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t,\n            cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n  });\n  Object.defineProperties(Quaternion.prototype, {\n    x: {\n      get: function () {\n        return this._x;\n      },\n      set: function (value) {\n        this._x = value;\n        this.onChangeCallback();\n      }\n    },\n    y: {\n      get: function () {\n        return this._y;\n      },\n      set: function (value) {\n        this._y = value;\n        this.onChangeCallback();\n      }\n    },\n    z: {\n      get: function () {\n        return this._z;\n      },\n      set: function (value) {\n        this._z = value;\n        this.onChangeCallback();\n      }\n    },\n    w: {\n      get: function () {\n        return this._w;\n      },\n      set: function (value) {\n        this._w = value;\n        this.onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Quaternion.prototype, {\n    set: function (x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    },\n    copy: function (quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromEuler: function (euler, update) {\n      if (!(euler && euler.isEuler)) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      var x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c1 = cos(x / 2);\n      var c2 = cos(y / 2);\n      var c3 = cos(z / 2);\n      var s1 = sin(x / 2);\n      var s2 = sin(y / 2);\n      var s3 = sin(z / 2);\n\n      if (order === 'XYZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'YXZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'ZXY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'ZYX') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'YZX') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'XZY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      }\n\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromAxisAngle: function (axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33,\n          s;\n\n      if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    setFromUnitVectors: function () {\n      // assumes direction vectors vFrom and vTo are normalized\n      var v1 = new Vector3();\n      var r;\n      var EPS = 0.000001;\n      return function setFromUnitVectors(vFrom, vTo) {\n        if (v1 === undefined) v1 = new Vector3();\n        r = vFrom.dot(vTo) + 1;\n\n        if (r < EPS) {\n          r = 0;\n\n          if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n            v1.set(-vFrom.y, vFrom.x, 0);\n          } else {\n            v1.set(0, -vFrom.z, vFrom.y);\n          }\n        } else {\n          v1.crossVectors(vFrom, vTo);\n        }\n\n        this._x = v1.x;\n        this._y = v1.y;\n        this._z = v1.z;\n        this._w = r;\n        return this.normalize();\n      };\n    }(),\n    inverse: function () {\n      return this.conjugate().normalize();\n    },\n    conjugate: function () {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n      this.onChangeCallback();\n      return this;\n    },\n    dot: function (v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    },\n    lengthSq: function () {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    },\n    length: function () {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    },\n    normalize: function () {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    multiply: function (q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    },\n    premultiply: function (q) {\n      return this.multiplyQuaternions(q, this);\n    },\n    multiplyQuaternions: function (a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n      this.onChangeCallback();\n      return this;\n    },\n    slerp: function (qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n      if (Math.abs(sinHalfTheta) < 0.001) {\n        this._w = 0.5 * (w + this._w);\n        this._x = 0.5 * (x + this._x);\n        this._y = 0.5 * (y + this._y);\n        this._z = 0.5 * (z + this._z);\n        return this;\n      }\n\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n      this.onChangeCallback();\n      return this;\n    },\n    equals: function (quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    },\n    onChange: function (callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector3(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n\n  Object.assign(Vector3.prototype, {\n    isVector3: true,\n    set: function (x, y, z) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    },\n    multiply: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    },\n    multiplyVectors: function (a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    },\n    applyEuler: function () {\n      var quaternion = new Quaternion();\n      return function applyEuler(euler) {\n        if (!(euler && euler.isEuler)) {\n          console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n        }\n\n        return this.applyQuaternion(quaternion.setFromEuler(euler));\n      };\n    }(),\n    applyAxisAngle: function () {\n      var quaternion = new Quaternion();\n      return function applyAxisAngle(axis, angle) {\n        return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      };\n    }(),\n    applyMatrix3: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    },\n    applyQuaternion: function (q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    },\n    project: function () {\n      var matrix = new Matrix4();\n      return function project(camera) {\n        matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n        return this.applyMatrix4(matrix);\n      };\n    }(),\n    unproject: function () {\n      var matrix = new Matrix4();\n      return function unproject(camera) {\n        matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n        return this.applyMatrix4(matrix);\n      };\n    }(),\n    transformDirection: function (m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    },\n    clampScalar: function () {\n      var min = new Vector3();\n      var max = new Vector3();\n      return function clampScalar(minVal, maxVal) {\n        min.set(minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n    // TODO lengthSquared?\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    },\n    lengthManhattan: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    cross: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      this.x = y * v.z - z * v.y;\n      this.y = z * v.x - x * v.z;\n      this.z = x * v.y - y * v.x;\n      return this;\n    },\n    crossVectors: function (a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    },\n    projectOnVector: function (vector) {\n      var scalar = vector.dot(this) / vector.lengthSq();\n      return this.copy(vector).multiplyScalar(scalar);\n    },\n    projectOnPlane: function () {\n      var v1 = new Vector3();\n      return function projectOnPlane(planeNormal) {\n        v1.copy(this).projectOnVector(planeNormal);\n        return this.sub(v1);\n      };\n    }(),\n    reflect: function () {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      var v1 = new Vector3();\n      return function reflect(normal) {\n        return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n      };\n    }(),\n    angleTo: function (v) {\n      var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n      return Math.acos(_Math.clamp(theta, -1, 1));\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    },\n    distanceToManhattan: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    },\n    setFromSpherical: function (s) {\n      var sinPhiRadius = Math.sin(s.phi) * s.radius;\n      this.x = sinPhiRadius * Math.sin(s.theta);\n      this.y = Math.cos(s.phi) * s.radius;\n      this.z = sinPhiRadius * Math.cos(s.theta);\n      return this;\n    },\n    setFromCylindrical: function (c) {\n      this.x = c.radius * Math.sin(c.theta);\n      this.y = c.y;\n      this.z = c.radius * Math.cos(c.theta);\n      return this;\n    },\n    setFromMatrixPosition: function (m) {\n      var e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    },\n    setFromMatrixScale: function (m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    },\n    setFromMatrixColumn: function (m, index) {\n      return this.fromArray(m.elements, index * 4);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author jordi_ros / http://plattsoft.com\n   * @author D1plo1d / http://github.com/D1plo1d\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author timknip / http://www.floorplanner.com/\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Matrix4() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix4.prototype, {\n    isMatrix4: true,\n    set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new Matrix4().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      te[9] = me[9];\n      te[10] = me[10];\n      te[11] = me[11];\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      te[15] = me[15];\n      return this;\n    },\n    copyPosition: function (m) {\n      var te = this.elements,\n          me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    },\n    extractBasis: function (xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    },\n    makeBasis: function (xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    extractRotation: function () {\n      var v1 = new Vector3();\n      return function extractRotation(m) {\n        var te = this.elements;\n        var me = m.elements;\n        var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n        var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n        var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n        te[0] = me[0] * scaleX;\n        te[1] = me[1] * scaleX;\n        te[2] = me[2] * scaleX;\n        te[4] = me[4] * scaleY;\n        te[5] = me[5] * scaleY;\n        te[6] = me[6] * scaleY;\n        te[8] = me[8] * scaleZ;\n        te[9] = me[9] * scaleZ;\n        te[10] = me[10] * scaleZ;\n        return this;\n      };\n    }(),\n    makeRotationFromEuler: function (euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n      } // last column\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // bottom row\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    makeRotationFromQuaternion: function (q) {\n      var te = this.elements;\n      var x = q._x,\n          y = q._y,\n          z = q._z,\n          w = q._w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      te[0] = 1 - (yy + zz);\n      te[4] = xy - wz;\n      te[8] = xz + wy;\n      te[1] = xy + wz;\n      te[5] = 1 - (xx + zz);\n      te[9] = yz - wx;\n      te[2] = xz - wy;\n      te[6] = yz + wx;\n      te[10] = 1 - (xx + yy); // last column\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // bottom row\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    lookAt: function () {\n      var x = new Vector3();\n      var y = new Vector3();\n      var z = new Vector3();\n      return function lookAt(eye, target, up) {\n        var te = this.elements;\n        z.subVectors(eye, target);\n\n        if (z.lengthSq() === 0) {\n          // eye and target are in the same position\n          z.z = 1;\n        }\n\n        z.normalize();\n        x.crossVectors(up, z);\n\n        if (x.lengthSq() === 0) {\n          // up and z are parallel\n          if (Math.abs(up.z) === 1) {\n            z.x += 0.0001;\n          } else {\n            z.z += 0.0001;\n          }\n\n          z.normalize();\n          x.crossVectors(up, z);\n        }\n\n        x.normalize();\n        y.crossVectors(z, x);\n        te[0] = x.x;\n        te[4] = y.x;\n        te[8] = z.x;\n        te[1] = x.y;\n        te[5] = y.y;\n        te[9] = z.y;\n        te[2] = x.z;\n        te[6] = y.z;\n        te[10] = z.z;\n        return this;\n      };\n    }(),\n    multiply: function (m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    },\n    applyToBufferAttribute: function () {\n      var v1 = new Vector3();\n      return function applyToBufferAttribute(attribute) {\n        for (var i = 0, l = attribute.count; i < l; i++) {\n          v1.x = attribute.getX(i);\n          v1.y = attribute.getY(i);\n          v1.z = attribute.getZ(i);\n          v1.applyMatrix4(this);\n          attribute.setXYZ(i, v1.x, v1.y, v1.z);\n        }\n\n        return attribute;\n      };\n    }(),\n    determinant: function () {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    },\n    transpose: function () {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    },\n    setPosition: function (v) {\n      var te = this.elements;\n      te[12] = v.x;\n      te[13] = v.y;\n      te[14] = v.z;\n      return this;\n    },\n    getInverse: function (m, throwOnDegenerate) {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          me = m.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n41 = me[3],\n          n12 = me[4],\n          n22 = me[5],\n          n32 = me[6],\n          n42 = me[7],\n          n13 = me[8],\n          n23 = me[9],\n          n33 = me[10],\n          n43 = me[11],\n          n14 = me[12],\n          n24 = me[13],\n          n34 = me[14],\n          n44 = me[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    },\n    scale: function (v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    },\n    getMaxScaleOnAxis: function () {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    },\n    makeTranslation: function (x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationX: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationY: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationZ: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationAxis: function (axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeScale: function (x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeShear: function (x, y, z) {\n      this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    compose: function (position, quaternion, scale) {\n      this.makeRotationFromQuaternion(quaternion);\n      this.scale(scale);\n      this.setPosition(position);\n      return this;\n    },\n    decompose: function () {\n      var vector = new Vector3();\n      var matrix = new Matrix4();\n      return function decompose(position, quaternion, scale) {\n        var te = this.elements;\n        var sx = vector.set(te[0], te[1], te[2]).length();\n        var sy = vector.set(te[4], te[5], te[6]).length();\n        var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n        var det = this.determinant();\n        if (det < 0) sx = -sx;\n        position.x = te[12];\n        position.y = te[13];\n        position.z = te[14]; // scale the rotation part\n\n        matrix.copy(this);\n        var invSX = 1 / sx;\n        var invSY = 1 / sy;\n        var invSZ = 1 / sz;\n        matrix.elements[0] *= invSX;\n        matrix.elements[1] *= invSX;\n        matrix.elements[2] *= invSX;\n        matrix.elements[4] *= invSY;\n        matrix.elements[5] *= invSY;\n        matrix.elements[6] *= invSY;\n        matrix.elements[8] *= invSZ;\n        matrix.elements[9] *= invSZ;\n        matrix.elements[10] *= invSZ;\n        quaternion.setFromRotationMatrix(matrix);\n        scale.x = sx;\n        scale.y = sy;\n        scale.z = sz;\n        return this;\n      };\n    }(),\n    makePerspective: function (left, right, top, bottom, near, far) {\n      if (far === undefined) {\n        console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n      }\n\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    },\n    makeOrthographic: function (left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n\n      for (var i = 0; i < 16; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n\n  DataTexture.prototype = Object.create(Texture.prototype);\n  DataTexture.prototype.constructor = DataTexture;\n  DataTexture.prototype.isDataTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  }\n\n  CubeTexture.prototype = Object.create(Texture.prototype);\n  CubeTexture.prototype.constructor = CubeTexture;\n  CubeTexture.prototype.isCubeTexture = true;\n  Object.defineProperty(CubeTexture.prototype, 'images', {\n    get: function () {\n      return this.image;\n    },\n    set: function (value) {\n      this.image = value;\n    }\n  });\n  /**\n   * @author tschw\n   *\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [renderer] )\n   *\n   * \t\tuploads a uniform value(s)\n   *  \tthe 'renderer' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (renderer factorizations):\n   *\n   * .upload( gl, seq, values, renderer )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   *\n   * Methods of the top-level container (renderer factorizations):\n   *\n   * .setValue( gl, name, value )\n   *\n   * \t\tsets uniform with  name 'name' to 'value'\n   *\n   * .set( gl, obj, prop )\n   *\n   * \t\tsets uniform from object and property with same name than uniform\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   */\n\n  var emptyTexture = new Texture();\n  var emptyCubeTexture = new CubeTexture(); // --- Base for inner nodes (including the root) ---\n\n  function UniformContainer() {\n    this.seq = [];\n    this.map = {};\n  } // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n\n\n  var arrayCacheF32 = [];\n  var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n  var mat4array = new Float32Array(16);\n  var mat3array = new Float32Array(9); // Flattening for arrays of vectors and matrices\n\n  function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize,\n        r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  } // Texture unit allocation\n\n\n  function allocTexUnits(renderer, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) r[i] = renderer.allocTextureUnit();\n\n    return r;\n  } // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n\n\n  function setValue1f(gl, v) {\n    gl.uniform1f(this.addr, v);\n  }\n\n  function setValue1i(gl, v) {\n    gl.uniform1i(this.addr, v);\n  } // Single float vector (from flat array or THREE.VectorN)\n\n\n  function setValue2fv(gl, v) {\n    if (v.x === undefined) gl.uniform2fv(this.addr, v);else gl.uniform2f(this.addr, v.x, v.y);\n  }\n\n  function setValue3fv(gl, v) {\n    if (v.x !== undefined) gl.uniform3f(this.addr, v.x, v.y, v.z);else if (v.r !== undefined) gl.uniform3f(this.addr, v.r, v.g, v.b);else gl.uniform3fv(this.addr, v);\n  }\n\n  function setValue4fv(gl, v) {\n    if (v.x === undefined) gl.uniform4fv(this.addr, v);else gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n  } // Single matrix (from flat array or MatrixN)\n\n\n  function setValue2fm(gl, v) {\n    gl.uniformMatrix2fv(this.addr, false, v.elements || v);\n  }\n\n  function setValue3fm(gl, v) {\n    if (v.elements === undefined) {\n      gl.uniformMatrix3fv(this.addr, false, v);\n    } else {\n      mat3array.set(v.elements);\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\n    }\n  }\n\n  function setValue4fm(gl, v) {\n    if (v.elements === undefined) {\n      gl.uniformMatrix4fv(this.addr, false, v);\n    } else {\n      mat4array.set(v.elements);\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\n    }\n  } // Single texture (2D / Cube)\n\n\n  function setValueT1(gl, v, renderer) {\n    var unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    renderer.setTexture2D(v || emptyTexture, unit);\n  }\n\n  function setValueT6(gl, v, renderer) {\n    var unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    renderer.setTextureCube(v || emptyCubeTexture, unit);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValue2iv(gl, v) {\n    gl.uniform2iv(this.addr, v);\n  }\n\n  function setValue3iv(gl, v) {\n    gl.uniform3iv(this.addr, v);\n  }\n\n  function setValue4iv(gl, v) {\n    gl.uniform4iv(this.addr, v);\n  } // Helper to pick the right setter for the singular case\n\n\n  function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValue2fv;\n      // _VEC2\n\n      case 0x8b51:\n        return setValue3fv;\n      // _VEC3\n\n      case 0x8b52:\n        return setValue4fv;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValue2fm;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValue3fm;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValue4fm;\n      // _MAT4\n\n      case 0x8b5e:\n      case 0x8d66:\n        return setValueT1;\n      // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\n      case 0x8b60:\n        return setValueT6;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  } // Array of scalars\n\n\n  function setValue1fv(gl, v) {\n    gl.uniform1fv(this.addr, v);\n  }\n\n  function setValue1iv(gl, v) {\n    gl.uniform1iv(this.addr, v);\n  } // Array of vectors (flat or from THREE classes)\n\n\n  function setValueV2a(gl, v) {\n    gl.uniform2fv(this.addr, flatten(v, this.size, 2));\n  }\n\n  function setValueV3a(gl, v) {\n    gl.uniform3fv(this.addr, flatten(v, this.size, 3));\n  }\n\n  function setValueV4a(gl, v) {\n    gl.uniform4fv(this.addr, flatten(v, this.size, 4));\n  } // Array of matrices (flat or from THREE clases)\n\n\n  function setValueM2a(gl, v) {\n    gl.uniformMatrix2fv(this.addr, false, flatten(v, this.size, 4));\n  }\n\n  function setValueM3a(gl, v) {\n    gl.uniformMatrix3fv(this.addr, false, flatten(v, this.size, 9));\n  }\n\n  function setValueM4a(gl, v) {\n    gl.uniformMatrix4fv(this.addr, false, flatten(v, this.size, 16));\n  } // Array of textures (2D / Cube)\n\n\n  function setValueT1a(gl, v, renderer) {\n    var n = v.length,\n        units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n    }\n  }\n\n  function setValueT6a(gl, v, renderer) {\n    var n = v.length,\n        units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n    }\n  } // Helper to pick the right setter for a pure (bottom-level) array\n\n\n  function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1fv;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2a;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3a;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4a;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2a;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3a;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4a;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1a;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6a;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1iv;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  } // --- Uniform Classes ---\n\n\n  function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function StructuredUniform(id) {\n    this.id = id;\n    UniformContainer.call(this); // mix-in\n  }\n\n  StructuredUniform.prototype.setValue = function (gl, value) {\n    // Note: Don't need an extra 'renderer' parameter, since samplers\n    // are not allowed in structured uniforms.\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id]);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g; // extracts\n  // \t- the identifier (member name or array index)\n  //  - followed by an optional right bracket (found when array index)\n  //  - followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n\n  function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  }\n\n  function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    for (;;) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex,\n          id = match[1],\n          idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map,\n            next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  } // Root Container\n\n\n  function WebGLUniforms(gl, program, renderer) {\n    UniformContainer.call(this);\n    this.renderer = renderer;\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          path = info.name,\n          addr = gl.getUniformLocation(program, path);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, this.renderer);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, renderer) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, renderer);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var ColorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  };\n\n  function Color(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  Object.assign(Color.prototype, {\n    isColor: true,\n    r: 1,\n    g: 1,\n    b: 1,\n    set: function (value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    },\n    setHex: function (hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    },\n    setRGB: function (r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    },\n    setHSL: function () {\n      function hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n        return p;\n      }\n\n      return function setHSL(h, s, l) {\n        // h,s,l ranges are in 0.0 - 1.0\n        h = _Math.euclideanModulo(h, 1);\n        s = _Math.clamp(s, 0, 1);\n        l = _Math.clamp(l, 0, 1);\n\n        if (s === 0) {\n          this.r = this.g = this.b = l;\n        } else {\n          var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n          var q = 2 * l - p;\n          this.r = hue2rgb(q, p, h + 1 / 3);\n          this.g = hue2rgb(q, p, h);\n          this.b = hue2rgb(q, p, h - 1 / 3);\n        }\n\n        return this;\n      };\n    }(),\n    setStyle: function (style) {\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[5]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        // color keywords\n        var hex = ColorKeywords[style];\n\n        if (hex !== undefined) {\n          // red\n          this.setHex(hex);\n        } else {\n          // unknown color\n          console.warn('THREE.Color: Unknown color ' + style);\n        }\n      }\n\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.r, this.g, this.b);\n    },\n    copy: function (color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    },\n    copyGammaToLinear: function (color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    },\n    copyLinearToGamma: function (color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    },\n    convertGammaToLinear: function () {\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      this.r = r * r;\n      this.g = g * g;\n      this.b = b * b;\n      return this;\n    },\n    convertLinearToGamma: function () {\n      this.r = Math.sqrt(this.r);\n      this.g = Math.sqrt(this.g);\n      this.b = Math.sqrt(this.b);\n      return this;\n    },\n    getHex: function () {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    },\n    getHexString: function () {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    },\n    getHSL: function (optionalTarget) {\n      // h,s,l ranges are in 0.0 - 1.0\n      var hsl = optionalTarget || {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      hsl.h = hue;\n      hsl.s = saturation;\n      hsl.l = lightness;\n      return hsl;\n    },\n    getStyle: function () {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    },\n    offsetHSL: function (h, s, l) {\n      var hsl = this.getHSL();\n      hsl.h += h;\n      hsl.s += s;\n      hsl.l += l;\n      this.setHSL(hsl.h, hsl.s, hsl.l);\n      return this;\n    },\n    add: function (color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    },\n    addColors: function (color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    },\n    addScalar: function (s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    },\n    sub: function (color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    },\n    multiply: function (color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    },\n    lerp: function (color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    },\n    equals: function (c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    },\n    toJSON: function () {\n      return this.getHex();\n    }\n  });\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  var UniformsLib = {\n    common: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      offsetRepeat: {\n        value: new Vector4(0, 0, 1, 1)\n      },\n      specularMap: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      reflectivity: {\n        value: 1.0\n      },\n      refractionRatio: {\n        value: 0.98\n      }\n    },\n    aomap: {\n      aoMap: {\n        value: null\n      },\n      aoMapIntensity: {\n        value: 1\n      }\n    },\n    lightmap: {\n      lightMap: {\n        value: null\n      },\n      lightMapIntensity: {\n        value: 1\n      }\n    },\n    emissivemap: {\n      emissiveMap: {\n        value: null\n      }\n    },\n    bumpmap: {\n      bumpMap: {\n        value: null\n      },\n      bumpScale: {\n        value: 1\n      }\n    },\n    normalmap: {\n      normalMap: {\n        value: null\n      },\n      normalScale: {\n        value: new Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      displacementMap: {\n        value: null\n      },\n      displacementScale: {\n        value: 1\n      },\n      displacementBias: {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      roughnessMap: {\n        value: null\n      }\n    },\n    metalnessmap: {\n      metalnessMap: {\n        value: null\n      }\n    },\n    gradientmap: {\n      gradientMap: {\n        value: null\n      }\n    },\n    fog: {\n      fogDensity: {\n        value: 0.00025\n      },\n      fogNear: {\n        value: 1\n      },\n      fogFar: {\n        value: 2000\n      },\n      fogColor: {\n        value: new Color(0xffffff)\n      }\n    },\n    lights: {\n      ambientLightColor: {\n        value: []\n      },\n      directionalLights: {\n        value: [],\n        properties: {\n          direction: {},\n          color: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      directionalShadowMap: {\n        value: []\n      },\n      directionalShadowMatrix: {\n        value: []\n      },\n      spotLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          direction: {},\n          distance: {},\n          coneCos: {},\n          penumbraCos: {},\n          decay: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      spotShadowMap: {\n        value: []\n      },\n      spotShadowMatrix: {\n        value: []\n      },\n      pointLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          decay: {},\n          distance: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      pointShadowMap: {\n        value: []\n      },\n      pointShadowMatrix: {\n        value: []\n      },\n      hemisphereLights: {\n        value: [],\n        properties: {\n          direction: {},\n          skyColor: {},\n          groundColor: {}\n        }\n      },\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n      rectAreaLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          width: {},\n          height: {}\n        }\n      }\n    },\n    points: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      size: {\n        value: 1.0\n      },\n      scale: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      offsetRepeat: {\n        value: new Vector4(0, 0, 1, 1)\n      }\n    }\n  };\n  /**\n   * Uniform Utilities\n   */\n\n  var UniformsUtils = {\n    merge: function (uniforms) {\n      var merged = {};\n\n      for (var u = 0; u < uniforms.length; u++) {\n        var tmp = this.clone(uniforms[u]);\n\n        for (var p in tmp) {\n          merged[p] = tmp[p];\n        }\n      }\n\n      return merged;\n    },\n    clone: function (uniforms_src) {\n      var uniforms_dst = {};\n\n      for (var u in uniforms_src) {\n        uniforms_dst[u] = {};\n\n        for (var p in uniforms_src[u]) {\n          var parameter_src = uniforms_src[u][p];\n\n          if (parameter_src && (parameter_src.isColor || parameter_src.isMatrix3 || parameter_src.isMatrix4 || parameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 || parameter_src.isTexture)) {\n            uniforms_dst[u][p] = parameter_src.clone();\n          } else if (Array.isArray(parameter_src)) {\n            uniforms_dst[u][p] = parameter_src.slice();\n          } else {\n            uniforms_dst[u][p] = parameter_src;\n          }\n        }\n      }\n\n      return uniforms_dst;\n    }\n  };\n  var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n  var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n  var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n  var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n  var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n  var begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n  var beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n  var bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n  var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n  var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n  var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n  var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n  var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n  var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n  var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n  var color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n  var common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n  var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n  var defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n  var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n  var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n  var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n  var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n  var encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n  var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n  var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = asin( flipNormal * reflectVec.y ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n  var envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n  var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n  var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n  var fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n  var fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n  var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n  var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n  var gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n  var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n  var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n  var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n  var lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n  var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n  var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n  var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n  var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n  var lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n  var logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n  var logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n  var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n  var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n  var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n  var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n  var map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n  var map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n  var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n  var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n  var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n  var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n  var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n  var normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n  var normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n  var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n  var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n  var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n  var project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n  var dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n  var dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n  var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n  var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n  var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n  var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n  var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n  var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n  var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n  var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n  var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n  var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n  var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n  var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n  var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n  var tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n  var uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n  var uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n  var uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n  var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n  var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n  var cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n  var cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n  var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n  var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n  var distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n  var distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n  var equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n  var equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n  var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n  var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n  var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n  var meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n  var normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n  var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n  var shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n  var ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars: lights_pars,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_template: lights_template,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_flip: normal_flip,\n    normal_fragment: normal_fragment,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n    cube_frag: cube_frag,\n    cube_vert: cube_vert,\n    depth_frag: depth_frag,\n    depth_vert: depth_vert,\n    distanceRGBA_frag: distanceRGBA_frag,\n    distanceRGBA_vert: distanceRGBA_vert,\n    equirect_frag: equirect_frag,\n    equirect_vert: equirect_vert,\n    linedashed_frag: linedashed_frag,\n    linedashed_vert: linedashed_vert,\n    meshbasic_frag: meshbasic_frag,\n    meshbasic_vert: meshbasic_vert,\n    meshlambert_frag: meshlambert_frag,\n    meshlambert_vert: meshlambert_vert,\n    meshphong_frag: meshphong_frag,\n    meshphong_vert: meshphong_vert,\n    meshphysical_frag: meshphysical_frag,\n    meshphysical_vert: meshphysical_vert,\n    normal_frag: normal_frag,\n    normal_vert: normal_vert,\n    points_frag: points_frag,\n    points_vert: points_vert,\n    shadow_frag: shadow_frag,\n    shadow_vert: shadow_vert\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   */\n\n  var ShaderLib = {\n    basic: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n      vertexShader: ShaderChunk.meshbasic_vert,\n      fragmentShader: ShaderChunk.meshbasic_frag\n    },\n    lambert: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshlambert_vert,\n      fragmentShader: ShaderChunk.meshlambert_frag\n    },\n    phong: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        specular: {\n          value: new Color(0x111111)\n        },\n        shininess: {\n          value: 30\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphong_vert,\n      fragmentShader: ShaderChunk.meshphong_frag\n    },\n    standard: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        roughness: {\n          value: 0.5\n        },\n        metalness: {\n          value: 0.5\n        },\n        envMapIntensity: {\n          value: 1\n        } // temporary\n\n      }]),\n      vertexShader: ShaderChunk.meshphysical_vert,\n      fragmentShader: ShaderChunk.meshphysical_frag\n    },\n    points: {\n      uniforms: UniformsUtils.merge([UniformsLib.points, UniformsLib.fog]),\n      vertexShader: ShaderChunk.points_vert,\n      fragmentShader: ShaderChunk.points_frag\n    },\n    dashed: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.fog, {\n        scale: {\n          value: 1\n        },\n        dashSize: {\n          value: 1\n        },\n        totalSize: {\n          value: 2\n        }\n      }]),\n      vertexShader: ShaderChunk.linedashed_vert,\n      fragmentShader: ShaderChunk.linedashed_frag\n    },\n    depth: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap]),\n      vertexShader: ShaderChunk.depth_vert,\n      fragmentShader: ShaderChunk.depth_frag\n    },\n    normal: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.normal_vert,\n      fragmentShader: ShaderChunk.normal_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    cube: {\n      uniforms: {\n        tCube: {\n          value: null\n        },\n        tFlip: {\n          value: -1\n        },\n        opacity: {\n          value: 1.0\n        }\n      },\n      vertexShader: ShaderChunk.cube_vert,\n      fragmentShader: ShaderChunk.cube_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    equirect: {\n      uniforms: {\n        tEquirect: {\n          value: null\n        },\n        tFlip: {\n          value: -1\n        }\n      },\n      vertexShader: ShaderChunk.equirect_vert,\n      fragmentShader: ShaderChunk.equirect_frag\n    },\n    distanceRGBA: {\n      uniforms: {\n        lightPos: {\n          value: new Vector3()\n        }\n      },\n      vertexShader: ShaderChunk.distanceRGBA_vert,\n      fragmentShader: ShaderChunk.distanceRGBA_frag\n    }\n  };\n  ShaderLib.physical = {\n    uniforms: UniformsUtils.merge([ShaderLib.standard.uniforms, {\n      clearCoat: {\n        value: 0\n      },\n      clearCoatRoughness: {\n        value: 0\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  };\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Box2(min, max) {\n    this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n  }\n\n  Object.assign(Box2.prototype, {\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new Vector2();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    },\n    getCenter: function (optionalTarget) {\n      var result = optionalTarget || new Vector2();\n      return this.isEmpty() ? result.set(0, 0) : result.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function (optionalTarget) {\n      var result = optionalTarget || new Vector2();\n      return this.isEmpty() ? result.set(0, 0) : result.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    containsPoint: function (point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n    },\n    containsBox: function (box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n    },\n    getParameter: function (point, optionalTarget) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      var result = optionalTarget || new Vector2();\n      return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    },\n    intersectsBox: function (box) {\n      // using 4 splitting planes to rule out intersections\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n    },\n    clampPoint: function (point, optionalTarget) {\n      var result = optionalTarget || new Vector2();\n      return result.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new Vector2();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function LensFlarePlugin(renderer, flares) {\n    var gl = renderer.context;\n    var state = renderer.state;\n    var vertexBuffer, elementBuffer;\n    var shader, program, attributes, uniforms;\n    var tempTexture, occlusionTexture;\n\n    function init() {\n      var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n      var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n      vertexBuffer = gl.createBuffer();\n      elementBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n      tempTexture = gl.createTexture();\n      occlusionTexture = gl.createTexture();\n      state.bindTexture(gl.TEXTURE_2D, tempTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n        \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n        \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n      program = createProgram(shader);\n      attributes = {\n        vertex: gl.getAttribLocation(program, \"position\"),\n        uv: gl.getAttribLocation(program, \"uv\")\n      };\n      uniforms = {\n        renderType: gl.getUniformLocation(program, \"renderType\"),\n        map: gl.getUniformLocation(program, \"map\"),\n        occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n        opacity: gl.getUniformLocation(program, \"opacity\"),\n        color: gl.getUniformLocation(program, \"color\"),\n        scale: gl.getUniformLocation(program, \"scale\"),\n        rotation: gl.getUniformLocation(program, \"rotation\"),\n        screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n      };\n    }\n    /*\n     * Render lens flares\n     * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n     *         reads these back and calculates occlusion.\n     */\n\n\n    this.render = function (scene, camera, viewport) {\n      if (flares.length === 0) return;\n      var tempPosition = new Vector3();\n      var invAspect = viewport.w / viewport.z,\n          halfViewportWidth = viewport.z * 0.5,\n          halfViewportHeight = viewport.w * 0.5;\n      var size = 16 / viewport.w,\n          scale = new Vector2(size * invAspect, size);\n      var screenPosition = new Vector3(1, 1, 0),\n          screenPositionPixels = new Vector2(1, 1);\n      var validArea = new Box2();\n      validArea.min.set(viewport.x, viewport.y);\n      validArea.max.set(viewport.x + (viewport.z - 16), viewport.y + (viewport.w - 16));\n\n      if (program === undefined) {\n        init();\n      }\n\n      gl.useProgram(program);\n      state.initAttributes();\n      state.enableAttribute(attributes.vertex);\n      state.enableAttribute(attributes.uv);\n      state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n      // setup gl and common used attribs/uniforms\n\n      gl.uniform1i(uniforms.occlusionMap, 0);\n      gl.uniform1i(uniforms.map, 1);\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n      gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      state.disable(gl.CULL_FACE);\n      state.buffers.depth.setMask(false);\n\n      for (var i = 0, l = flares.length; i < l; i++) {\n        size = 16 / viewport.w;\n        scale.set(size * invAspect, size); // calc object screen position\n\n        var flare = flares[i];\n        tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n        tempPosition.applyMatrix4(camera.matrixWorldInverse);\n        tempPosition.applyMatrix4(camera.projectionMatrix); // setup arrays for gl programs\n\n        screenPosition.copy(tempPosition); // horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n        screenPositionPixels.x = viewport.x + screenPosition.x * halfViewportWidth + halfViewportWidth - 8;\n        screenPositionPixels.y = viewport.y + screenPosition.y * halfViewportHeight + halfViewportHeight - 8; // screen cull\n\n        if (validArea.containsPoint(screenPositionPixels) === true) {\n          // save current RGB to temp texture\n          state.activeTexture(gl.TEXTURE0);\n          state.bindTexture(gl.TEXTURE_2D, null);\n          state.activeTexture(gl.TEXTURE1);\n          state.bindTexture(gl.TEXTURE_2D, tempTexture);\n          gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // render pink quad\n\n          gl.uniform1i(uniforms.renderType, 0);\n          gl.uniform2f(uniforms.scale, scale.x, scale.y);\n          gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n          state.disable(gl.BLEND);\n          state.enable(gl.DEPTH_TEST);\n          gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n          state.activeTexture(gl.TEXTURE0);\n          state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n          gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // restore graphics\n\n          gl.uniform1i(uniforms.renderType, 1);\n          state.disable(gl.DEPTH_TEST);\n          state.activeTexture(gl.TEXTURE1);\n          state.bindTexture(gl.TEXTURE_2D, tempTexture);\n          gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n          flare.positionScreen.copy(screenPosition);\n\n          if (flare.customUpdateCallback) {\n            flare.customUpdateCallback(flare);\n          } else {\n            flare.updateLensFlares();\n          } // render flares\n\n\n          gl.uniform1i(uniforms.renderType, 2);\n          state.enable(gl.BLEND);\n\n          for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n            var sprite = flare.lensFlares[j];\n\n            if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n              screenPosition.x = sprite.x;\n              screenPosition.y = sprite.y;\n              screenPosition.z = sprite.z;\n              size = sprite.size * sprite.scale / viewport.w;\n              scale.x = size * invAspect;\n              scale.y = size;\n              gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n              gl.uniform2f(uniforms.scale, scale.x, scale.y);\n              gl.uniform1f(uniforms.rotation, sprite.rotation);\n              gl.uniform1f(uniforms.opacity, sprite.opacity);\n              gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n              state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n              renderer.setTexture2D(sprite.texture, 1);\n              gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n            }\n          }\n        }\n      } // restore gl\n\n\n      state.enable(gl.CULL_FACE);\n      state.enable(gl.DEPTH_TEST);\n      state.buffers.depth.setMask(true);\n      renderer.resetGLState();\n    };\n\n    function createProgram(shader) {\n      var program = gl.createProgram();\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n      gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n      gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n      gl.compileShader(fragmentShader);\n      gl.compileShader(vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.attachShader(program, vertexShader);\n      gl.linkProgram(program);\n      return program;\n    }\n  }\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function SpritePlugin(renderer, sprites) {\n    var gl = renderer.context;\n    var state = renderer.state;\n    var vertexBuffer, elementBuffer;\n    var program, attributes, uniforms;\n    var texture; // decompose matrixWorld\n\n    var spritePosition = new Vector3();\n    var spriteRotation = new Quaternion();\n    var spriteScale = new Vector3();\n\n    function init() {\n      var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n      var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n      vertexBuffer = gl.createBuffer();\n      elementBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n      program = createProgram();\n      attributes = {\n        position: gl.getAttribLocation(program, 'position'),\n        uv: gl.getAttribLocation(program, 'uv')\n      };\n      uniforms = {\n        uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n        uvScale: gl.getUniformLocation(program, 'uvScale'),\n        rotation: gl.getUniformLocation(program, 'rotation'),\n        scale: gl.getUniformLocation(program, 'scale'),\n        color: gl.getUniformLocation(program, 'color'),\n        map: gl.getUniformLocation(program, 'map'),\n        opacity: gl.getUniformLocation(program, 'opacity'),\n        modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n        projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n        fogType: gl.getUniformLocation(program, 'fogType'),\n        fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n        fogNear: gl.getUniformLocation(program, 'fogNear'),\n        fogFar: gl.getUniformLocation(program, 'fogFar'),\n        fogColor: gl.getUniformLocation(program, 'fogColor'),\n        alphaTest: gl.getUniformLocation(program, 'alphaTest')\n      };\n      var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = 8;\n      canvas.height = 8;\n      var context = canvas.getContext('2d');\n      context.fillStyle = 'white';\n      context.fillRect(0, 0, 8, 8);\n      texture = new Texture(canvas);\n      texture.needsUpdate = true;\n    }\n\n    this.render = function (scene, camera) {\n      if (sprites.length === 0) return; // setup gl\n\n      if (program === undefined) {\n        init();\n      }\n\n      gl.useProgram(program);\n      state.initAttributes();\n      state.enableAttribute(attributes.position);\n      state.enableAttribute(attributes.uv);\n      state.disableUnusedAttributes();\n      state.disable(gl.CULL_FACE);\n      state.enable(gl.BLEND);\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n      gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n      gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n      state.activeTexture(gl.TEXTURE0);\n      gl.uniform1i(uniforms.map, 0);\n      var oldFogType = 0;\n      var sceneFogType = 0;\n      var fog = scene.fog;\n\n      if (fog) {\n        gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n        if (fog.isFog) {\n          gl.uniform1f(uniforms.fogNear, fog.near);\n          gl.uniform1f(uniforms.fogFar, fog.far);\n          gl.uniform1i(uniforms.fogType, 1);\n          oldFogType = 1;\n          sceneFogType = 1;\n        } else if (fog.isFogExp2) {\n          gl.uniform1f(uniforms.fogDensity, fog.density);\n          gl.uniform1i(uniforms.fogType, 2);\n          oldFogType = 2;\n          sceneFogType = 2;\n        }\n      } else {\n        gl.uniform1i(uniforms.fogType, 0);\n        oldFogType = 0;\n        sceneFogType = 0;\n      } // update positions and sort\n\n\n      for (var i = 0, l = sprites.length; i < l; i++) {\n        var sprite = sprites[i];\n        sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n        sprite.z = -sprite.modelViewMatrix.elements[14];\n      }\n\n      sprites.sort(painterSortStable); // render all sprites\n\n      var scale = [];\n\n      for (var i = 0, l = sprites.length; i < l; i++) {\n        var sprite = sprites[i];\n        var material = sprite.material;\n        if (material.visible === false) continue;\n        sprite.onBeforeRender(renderer, scene, camera, undefined, material, undefined);\n        gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n        gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n        sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n        scale[0] = spriteScale.x;\n        scale[1] = spriteScale.y;\n        var fogType = 0;\n\n        if (scene.fog && material.fog) {\n          fogType = sceneFogType;\n        }\n\n        if (oldFogType !== fogType) {\n          gl.uniform1i(uniforms.fogType, fogType);\n          oldFogType = fogType;\n        }\n\n        if (material.map !== null) {\n          gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n          gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n        } else {\n          gl.uniform2f(uniforms.uvOffset, 0, 0);\n          gl.uniform2f(uniforms.uvScale, 1, 1);\n        }\n\n        gl.uniform1f(uniforms.opacity, material.opacity);\n        gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n        gl.uniform1f(uniforms.rotation, material.rotation);\n        gl.uniform2fv(uniforms.scale, scale);\n        state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n        state.buffers.depth.setTest(material.depthTest);\n        state.buffers.depth.setMask(material.depthWrite);\n\n        if (material.map) {\n          renderer.setTexture2D(material.map, 0);\n        } else {\n          renderer.setTexture2D(texture, 0);\n        }\n\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n        sprite.onAfterRender(renderer, scene, camera, undefined, material, undefined);\n      } // restore gl\n\n\n      state.enable(gl.CULL_FACE);\n      renderer.resetGLState();\n    };\n\n    function createProgram() {\n      var program = gl.createProgram();\n      var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', '#define SHADER_NAME ' + 'SpriteMaterial', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n      gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', '#define SHADER_NAME ' + 'SpriteMaterial', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n      gl.compileShader(vertexShader);\n      gl.compileShader(fragmentShader);\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      return program;\n    }\n\n    function painterSortStable(a, b) {\n      if (a.renderOrder !== b.renderOrder) {\n        return a.renderOrder - b.renderOrder;\n      } else if (a.z !== b.z) {\n        return b.z - a.z;\n      } else {\n        return b.id - a.id;\n      }\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  var materialId = 0;\n\n  function Material() {\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.lights = true;\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\n    this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaTest = 0;\n    this.premultipliedAlpha = false;\n    this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n    this.visible = true;\n    this.needsUpdate = true;\n  }\n\n  Object.assign(Material.prototype, EventDispatcher.prototype, {\n    isMaterial: true,\n    onBeforeCompile: function () {},\n    setValues: function (values) {\n      if (values === undefined) return;\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n          continue;\n        }\n\n        if (currentValue && currentValue.isColor) {\n          currentValue.set(newValue);\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n          currentValue.copy(newValue);\n        } else if (key === 'overdraw') {\n          // ensure overdraw is backwards-compatible with legacy boolean type\n          this[key] = Number(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    },\n    toJSON: function (meta) {\n      var isRoot = meta === undefined;\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (this.color && this.color.isColor) data.color = this.color.getHex();\n      if (this.roughness !== undefined) data.roughness = this.roughness;\n      if (this.metalness !== undefined) data.metalness = this.metalness;\n      if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n      if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n      if (this.shininess !== undefined) data.shininess = this.shininess;\n      if (this.clearCoat !== undefined) data.clearCoat = this.clearCoat;\n      if (this.clearCoatRoughness !== undefined) data.clearCoatRoughness = this.clearCoatRoughness;\n      if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n      if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n      if (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n      if (this.bumpMap && this.bumpMap.isTexture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap && this.normalMap.isTexture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap && this.displacementMap.isTexture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n      if (this.envMap && this.envMap.isTexture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        data.reflectivity = this.reflectivity; // Scale behind envMap\n      }\n\n      if (this.gradientMap && this.gradientMap.isTexture) {\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n      }\n\n      if (this.size !== undefined) data.size = this.size;\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n      if (this.blending !== NormalBlending) data.blending = this.blending;\n      if (this.shading !== SmoothShading) data.shading = this.shading;\n      if (this.side !== FrontSide) data.side = this.side;\n      if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n      if (this.opacity < 1) data.opacity = this.opacity;\n      if (this.transparent === true) data.transparent = this.transparent;\n      data.depthFunc = this.depthFunc;\n      data.depthTest = this.depthTest;\n      data.depthWrite = this.depthWrite;\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n      if (this.wireframe === true) data.wireframe = this.wireframe;\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n      if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n      if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n      data.skinning = this.skinning;\n      data.morphTargets = this.morphTargets;\n      data.dithering = this.dithering; // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n      }\n\n      return data;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.fog = source.fog;\n      this.lights = source.lights;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.shading = source.shading;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.dithering = source.dithering;\n      this.alphaTest = source.alphaTest;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.overdraw = source.overdraw;\n      this.visible = source.visible;\n      this.clipShadows = source.clipShadows;\n      this.clipIntersection = source.clipIntersection;\n      var srcPlanes = source.clippingPlanes,\n          dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) dstPlanes[i] = srcPlanes[i].clone();\n      }\n\n      this.clippingPlanes = dstPlanes;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  defines: { \"label\" : \"value\" },\n   *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *  fragmentShader: <string>,\n   *  vertexShader: <string>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  lights: <bool>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function ShaderMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n    this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n\n    this.lights = false; // set to use scene lights\n\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.skinning = false; // set to use skinning attribute streams\n\n    this.morphTargets = false; // set to use morph targets\n\n    this.morphNormals = false; // set to use morph normals\n\n    this.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      this.setValues(parameters);\n    }\n  }\n\n  ShaderMaterial.prototype = Object.create(Material.prototype);\n  ShaderMaterial.prototype.constructor = ShaderMaterial;\n  ShaderMaterial.prototype.isShaderMaterial = true;\n\n  ShaderMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = UniformsUtils.clone(source.uniforms);\n    this.defines = source.defines;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = source.extensions;\n    return this;\n  };\n\n  ShaderMaterial.prototype.toJSON = function (meta) {\n    var data = Material.prototype.toJSON.call(this, meta);\n    data.uniforms = this.uniforms;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    return data;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / https://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   * }\n   */\n\n\n  function MeshDepthMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = BasicDepthPacking;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshDepthMaterial.prototype = Object.create(Material.prototype);\n  MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n  MeshDepthMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function Box3(min, max) {\n    this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n  }\n\n  Object.assign(Box3.prototype, {\n    isBox3: true,\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromArray: function (array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromBufferAttribute: function (attribute) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        var x = attribute.getX(i);\n        var y = attribute.getY(i);\n        var z = attribute.getZ(i);\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new Vector3();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    setFromObject: function (object) {\n      this.makeEmpty();\n      return this.expandByObject(object);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    },\n    getCenter: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return this.isEmpty() ? result.set(0, 0, 0) : result.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return this.isEmpty() ? result.set(0, 0, 0) : result.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    expandByObject: function () {\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      var v1 = new Vector3();\n      return function expandByObject(object) {\n        var scope = this;\n        object.updateMatrixWorld(true);\n        object.traverse(function (node) {\n          var i, l;\n          var geometry = node.geometry;\n\n          if (geometry !== undefined) {\n            if (geometry.isGeometry) {\n              var vertices = geometry.vertices;\n\n              for (i = 0, l = vertices.length; i < l; i++) {\n                v1.copy(vertices[i]);\n                v1.applyMatrix4(node.matrixWorld);\n                scope.expandByPoint(v1);\n              }\n            } else if (geometry.isBufferGeometry) {\n              var attribute = geometry.attributes.position;\n\n              if (attribute !== undefined) {\n                for (i = 0, l = attribute.count; i < l; i++) {\n                  v1.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n                  scope.expandByPoint(v1);\n                }\n              }\n            }\n          }\n        });\n        return this;\n      };\n    }(),\n    containsPoint: function (point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n    },\n    containsBox: function (box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    },\n    getParameter: function (point, optionalTarget) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      var result = optionalTarget || new Vector3();\n      return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    },\n    intersectsBox: function (box) {\n      // using 6 splitting planes to rule out intersections.\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n    },\n    intersectsSphere: function () {\n      var closestPoint = new Vector3();\n      return function intersectsSphere(sphere) {\n        // Find the point on the AABB closest to the sphere center.\n        this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n        return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n      };\n    }(),\n    intersectsPlane: function (plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= plane.constant && max >= plane.constant;\n    },\n    clampPoint: function (point, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return result.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new Vector3();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    getBoundingSphere: function () {\n      var v1 = new Vector3();\n      return function getBoundingSphere(optionalTarget) {\n        var result = optionalTarget || new Sphere();\n        this.getCenter(result.center);\n        result.radius = this.getSize(v1).length() * 0.5;\n        return result;\n      };\n    }(),\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    applyMatrix4: function () {\n      var points = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\n      return function applyMatrix4(matrix) {\n        // transform of empty box is an empty box.\n        if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n        points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n        points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n        points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n        points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n        points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n        points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n        points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n        points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n        this.setFromPoints(points);\n        return this;\n      };\n    }(),\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Sphere(center, radius) {\n    this.center = center !== undefined ? center : new Vector3();\n    this.radius = radius !== undefined ? radius : 0;\n  }\n\n  Object.assign(Sphere.prototype, {\n    set: function (center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    },\n    setFromPoints: function () {\n      var box = new Box3();\n      return function setFromPoints(points, optionalCenter) {\n        var center = this.center;\n\n        if (optionalCenter !== undefined) {\n          center.copy(optionalCenter);\n        } else {\n          box.setFromPoints(points).getCenter(center);\n        }\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = points.length; i < il; i++) {\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n        }\n\n        this.radius = Math.sqrt(maxRadiusSq);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    },\n    empty: function () {\n      return this.radius <= 0;\n    },\n    containsPoint: function (point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    },\n    distanceToPoint: function (point) {\n      return point.distanceTo(this.center) - this.radius;\n    },\n    intersectsSphere: function (sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsSphere(this);\n    },\n    intersectsPlane: function (plane) {\n      // We use the following equation to compute the signed distance from\n      // the center of the sphere to the plane.\n      //\n      // distance = q * n - d\n      //\n      // If this distance is greater than the radius of the sphere,\n      // then there is no intersection.\n      return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n    },\n    clampPoint: function (point, optionalTarget) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n      var result = optionalTarget || new Vector3();\n      result.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        result.sub(this.center).normalize();\n        result.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return result;\n    },\n    getBoundingBox: function (optionalTarget) {\n      var box = optionalTarget || new Box3();\n      box.set(this.center, this.center);\n      box.expandByScalar(this.radius);\n      return box;\n    },\n    applyMatrix4: function (matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    },\n    translate: function (offset) {\n      this.center.add(offset);\n      return this;\n    },\n    equals: function (sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   * @author tschw\n   */\n\n  function Matrix3() {\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix3.prototype, {\n    isMatrix3: true,\n    set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    },\n    setFromMatrix4: function (m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    },\n    applyToBufferAttribute: function () {\n      var v1 = new Vector3();\n      return function applyToBufferAttribute(attribute) {\n        for (var i = 0, l = attribute.count; i < l; i++) {\n          v1.x = attribute.getX(i);\n          v1.y = attribute.getY(i);\n          v1.z = attribute.getZ(i);\n          v1.applyMatrix3(this);\n          attribute.setXYZ(i, v1.x, v1.y, v1.z);\n        }\n\n        return attribute;\n      };\n    }(),\n    multiply: function (m) {\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n      var a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n      var a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n      var b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n      var b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n      var b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    },\n    determinant: function () {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    },\n    getInverse: function (matrix, throwOnDegenerate) {\n      if (matrix && matrix.isMatrix4) {\n        console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");\n      }\n\n      var me = matrix.elements,\n          te = this.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n12 = me[3],\n          n22 = me[4],\n          n32 = me[5],\n          n13 = me[6],\n          n23 = me[7],\n          n33 = me[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    },\n    transpose: function () {\n      var tmp,\n          m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    },\n    getNormalMatrix: function (matrix4) {\n      return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n    },\n    transposeIntoArray: function (r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 9; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n\n      for (var i = 0; i < 9; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Plane(normal, constant) {\n    this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n    this.constant = constant !== undefined ? constant : 0;\n  }\n\n  Object.assign(Plane.prototype, {\n    set: function (normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    },\n    setComponents: function (x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    },\n    setFromNormalAndCoplanarPoint: function (normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n      return this;\n    },\n    setFromCoplanarPoints: function () {\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function setFromCoplanarPoints(a, b, c) {\n        var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n        this.setFromNormalAndCoplanarPoint(normal, a);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    },\n    normalize: function () {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    },\n    negate: function () {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    },\n    distanceToPoint: function (point) {\n      return this.normal.dot(point) + this.constant;\n    },\n    distanceToSphere: function (sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    },\n    projectPoint: function (point, optionalTarget) {\n      return this.orthoPoint(point, optionalTarget).sub(point).negate();\n    },\n    orthoPoint: function (point, optionalTarget) {\n      var perpendicularMagnitude = this.distanceToPoint(point);\n      var result = optionalTarget || new Vector3();\n      return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n    },\n    intersectLine: function () {\n      var v1 = new Vector3();\n      return function intersectLine(line, optionalTarget) {\n        var result = optionalTarget || new Vector3();\n        var direction = line.delta(v1);\n        var denominator = this.normal.dot(direction);\n\n        if (denominator === 0) {\n          // line is coplanar, return origin\n          if (this.distanceToPoint(line.start) === 0) {\n            return result.copy(line.start);\n          } // Unsure if this is the correct method to handle this case.\n\n\n          return undefined;\n        }\n\n        var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n        if (t < 0 || t > 1) {\n          return undefined;\n        }\n\n        return result.copy(direction).multiplyScalar(t).add(line.start);\n      };\n    }(),\n    intersectsLine: function (line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsPlane(this);\n    },\n    intersectsSphere: function (sphere) {\n      return sphere.intersectsPlane(this);\n    },\n    coplanarPoint: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return result.copy(this.normal).multiplyScalar(-this.constant);\n    },\n    applyMatrix4: function () {\n      var v1 = new Vector3();\n      var m1 = new Matrix3();\n      return function applyMatrix4(matrix, optionalNormalMatrix) {\n        var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix); // transform normal based on theory here:\n        // http://www.songho.ca/opengl/gl_normaltransform.html\n\n        var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n        var normal = this.normal.applyMatrix3(normalMatrix).normalize(); // recalculate constant (like in setFromNormalAndCoplanarPoint)\n\n        this.constant = -referencePoint.dot(normal);\n        return this;\n      };\n    }(),\n    translate: function (offset) {\n      this.constant = this.constant - offset.dot(this.normal);\n      return this;\n    },\n    equals: function (plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / http://clara.io\n   */\n\n  function Frustum(p0, p1, p2, p3, p4, p5) {\n    this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n  }\n\n  Object.assign(Frustum.prototype, {\n    set: function (p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    },\n    setFromMatrix: function (m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    },\n    intersectsObject: function () {\n      var sphere = new Sphere();\n      return function intersectsObject(object) {\n        var geometry = object.geometry;\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSprite: function () {\n      var sphere = new Sphere();\n      return function intersectsSprite(sprite) {\n        sphere.center.set(0, 0, 0);\n        sphere.radius = 0.7071067811865476;\n        sphere.applyMatrix4(sprite.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSphere: function (sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    intersectsBox: function () {\n      var p1 = new Vector3(),\n          p2 = new Vector3();\n      return function intersectsBox(box) {\n        var planes = this.planes;\n\n        for (var i = 0; i < 6; i++) {\n          var plane = planes[i];\n          p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n          p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n          p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n          p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n          p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n          p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n          var d1 = plane.distanceToPoint(p1);\n          var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n          if (d1 < 0 && d2 < 0) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    }(),\n    containsPoint: function (point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLShadowMap(_renderer, _lights, _objects, capabilities) {\n    var _gl = _renderer.context,\n        _state = _renderer.state,\n        _frustum = new Frustum(),\n        _projScreenMatrix = new Matrix4(),\n        _lightShadows = _lights.shadows,\n        _shadowMapSize = new Vector2(),\n        _maxShadowMapSize = new Vector2(capabilities.maxTextureSize, capabilities.maxTextureSize),\n        _lookTarget = new Vector3(),\n        _lightPositionWorld = new Vector3(),\n        _MorphingFlag = 1,\n        _SkinningFlag = 2,\n        _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n        _depthMaterials = new Array(_NumberOfMaterialVariants),\n        _distanceMaterials = new Array(_NumberOfMaterialVariants),\n        _materialCache = {};\n\n    var cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    var cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n    var cube2DViewPorts = [new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4()]; // init\n\n    var depthMaterialTemplate = new MeshDepthMaterial();\n    depthMaterialTemplate.depthPacking = RGBADepthPacking;\n    depthMaterialTemplate.clipping = true;\n    var distanceShader = ShaderLib[\"distanceRGBA\"];\n    var distanceUniforms = UniformsUtils.clone(distanceShader.uniforms);\n\n    for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n      var useMorphing = (i & _MorphingFlag) !== 0;\n      var useSkinning = (i & _SkinningFlag) !== 0;\n      var depthMaterial = depthMaterialTemplate.clone();\n      depthMaterial.morphTargets = useMorphing;\n      depthMaterial.skinning = useSkinning;\n      _depthMaterials[i] = depthMaterial;\n      var distanceMaterial = new ShaderMaterial({\n        defines: {\n          'USE_SHADOWMAP': ''\n        },\n        uniforms: distanceUniforms,\n        vertexShader: distanceShader.vertexShader,\n        fragmentShader: distanceShader.fragmentShader,\n        morphTargets: useMorphing,\n        skinning: useSkinning,\n        clipping: true\n      });\n      _distanceMaterials[i] = distanceMaterial;\n    } //\n\n\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = PCFShadowMap;\n    this.renderReverseSided = true;\n    this.renderSingleSided = true;\n\n    this.render = function (scene, camera) {\n      if (scope.enabled === false) return;\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n      if (_lightShadows.length === 0) return; // Set GL state for depth map.\n\n      _state.disable(_gl.BLEND);\n\n      _state.buffers.color.setClear(1, 1, 1, 1);\n\n      _state.buffers.depth.setTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      var faceCount;\n\n      for (var i = 0, il = _lightShadows.length; i < il; i++) {\n        var light = _lightShadows[i];\n        var shadow = light.shadow;\n        var isPointLight = light && light.isPointLight;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        var shadowCamera = shadow.camera;\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        _shadowMapSize.min(_maxShadowMapSize);\n\n        if (isPointLight) {\n          var vpWidth = _shadowMapSize.x;\n          var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n          // following orientation:\n          //\n          //  xzXZ\n          //   y Y\n          //\n          // X - Positive x direction\n          // x - Negative x direction\n          // Y - Positive y direction\n          // y - Negative y direction\n          // Z - Positive z direction\n          // z - Negative z direction\n          // positive X\n\n          cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n          cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n          cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n          cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n          cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n          cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n          _shadowMapSize.x *= 4.0;\n          _shadowMapSize.y *= 2.0;\n        }\n\n        if (shadow.map === null) {\n          var pars = {\n            minFilter: NearestFilter,\n            magFilter: NearestFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + \".shadowMap\";\n          shadowCamera.updateProjectionMatrix();\n        }\n\n        if (shadow.isSpotLightShadow) {\n          shadow.update(light);\n        }\n\n        var shadowMap = shadow.map;\n        var shadowMatrix = shadow.matrix;\n\n        _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n        shadowCamera.position.copy(_lightPositionWorld);\n\n        if (isPointLight) {\n          faceCount = 6; // for point lights we set the shadow matrix to be a translation-only matrix\n          // equal to inverse of the light's position\n\n          shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n        } else {\n          faceCount = 1;\n\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n          shadowCamera.updateMatrixWorld(); // compute shadow matrix\n\n          shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n          shadowMatrix.multiply(shadowCamera.projectionMatrix);\n          shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n        }\n\n        _renderer.setRenderTarget(shadowMap);\n\n        _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n        // run a single pass if not\n\n\n        for (var face = 0; face < faceCount; face++) {\n          if (isPointLight) {\n            _lookTarget.copy(shadowCamera.position);\n\n            _lookTarget.add(cubeDirections[face]);\n\n            shadowCamera.up.copy(cubeUps[face]);\n            shadowCamera.lookAt(_lookTarget);\n            shadowCamera.updateMatrixWorld();\n            var vpDimensions = cube2DViewPorts[face];\n\n            _state.viewport(vpDimensions);\n          } // update camera matrices and frustum\n\n\n          _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n          _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n          renderObject(scene, camera, shadowCamera, isPointLight);\n        }\n      } // Restore GL state.\n\n\n      var clearColor = _renderer.getClearColor();\n\n      var clearAlpha = _renderer.getClearAlpha();\n\n      _renderer.setClearColor(clearColor, clearAlpha);\n\n      scope.needsUpdate = false;\n    };\n\n    function getDepthMaterial(object, material, isPointLight, lightPositionWorld) {\n      var geometry = object.geometry;\n      var result = null;\n      var materialVariants = _depthMaterials;\n      var customMaterial = object.customDepthMaterial;\n\n      if (isPointLight) {\n        materialVariants = _distanceMaterials;\n        customMaterial = object.customDistanceMaterial;\n      }\n\n      if (!customMaterial) {\n        var useMorphing = false;\n\n        if (material.morphTargets) {\n          if (geometry && geometry.isBufferGeometry) {\n            useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n          } else if (geometry && geometry.isGeometry) {\n            useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n          }\n        }\n\n        if (object.isSkinnedMesh && material.skinning === false) {\n          console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n        }\n\n        var useSkinning = object.isSkinnedMesh && material.skinning;\n        var variantIndex = 0;\n        if (useMorphing) variantIndex |= _MorphingFlag;\n        if (useSkinning) variantIndex |= _SkinningFlag;\n        result = materialVariants[variantIndex];\n      } else {\n        result = customMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n      var side = material.side;\n\n      if (scope.renderSingleSided && side == DoubleSide) {\n        side = FrontSide;\n      }\n\n      if (scope.renderReverseSided) {\n        if (side === FrontSide) side = BackSide;else if (side === BackSide) side = FrontSide;\n      }\n\n      result.side = side;\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (isPointLight && result.uniforms.lightPos !== undefined) {\n        result.uniforms.lightPos.value.copy(lightPositionWorld);\n      }\n\n      return result;\n    }\n\n    function renderObject(object, camera, shadowCamera, isPointLight) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n        if (object.castShadow && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else if (material.visible) {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        renderObject(children[i], camera, shadowCamera, isPointLight);\n      }\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLAttributes(gl) {\n    var buffers = {};\n\n    function createBuffer(attribute, bufferType) {\n      var array = attribute.array;\n      var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, buffer);\n      gl.bufferData(bufferType, array, usage);\n      attribute.onUploadCallback();\n      var type = gl.FLOAT;\n\n      if (array instanceof Float32Array) {\n        type = gl.FLOAT;\n      } else if (array instanceof Float64Array) {\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n      } else if (array instanceof Uint16Array) {\n        type = gl.UNSIGNED_SHORT;\n      } else if (array instanceof Int16Array) {\n        type = gl.SHORT;\n      } else if (array instanceof Uint32Array) {\n        type = gl.UNSIGNED_INT;\n      } else if (array instanceof Int32Array) {\n        type = gl.INT;\n      } else if (array instanceof Int8Array) {\n        type = gl.BYTE;\n      } else if (array instanceof Uint8Array) {\n        type = gl.UNSIGNED_BYTE;\n      }\n\n      return {\n        buffer: buffer,\n        type: type,\n        bytesPerElement: array.BYTES_PER_ELEMENT,\n        version: attribute.version\n      };\n    }\n\n    function updateBuffer(buffer, attribute, bufferType) {\n      var array = attribute.array;\n      var updateRange = attribute.updateRange;\n      gl.bindBuffer(bufferType, buffer);\n\n      if (attribute.dynamic === false) {\n        gl.bufferData(bufferType, array, gl.STATIC_DRAW);\n      } else if (updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, array);\n      } else if (updateRange.count === 0) {\n        console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n      } else {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n        updateRange.count = -1; // reset range\n      }\n    } //\n\n\n    function get(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      return buffers[attribute.uuid];\n    }\n\n    function remove(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers[attribute.uuid];\n\n      if (data) {\n        gl.deleteBuffer(data.buffer);\n        delete buffers[attribute.uuid];\n      }\n    }\n\n    function update(attribute, bufferType) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers[attribute.uuid];\n\n      if (data === undefined) {\n        buffers[attribute.uuid] = createBuffer(attribute, bufferType);\n      } else if (data.version < attribute.version) {\n        updateBuffer(data.buffer, attribute, bufferType);\n        data.version = attribute.version;\n      }\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n\n  function Euler(x, y, z, order) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._order = order || Euler.DefaultOrder;\n  }\n\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n  Euler.DefaultOrder = 'XYZ';\n  Object.defineProperties(Euler.prototype, {\n    x: {\n      get: function () {\n        return this._x;\n      },\n      set: function (value) {\n        this._x = value;\n        this.onChangeCallback();\n      }\n    },\n    y: {\n      get: function () {\n        return this._y;\n      },\n      set: function (value) {\n        this._y = value;\n        this.onChangeCallback();\n      }\n    },\n    z: {\n      get: function () {\n        return this._z;\n      },\n      set: function (value) {\n        this._z = value;\n        this.onChangeCallback();\n      }\n    },\n    order: {\n      get: function () {\n        return this._order;\n      },\n      set: function (value) {\n        this._order = value;\n        this.onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Euler.prototype, {\n    isEuler: true,\n    set: function (x, y, z, order) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order || this._order;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    },\n    copy: function (euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function (m, order, update) {\n      var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n      order = order || this._order;\n\n      if (order === 'XYZ') {\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.99999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n      } else if (order === 'YXZ') {\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.99999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n      } else if (order === 'ZXY') {\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.99999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n      } else if (order === 'ZYX') {\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.99999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n      } else if (order === 'YZX') {\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.99999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n      } else if (order === 'XZY') {\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.99999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n      } else {\n        console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n      }\n\n      this._order = order;\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromQuaternion: function () {\n      var matrix = new Matrix4();\n      return function setFromQuaternion(q, order, update) {\n        matrix.makeRotationFromQuaternion(q);\n        return this.setFromRotationMatrix(matrix, order, update);\n      };\n    }(),\n    setFromVector3: function (v, order) {\n      return this.set(v.x, v.y, v.z, order || this._order);\n    },\n    reorder: function () {\n      // WARNING: this discards revolution information -bhouston\n      var q = new Quaternion();\n      return function reorder(newOrder) {\n        q.setFromEuler(this);\n        return this.setFromQuaternion(q, newOrder);\n      };\n    }(),\n    equals: function (euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    },\n    fromArray: function (array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n      if (array[3] !== undefined) this._order = array[3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    },\n    toVector3: function (optionalResult) {\n      if (optionalResult) {\n        return optionalResult.set(this._x, this._y, this._z);\n      } else {\n        return new Vector3(this._x, this._y, this._z);\n      }\n    },\n    onChange: function (callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Layers() {\n    this.mask = 1 | 0;\n  }\n\n  Object.assign(Layers.prototype, {\n    set: function (channel) {\n      this.mask = 1 << channel | 0;\n    },\n    enable: function (channel) {\n      this.mask |= 1 << channel | 0;\n    },\n    toggle: function (channel) {\n      this.mask ^= 1 << channel | 0;\n    },\n    disable: function (channel) {\n      this.mask &= ~(1 << channel | 0);\n    },\n    test: function (layers) {\n      return (this.mask & layers.mask) !== 0;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author elephantatwork / www.elephantatwork.ch\n   */\n\n  var object3DId = 0;\n\n  function Object3D() {\n    Object.defineProperty(this, 'id', {\n      value: object3DId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DefaultUp.clone();\n    var position = new Vector3();\n    var rotation = new Euler();\n    var quaternion = new Quaternion();\n    var scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation.onChange(onRotationChange);\n    quaternion.onChange(onQuaternionChange);\n    Object.defineProperties(this, {\n      position: {\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.userData = {};\n  }\n\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\n  Object3D.DefaultMatrixAutoUpdate = true;\n  Object.assign(Object3D.prototype, EventDispatcher.prototype, {\n    isObject3D: true,\n    onBeforeRender: function () {},\n    onAfterRender: function () {},\n    applyMatrix: function (matrix) {\n      this.matrix.multiplyMatrices(matrix, this.matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    applyQuaternion: function (q) {\n      this.quaternion.premultiply(q);\n      return this;\n    },\n    setRotationFromAxisAngle: function (axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    },\n    setRotationFromEuler: function (euler) {\n      this.quaternion.setFromEuler(euler, true);\n    },\n    setRotationFromMatrix: function (m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    },\n    setRotationFromQuaternion: function (q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    },\n    rotateOnAxis: function () {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      var q1 = new Quaternion();\n      return function rotateOnAxis(axis, angle) {\n        q1.setFromAxisAngle(axis, angle);\n        this.quaternion.multiply(q1);\n        return this;\n      };\n    }(),\n    rotateX: function () {\n      var v1 = new Vector3(1, 0, 0);\n      return function rotateX(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateY: function () {\n      var v1 = new Vector3(0, 1, 0);\n      return function rotateY(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateZ: function () {\n      var v1 = new Vector3(0, 0, 1);\n      return function rotateZ(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    translateOnAxis: function () {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      var v1 = new Vector3();\n      return function translateOnAxis(axis, distance) {\n        v1.copy(axis).applyQuaternion(this.quaternion);\n        this.position.add(v1.multiplyScalar(distance));\n        return this;\n      };\n    }(),\n    translateX: function () {\n      var v1 = new Vector3(1, 0, 0);\n      return function translateX(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateY: function () {\n      var v1 = new Vector3(0, 1, 0);\n      return function translateY(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateZ: function () {\n      var v1 = new Vector3(0, 0, 1);\n      return function translateZ(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    localToWorld: function (vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function () {\n      var m1 = new Matrix4();\n      return function worldToLocal(vector) {\n        return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n      };\n    }(),\n    lookAt: function () {\n      // This method does not support objects with rotated and/or translated parent(s)\n      var m1 = new Matrix4();\n      return function lookAt(vector) {\n        if (this.isCamera) {\n          m1.lookAt(this.position, vector, this.up);\n        } else {\n          m1.lookAt(vector, this.position, this.up);\n        }\n\n        this.quaternion.setFromRotationMatrix(m1);\n      };\n    }(),\n    add: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n        return this;\n      }\n\n      if (object && object.isObject3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        object.dispatchEvent({\n          type: 'added'\n        });\n        this.children.push(object);\n      } else {\n        console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n      }\n\n      return this;\n    },\n    remove: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        object.dispatchEvent({\n          type: 'removed'\n        });\n        this.children.splice(index, 1);\n      }\n\n      return this;\n    },\n    getObjectById: function (id) {\n      return this.getObjectByProperty('id', id);\n    },\n    getObjectByName: function (name) {\n      return this.getObjectByProperty('name', name);\n    },\n    getObjectByProperty: function (name, value) {\n      if (this[name] === value) return this;\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    },\n    getWorldPosition: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      this.updateMatrixWorld(true);\n      return result.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function () {\n      var position = new Vector3();\n      var scale = new Vector3();\n      return function getWorldQuaternion(optionalTarget) {\n        var result = optionalTarget || new Quaternion();\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, result, scale);\n        return result;\n      };\n    }(),\n    getWorldRotation: function () {\n      var quaternion = new Quaternion();\n      return function getWorldRotation(optionalTarget) {\n        var result = optionalTarget || new Euler();\n        this.getWorldQuaternion(quaternion);\n        return result.setFromQuaternion(quaternion, this.rotation.order, false);\n      };\n    }(),\n    getWorldScale: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      return function getWorldScale(optionalTarget) {\n        var result = optionalTarget || new Vector3();\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, quaternion, result);\n        return result;\n      };\n    }(),\n    getWorldDirection: function () {\n      var quaternion = new Quaternion();\n      return function getWorldDirection(optionalTarget) {\n        var result = optionalTarget || new Vector3();\n        this.getWorldQuaternion(quaternion);\n        return result.set(0, 0, 1).applyQuaternion(quaternion);\n      };\n    }(),\n    raycast: function () {},\n    traverse: function (callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    },\n    traverseVisible: function (callback) {\n      if (this.visible === false) return;\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    },\n    traverseAncestors: function (callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    },\n    updateMatrix: function () {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    },\n    updateMatrixWorld: function (force) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.matrixWorldNeedsUpdate || force) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(force);\n      }\n    },\n    toJSON: function (meta) {\n      // meta is '' when called from JSON.stringify\n      var isRootObject = meta === undefined || meta === '';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      object.matrix = this.matrix.toArray(); //\n\n      function serialize(library, element) {\n        if (library[element.uuid] === undefined) {\n          library[element.uuid] = element.toJSON(meta);\n        }\n\n        return element.uuid;\n      }\n\n      if (this.geometry !== undefined) {\n        object.geometry = serialize(meta.geometries, this.geometry);\n      }\n\n      if (this.material !== undefined) {\n        if (Array.isArray(this.material)) {\n          var uuids = [];\n\n          for (var i = 0, l = this.material.length; i < l; i++) {\n            uuids.push(serialize(meta.materials, this.material[i]));\n          }\n\n          object.material = uuids;\n        } else {\n          object.material = serialize(meta.materials, this.material);\n        }\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    },\n    clone: function (recursive) {\n      return new this.constructor().copy(this, recursive);\n    },\n    copy: function (source, recursive) {\n      if (recursive === undefined) recursive = true;\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.layers.mask = source.layers.mask;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  function Camera() {\n    Object3D.call(this);\n    this.type = 'Camera';\n    this.matrixWorldInverse = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n  }\n\n  Camera.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Camera,\n    isCamera: true,\n    copy: function (source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\n      this.projectionMatrix.copy(source.projectionMatrix);\n      return this;\n    },\n    getWorldDirection: function () {\n      var quaternion = new Quaternion();\n      return function getWorldDirection(optionalTarget) {\n        var result = optionalTarget || new Vector3();\n        this.getWorldQuaternion(quaternion);\n        return result.set(0, 0, -1).applyQuaternion(quaternion);\n      };\n    }(),\n    updateMatrixWorld: function (force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      this.matrixWorldInverse.getInverse(this.matrixWorld);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author arose / http://github.com/arose\n   */\n\n  function OrthographicCamera(left, right, top, bottom, near, far) {\n    Camera.call(this);\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.updateProjectionMatrix();\n  }\n\n  OrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: OrthographicCamera,\n    isOrthographicCamera: true,\n    copy: function (source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    },\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      this.view = {\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        offsetX: x,\n        offsetY: y,\n        width: width,\n        height: height\n      };\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      this.view = null;\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null) {\n        var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n        var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n        var scaleW = (this.right - this.left) / this.view.width;\n        var scaleH = (this.top - this.bottom) / this.view.height;\n        left += scaleW * (this.view.offsetX / zoomW);\n        right = left + scaleW * (this.view.width / zoomW);\n        top -= scaleH * (this.view.offsetY / zoomH);\n        bottom = top - scaleH * (this.view.height / zoomH);\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author greggman / http://games.greggman.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author tschw\n   */\n\n  function PerspectiveCamera(fov, aspect, near, far) {\n    Camera.call(this);\n    this.type = 'PerspectiveCamera';\n    this.fov = fov !== undefined ? fov : 50;\n    this.zoom = 1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.focus = 10;\n    this.aspect = aspect !== undefined ? aspect : 1;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  PerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: PerspectiveCamera,\n    isPerspectiveCamera: true,\n    copy: function (source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    },\n\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n    setFocalLength: function (focalLength) {\n      // see http://www.bobatkins.com/photography/technical/field_of_view.html\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    },\n\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n    getFocalLength: function () {\n      var vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    },\n    getEffectiveFOV: function () {\n      return _Math.RAD2DEG * 2 * Math.atan(Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n    },\n    getFilmWidth: function () {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    },\n    getFilmHeight: function () {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    },\n\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *   +---+---+---+\n     *   | A | B | C |\n     *   +---+---+---+\n     *   | D | E | F |\n     *   +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *   var w = 1920;\n     *   var h = 1080;\n     *   var fullWidth = w * 3;\n     *   var fullHeight = h * 2;\n     *\n     *   --A--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *   --B--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *   --C--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *   --D--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *   --E--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *   --F--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *   Note there is no reason monitors have to be the same size or in a grid.\n     */\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n      this.view = {\n        fullWidth: fullWidth,\n        fullHeight: fullHeight,\n        offsetX: x,\n        offsetY: y,\n        width: width,\n        height: height\n      };\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      this.view = null;\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var near = this.near,\n          top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n          height = 2 * top,\n          width = this.aspect * height,\n          left = -0.5 * width,\n          view = this.view;\n\n      if (view !== null) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n      if (skew !== 0) left += near * skew / this.getFilmWidth();\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Face3(a, b, c, normal, color, materialIndex) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = normal && normal.isVector3 ? normal : new Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = color && color.isColor ? color : new Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n  }\n\n  Object.assign(Face3.prototype, {\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.a = source.a;\n      this.b = source.b;\n      this.c = source.c;\n      this.normal.copy(source.normal);\n      this.color.copy(source.color);\n      this.materialIndex = source.materialIndex;\n\n      for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n        this.vertexNormals[i] = source.vertexNormals[i].clone();\n      }\n\n      for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n        this.vertexColors[i] = source.vertexColors[i].clone();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author bhouston / http://clara.io\n   */\n\n  var count = 0;\n\n  function GeometryIdCount() {\n    return count++;\n  }\n\n  function Geometry() {\n    Object.defineProperty(this, 'id', {\n      value: GeometryIdCount()\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Geometry';\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.elementsNeedUpdate = false;\n    this.verticesNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.lineDistancesNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Object.assign(Geometry.prototype, EventDispatcher.prototype, {\n    isGeometry: true,\n    applyMatrix: function (matrix) {\n      var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n      for (var i = 0, il = this.vertices.length; i < il; i++) {\n        var vertex = this.vertices[i];\n        vertex.applyMatrix4(matrix);\n      }\n\n      for (var i = 0, il = this.faces.length; i < il; i++) {\n        var face = this.faces[i];\n        face.normal.applyMatrix3(normalMatrix).normalize();\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n        }\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      this.verticesNeedUpdate = true;\n      this.normalsNeedUpdate = true;\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1 = new Matrix4();\n      return function rotateX(angle) {\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1 = new Matrix4();\n      return function rotateY(angle) {\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1 = new Matrix4();\n      return function rotateZ(angle) {\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1 = new Matrix4();\n      return function translate(x, y, z) {\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1 = new Matrix4();\n      return function scale(x, y, z) {\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj = new Object3D();\n      return function lookAt(vector) {\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    fromBufferGeometry: function (geometry) {\n      var scope = this;\n      var indices = geometry.index !== null ? geometry.index.array : undefined;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n      var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n      var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n      var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n      var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n      if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n      var tempNormals = [];\n      var tempUVs = [];\n      var tempUVs2 = [];\n\n      for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n        scope.vertices.push(new Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n        if (normals !== undefined) {\n          tempNormals.push(new Vector3(normals[i], normals[i + 1], normals[i + 2]));\n        }\n\n        if (colors !== undefined) {\n          scope.colors.push(new Color(colors[i], colors[i + 1], colors[i + 2]));\n        }\n\n        if (uvs !== undefined) {\n          tempUVs.push(new Vector2(uvs[j], uvs[j + 1]));\n        }\n\n        if (uvs2 !== undefined) {\n          tempUVs2.push(new Vector2(uvs2[j], uvs2[j + 1]));\n        }\n      }\n\n      function addFace(a, b, c, materialIndex) {\n        var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n        var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n        var face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n        scope.faces.push(face);\n\n        if (uvs !== undefined) {\n          scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n        }\n\n        if (uvs2 !== undefined) {\n          scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n        }\n      }\n\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            if (indices !== undefined) {\n              addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n            } else {\n              addFace(j, j + 1, j + 2, group.materialIndex);\n            }\n          }\n        }\n      } else {\n        if (indices !== undefined) {\n          for (var i = 0; i < indices.length; i += 3) {\n            addFace(indices[i], indices[i + 1], indices[i + 2]);\n          }\n        } else {\n          for (var i = 0; i < positions.length / 3; i += 3) {\n            addFace(i, i + 1, i + 2);\n          }\n        }\n      }\n\n      this.computeFaceNormals();\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      return this;\n    },\n    center: function () {\n      this.computeBoundingBox();\n      var offset = this.boundingBox.getCenter().negate();\n      this.translate(offset.x, offset.y, offset.z);\n      return offset;\n    },\n    normalize: function () {\n      this.computeBoundingSphere();\n      var center = this.boundingSphere.center;\n      var radius = this.boundingSphere.radius;\n      var s = radius === 0 ? 1 : 1.0 / radius;\n      var matrix = new Matrix4();\n      matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n      this.applyMatrix(matrix);\n      return this;\n    },\n    computeFaceNormals: function () {\n      var cb = new Vector3(),\n          ab = new Vector3();\n\n      for (var f = 0, fl = this.faces.length; f < fl; f++) {\n        var face = this.faces[f];\n        var vA = this.vertices[face.a];\n        var vB = this.vertices[face.b];\n        var vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        face.normal.copy(cb);\n      }\n    },\n    computeVertexNormals: function (areaWeighted) {\n      if (areaWeighted === undefined) areaWeighted = true;\n      var v, vl, f, fl, face, vertices;\n      vertices = new Array(this.vertices.length);\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v] = new Vector3();\n      }\n\n      if (areaWeighted) {\n        // vertex normals weighted by triangle areas\n        // http://www.iquilezles.org/www/articles/normals/normals.htm\n        var vA, vB, vC;\n        var cb = new Vector3(),\n            ab = new Vector3();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vA = this.vertices[face.a];\n          vB = this.vertices[face.b];\n          vC = this.vertices[face.c];\n          cb.subVectors(vC, vB);\n          ab.subVectors(vA, vB);\n          cb.cross(ab);\n          vertices[face.a].add(cb);\n          vertices[face.b].add(cb);\n          vertices[face.c].add(cb);\n        }\n      } else {\n        this.computeFaceNormals();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vertices[face.a].add(face.normal);\n          vertices[face.b].add(face.normal);\n          vertices[face.c].add(face.normal);\n        }\n      }\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v].normalize();\n      }\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(vertices[face.a]);\n          vertexNormals[1].copy(vertices[face.b]);\n          vertexNormals[2].copy(vertices[face.c]);\n        } else {\n          vertexNormals[0] = vertices[face.a].clone();\n          vertexNormals[1] = vertices[face.b].clone();\n          vertexNormals[2] = vertices[face.c].clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeFlatVertexNormals: function () {\n      var f, fl, face;\n      this.computeFaceNormals();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(face.normal);\n          vertexNormals[1].copy(face.normal);\n          vertexNormals[2].copy(face.normal);\n        } else {\n          vertexNormals[0] = face.normal.clone();\n          vertexNormals[1] = face.normal.clone();\n          vertexNormals[2] = face.normal.clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeMorphNormals: function () {\n      var i, il, f, fl, face; // save original normals\n      // - create temp variables on first access\n      //   otherwise just copy (for faster repeated calls)\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n\n        if (!face.__originalFaceNormal) {\n          face.__originalFaceNormal = face.normal.clone();\n        } else {\n          face.__originalFaceNormal.copy(face.normal);\n        }\n\n        if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n        for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n          if (!face.__originalVertexNormals[i]) {\n            face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n          } else {\n            face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n          }\n        }\n      } // use temp geometry to compute face and vertex normals for each morph\n\n\n      var tmpGeo = new Geometry();\n      tmpGeo.faces = this.faces;\n\n      for (i = 0, il = this.morphTargets.length; i < il; i++) {\n        // create on first access\n        if (!this.morphNormals[i]) {\n          this.morphNormals[i] = {};\n          this.morphNormals[i].faceNormals = [];\n          this.morphNormals[i].vertexNormals = [];\n          var dstNormalsFace = this.morphNormals[i].faceNormals;\n          var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n          var faceNormal, vertexNormals;\n\n          for (f = 0, fl = this.faces.length; f < fl; f++) {\n            faceNormal = new Vector3();\n            vertexNormals = {\n              a: new Vector3(),\n              b: new Vector3(),\n              c: new Vector3()\n            };\n            dstNormalsFace.push(faceNormal);\n            dstNormalsVertex.push(vertexNormals);\n          }\n        }\n\n        var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n        tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n        tmpGeo.computeFaceNormals();\n        tmpGeo.computeVertexNormals(); // store morph normals\n\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          faceNormal = morphNormals.faceNormals[f];\n          vertexNormals = morphNormals.vertexNormals[f];\n          faceNormal.copy(face.normal);\n          vertexNormals.a.copy(face.vertexNormals[0]);\n          vertexNormals.b.copy(face.vertexNormals[1]);\n          vertexNormals.c.copy(face.vertexNormals[2]);\n        }\n      } // restore original normals\n\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        face.normal = face.__originalFaceNormal;\n        face.vertexNormals = face.__originalVertexNormals;\n      }\n    },\n    computeLineDistances: function () {\n      var d = 0;\n      var vertices = this.vertices;\n\n      for (var i = 0, il = vertices.length; i < il; i++) {\n        if (i > 0) {\n          d += vertices[i].distanceTo(vertices[i - 1]);\n        }\n\n        this.lineDistances[i] = d;\n      }\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      this.boundingBox.setFromPoints(this.vertices);\n    },\n    computeBoundingSphere: function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      this.boundingSphere.setFromPoints(this.vertices);\n    },\n    merge: function (geometry, matrix, materialIndexOffset) {\n      if (!(geometry && geometry.isGeometry)) {\n        console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n        return;\n      }\n\n      var normalMatrix,\n          vertexOffset = this.vertices.length,\n          vertices1 = this.vertices,\n          vertices2 = geometry.vertices,\n          faces1 = this.faces,\n          faces2 = geometry.faces,\n          uvs1 = this.faceVertexUvs[0],\n          uvs2 = geometry.faceVertexUvs[0],\n          colors1 = this.colors,\n          colors2 = geometry.colors;\n      if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n      if (matrix !== undefined) {\n        normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      } // vertices\n\n\n      for (var i = 0, il = vertices2.length; i < il; i++) {\n        var vertex = vertices2[i];\n        var vertexCopy = vertex.clone();\n        if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n        vertices1.push(vertexCopy);\n      } // colors\n\n\n      for (var i = 0, il = colors2.length; i < il; i++) {\n        colors1.push(colors2[i].clone());\n      } // faces\n\n\n      for (i = 0, il = faces2.length; i < il; i++) {\n        var face = faces2[i],\n            faceCopy,\n            normal,\n            color,\n            faceVertexNormals = face.vertexNormals,\n            faceVertexColors = face.vertexColors;\n        faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n        faceCopy.normal.copy(face.normal);\n\n        if (normalMatrix !== undefined) {\n          faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n          normal = faceVertexNormals[j].clone();\n\n          if (normalMatrix !== undefined) {\n            normal.applyMatrix3(normalMatrix).normalize();\n          }\n\n          faceCopy.vertexNormals.push(normal);\n        }\n\n        faceCopy.color.copy(face.color);\n\n        for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n          color = faceVertexColors[j];\n          faceCopy.vertexColors.push(color.clone());\n        }\n\n        faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n        faces1.push(faceCopy);\n      } // uvs\n\n\n      for (i = 0, il = uvs2.length; i < il; i++) {\n        var uv = uvs2[i],\n            uvCopy = [];\n\n        if (uv === undefined) {\n          continue;\n        }\n\n        for (var j = 0, jl = uv.length; j < jl; j++) {\n          uvCopy.push(uv[j].clone());\n        }\n\n        uvs1.push(uvCopy);\n      }\n    },\n    mergeMesh: function (mesh) {\n      if (!(mesh && mesh.isMesh)) {\n        console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n        return;\n      }\n\n      mesh.matrixAutoUpdate && mesh.updateMatrix();\n      this.merge(mesh.geometry, mesh.matrix);\n    },\n\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    mergeVertices: function () {\n      var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n      var unique = [],\n          changes = [];\n      var v, key;\n      var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n      var precision = Math.pow(10, precisionPoints);\n      var i, il, face;\n      var indices, j, jl;\n\n      for (i = 0, il = this.vertices.length; i < il; i++) {\n        v = this.vertices[i];\n        key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n        if (verticesMap[key] === undefined) {\n          verticesMap[key] = i;\n          unique.push(this.vertices[i]);\n          changes[i] = unique.length - 1;\n        } else {\n          //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n          changes[i] = changes[verticesMap[key]];\n        }\n      } // if faces are completely degenerate after merging vertices, we\n      // have to remove them from the geometry.\n\n\n      var faceIndicesToRemove = [];\n\n      for (i = 0, il = this.faces.length; i < il; i++) {\n        face = this.faces[i];\n        face.a = changes[face.a];\n        face.b = changes[face.b];\n        face.c = changes[face.c];\n        indices = [face.a, face.b, face.c]; // if any duplicate vertices are found in a Face3\n        // we have to remove the face as nothing can be saved\n\n        for (var n = 0; n < 3; n++) {\n          if (indices[n] === indices[(n + 1) % 3]) {\n            faceIndicesToRemove.push(i);\n            break;\n          }\n        }\n      }\n\n      for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n        var idx = faceIndicesToRemove[i];\n        this.faces.splice(idx, 1);\n\n        for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n          this.faceVertexUvs[j].splice(idx, 1);\n        }\n      } // Use unique set of vertices\n\n\n      var diff = this.vertices.length - unique.length;\n      this.vertices = unique;\n      return diff;\n    },\n    sortFacesByMaterialIndex: function () {\n      var faces = this.faces;\n      var length = faces.length; // tag faces\n\n      for (var i = 0; i < length; i++) {\n        faces[i]._id = i;\n      } // sort faces\n\n\n      function materialIndexSort(a, b) {\n        return a.materialIndex - b.materialIndex;\n      }\n\n      faces.sort(materialIndexSort); // sort uvs\n\n      var uvs1 = this.faceVertexUvs[0];\n      var uvs2 = this.faceVertexUvs[1];\n      var newUvs1, newUvs2;\n      if (uvs1 && uvs1.length === length) newUvs1 = [];\n      if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n      for (var i = 0; i < length; i++) {\n        var id = faces[i]._id;\n        if (newUvs1) newUvs1.push(uvs1[id]);\n        if (newUvs2) newUvs2.push(uvs2[id]);\n      }\n\n      if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n      if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Geometry',\n          generator: 'Geometry.toJSON'\n        }\n      }; // standard Geometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      var vertices = [];\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var vertex = this.vertices[i];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      var faces = [];\n      var normals = [];\n      var normalsHash = {};\n      var colors = [];\n      var colorsHash = {};\n      var uvs = [];\n      var uvsHash = {};\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n        var hasMaterial = true;\n        var hasFaceUv = false; // deprecated\n\n        var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n        var hasFaceNormal = face.normal.length() > 0;\n        var hasFaceVertexNormal = face.vertexNormals.length > 0;\n        var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n        var hasFaceVertexColor = face.vertexColors.length > 0;\n        var faceType = 0;\n        faceType = setBit(faceType, 0, 0); // isQuad\n\n        faceType = setBit(faceType, 1, hasMaterial);\n        faceType = setBit(faceType, 2, hasFaceUv);\n        faceType = setBit(faceType, 3, hasFaceVertexUv);\n        faceType = setBit(faceType, 4, hasFaceNormal);\n        faceType = setBit(faceType, 5, hasFaceVertexNormal);\n        faceType = setBit(faceType, 6, hasFaceColor);\n        faceType = setBit(faceType, 7, hasFaceVertexColor);\n        faces.push(faceType);\n        faces.push(face.a, face.b, face.c);\n        faces.push(face.materialIndex);\n\n        if (hasFaceVertexUv) {\n          var faceVertexUvs = this.faceVertexUvs[0][i];\n          faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n        }\n\n        if (hasFaceNormal) {\n          faces.push(getNormalIndex(face.normal));\n        }\n\n        if (hasFaceVertexNormal) {\n          var vertexNormals = face.vertexNormals;\n          faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n        }\n\n        if (hasFaceColor) {\n          faces.push(getColorIndex(face.color));\n        }\n\n        if (hasFaceVertexColor) {\n          var vertexColors = face.vertexColors;\n          faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n        }\n      }\n\n      function setBit(value, position, enabled) {\n        return enabled ? value | 1 << position : value & ~(1 << position);\n      }\n\n      function getNormalIndex(normal) {\n        var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n        if (normalsHash[hash] !== undefined) {\n          return normalsHash[hash];\n        }\n\n        normalsHash[hash] = normals.length / 3;\n        normals.push(normal.x, normal.y, normal.z);\n        return normalsHash[hash];\n      }\n\n      function getColorIndex(color) {\n        var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n        if (colorsHash[hash] !== undefined) {\n          return colorsHash[hash];\n        }\n\n        colorsHash[hash] = colors.length;\n        colors.push(color.getHex());\n        return colorsHash[hash];\n      }\n\n      function getUvIndex(uv) {\n        var hash = uv.x.toString() + uv.y.toString();\n\n        if (uvsHash[hash] !== undefined) {\n          return uvsHash[hash];\n        }\n\n        uvsHash[hash] = uvs.length / 2;\n        uvs.push(uv.x, uv.y);\n        return uvsHash[hash];\n      }\n\n      data.data = {};\n      data.data.vertices = vertices;\n      data.data.normals = normals;\n      if (colors.length > 0) data.data.colors = colors;\n      if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n      data.data.faces = faces;\n      return data;\n    },\n    clone: function () {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new Geometry().copy(this);\n    },\n    copy: function (source) {\n      var i, il, j, jl, k, kl; // reset\n\n      this.vertices = [];\n      this.colors = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      this.morphTargets = [];\n      this.morphNormals = [];\n      this.skinWeights = [];\n      this.skinIndices = [];\n      this.lineDistances = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // vertices\n\n      var vertices = source.vertices;\n\n      for (i = 0, il = vertices.length; i < il; i++) {\n        this.vertices.push(vertices[i].clone());\n      } // colors\n\n\n      var colors = source.colors;\n\n      for (i = 0, il = colors.length; i < il; i++) {\n        this.colors.push(colors[i].clone());\n      } // faces\n\n\n      var faces = source.faces;\n\n      for (i = 0, il = faces.length; i < il; i++) {\n        this.faces.push(faces[i].clone());\n      } // face vertex uvs\n\n\n      for (i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n        var faceVertexUvs = source.faceVertexUvs[i];\n\n        if (this.faceVertexUvs[i] === undefined) {\n          this.faceVertexUvs[i] = [];\n        }\n\n        for (j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n          var uvs = faceVertexUvs[j],\n              uvsCopy = [];\n\n          for (k = 0, kl = uvs.length; k < kl; k++) {\n            var uv = uvs[k];\n            uvsCopy.push(uv.clone());\n          }\n\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      } // morph targets\n\n\n      var morphTargets = source.morphTargets;\n\n      for (i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = {};\n        morphTarget.name = morphTargets[i].name; // vertices\n\n        if (morphTargets[i].vertices !== undefined) {\n          morphTarget.vertices = [];\n\n          for (j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n            morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n          }\n        } // normals\n\n\n        if (morphTargets[i].normals !== undefined) {\n          morphTarget.normals = [];\n\n          for (j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n            morphTarget.normals.push(morphTargets[i].normals[j].clone());\n          }\n        }\n\n        this.morphTargets.push(morphTarget);\n      } // morph normals\n\n\n      var morphNormals = source.morphNormals;\n\n      for (i = 0, il = morphNormals.length; i < il; i++) {\n        var morphNormal = {}; // vertex normals\n\n        if (morphNormals[i].vertexNormals !== undefined) {\n          morphNormal.vertexNormals = [];\n\n          for (j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n            var srcVertexNormal = morphNormals[i].vertexNormals[j];\n            var destVertexNormal = {};\n            destVertexNormal.a = srcVertexNormal.a.clone();\n            destVertexNormal.b = srcVertexNormal.b.clone();\n            destVertexNormal.c = srcVertexNormal.c.clone();\n            morphNormal.vertexNormals.push(destVertexNormal);\n          }\n        } // face normals\n\n\n        if (morphNormals[i].faceNormals !== undefined) {\n          morphNormal.faceNormals = [];\n\n          for (j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n            morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n          }\n        }\n\n        this.morphNormals.push(morphNormal);\n      } // skin weights\n\n\n      var skinWeights = source.skinWeights;\n\n      for (i = 0, il = skinWeights.length; i < il; i++) {\n        this.skinWeights.push(skinWeights[i].clone());\n      } // skin indices\n\n\n      var skinIndices = source.skinIndices;\n\n      for (i = 0, il = skinIndices.length; i < il; i++) {\n        this.skinIndices.push(skinIndices[i].clone());\n      } // line distances\n\n\n      var lineDistances = source.lineDistances;\n\n      for (i = 0, il = lineDistances.length; i < il; i++) {\n        this.lineDistances.push(lineDistances[i]);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // update flags\n\n\n      this.elementsNeedUpdate = source.elementsNeedUpdate;\n      this.verticesNeedUpdate = source.verticesNeedUpdate;\n      this.uvsNeedUpdate = source.uvsNeedUpdate;\n      this.normalsNeedUpdate = source.normalsNeedUpdate;\n      this.colorsNeedUpdate = source.colorsNeedUpdate;\n      this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n      this.groupsNeedUpdate = source.groupsNeedUpdate;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferAttribute(array, itemSize, normalized) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n\n    this.onUploadCallback = function () {};\n\n    this.version = 0;\n  }\n\n  Object.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n    set: function (value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    isBufferAttribute: true,\n    setArray: function (array) {\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.count = array !== undefined ? array.length / this.itemSize : 0;\n      this.array = array;\n    },\n    setDynamic: function (value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function (source) {\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.count = source.count;\n      this.normalized = source.normalized;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    copyArray: function (array) {\n      this.array.set(array);\n      return this;\n    },\n    copyColorsArray: function (colors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    },\n    copyIndicesArray: function (indices) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        var index = indices[i];\n        array[offset++] = index.a;\n        array[offset++] = index.b;\n        array[offset++] = index.c;\n      }\n\n      return this;\n    },\n    copyVector2sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    },\n    copyVector3sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    },\n    copyVector4sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    getX: function (index) {\n      return this.array[index * this.itemSize];\n    },\n    setX: function (index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    },\n    getY: function (index) {\n      return this.array[index * this.itemSize + 1];\n    },\n    setY: function (index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    },\n    getZ: function (index) {\n      return this.array[index * this.itemSize + 2];\n    },\n    setZ: function (index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    },\n    getW: function (index) {\n      return this.array[index * this.itemSize + 3];\n    },\n    setW: function (index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    },\n    setXY: function (index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    },\n    onUpload: function (callback) {\n      this.onUploadCallback = callback;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.array, this.itemSize).copy(this);\n    }\n  }); //\n\n  function Int8BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Int8Array(array), itemSize);\n  }\n\n  Int8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n  function Uint8BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Uint8Array(array), itemSize);\n  }\n\n  Uint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n  function Uint8ClampedBufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize);\n  }\n\n  Uint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n  function Int16BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Int16Array(array), itemSize);\n  }\n\n  Int16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n  function Uint16BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Uint16Array(array), itemSize);\n  }\n\n  Uint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n  function Int32BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Int32Array(array), itemSize);\n  }\n\n  Int32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n  function Uint32BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Uint32Array(array), itemSize);\n  }\n\n  Uint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n  function Float32BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Float32Array(array), itemSize);\n  }\n\n  Float32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n  function Float64BufferAttribute(array, itemSize) {\n    BufferAttribute.call(this, new Float64Array(array), itemSize);\n  }\n\n  Float64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectGeometry() {\n    this.indices = [];\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = []; // this.lineDistances = [];\n\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.verticesNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Object.assign(DirectGeometry.prototype, {\n    computeGroups: function (geometry) {\n      var group;\n      var groups = [];\n      var materialIndex = undefined;\n      var faces = geometry.faces;\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i]; // materials\n\n        if (face.materialIndex !== materialIndex) {\n          materialIndex = face.materialIndex;\n\n          if (group !== undefined) {\n            group.count = i * 3 - group.start;\n            groups.push(group);\n          }\n\n          group = {\n            start: i * 3,\n            materialIndex: materialIndex\n          };\n        }\n      }\n\n      if (group !== undefined) {\n        group.count = i * 3 - group.start;\n        groups.push(group);\n      }\n\n      this.groups = groups;\n    },\n    fromGeometry: function (geometry) {\n      var faces = geometry.faces;\n      var vertices = geometry.vertices;\n      var faceVertexUvs = geometry.faceVertexUvs;\n      var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n      var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n      var morphTargets = geometry.morphTargets;\n      var morphTargetsLength = morphTargets.length;\n      var morphTargetsPosition;\n\n      if (morphTargetsLength > 0) {\n        morphTargetsPosition = [];\n\n        for (var i = 0; i < morphTargetsLength; i++) {\n          morphTargetsPosition[i] = [];\n        }\n\n        this.morphTargets.position = morphTargetsPosition;\n      }\n\n      var morphNormals = geometry.morphNormals;\n      var morphNormalsLength = morphNormals.length;\n      var morphTargetsNormal;\n\n      if (morphNormalsLength > 0) {\n        morphTargetsNormal = [];\n\n        for (var i = 0; i < morphNormalsLength; i++) {\n          morphTargetsNormal[i] = [];\n        }\n\n        this.morphTargets.normal = morphTargetsNormal;\n      } // skins\n\n\n      var skinIndices = geometry.skinIndices;\n      var skinWeights = geometry.skinWeights;\n      var hasSkinIndices = skinIndices.length === vertices.length;\n      var hasSkinWeights = skinWeights.length === vertices.length; //\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i];\n        this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n        } else {\n          var normal = face.normal;\n          this.normals.push(normal, normal, normal);\n        }\n\n        var vertexColors = face.vertexColors;\n\n        if (vertexColors.length === 3) {\n          this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n        } else {\n          var color = face.color;\n          this.colors.push(color, color, color);\n        }\n\n        if (hasFaceVertexUv === true) {\n          var vertexUvs = faceVertexUvs[0][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n            this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        }\n\n        if (hasFaceVertexUv2 === true) {\n          var vertexUvs = faceVertexUvs[1][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n            this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        } // morphs\n\n\n        for (var j = 0; j < morphTargetsLength; j++) {\n          var morphTarget = morphTargets[j].vertices;\n          morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n        }\n\n        for (var j = 0; j < morphNormalsLength; j++) {\n          var morphNormal = morphNormals[j].vertexNormals[i];\n          morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n        } // skins\n\n\n        if (hasSkinIndices) {\n          this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n        }\n\n        if (hasSkinWeights) {\n          this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n        }\n      }\n\n      this.computeGroups(geometry);\n      this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      return this;\n    }\n  });\n\n  function arrayMax(array) {\n    if (array.length === 0) return -Infinity;\n    var max = array[0];\n\n    for (var i = 1, l = array.length; i < l; ++i) {\n      if (array[i] > max) max = array[i];\n    }\n\n    return max;\n  }\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function BufferGeometry() {\n    Object.defineProperty(this, 'id', {\n      value: GeometryIdCount()\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n  }\n\n  BufferGeometry.MaxIndex = 65535;\n  Object.assign(BufferGeometry.prototype, EventDispatcher.prototype, {\n    isBufferGeometry: true,\n    getIndex: function () {\n      return this.index;\n    },\n    setIndex: function (index) {\n      if (Array.isArray(index)) {\n        this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n      } else {\n        this.index = index;\n      }\n    },\n    addAttribute: function (name, attribute) {\n      if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n        console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n        this.addAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n        return;\n      }\n\n      if (name === 'index') {\n        console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n        this.setIndex(attribute);\n        return;\n      }\n\n      this.attributes[name] = attribute;\n      return this;\n    },\n    getAttribute: function (name) {\n      return this.attributes[name];\n    },\n    removeAttribute: function (name) {\n      delete this.attributes[name];\n      return this;\n    },\n    addGroup: function (start, count, materialIndex) {\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex !== undefined ? materialIndex : 0\n      });\n    },\n    clearGroups: function () {\n      this.groups = [];\n    },\n    setDrawRange: function (start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    },\n    applyMatrix: function (matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        matrix.applyToBufferAttribute(position);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n        normalMatrix.applyToBufferAttribute(normal);\n        normal.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1 = new Matrix4();\n      return function rotateX(angle) {\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1 = new Matrix4();\n      return function rotateY(angle) {\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1 = new Matrix4();\n      return function rotateZ(angle) {\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1 = new Matrix4();\n      return function translate(x, y, z) {\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1 = new Matrix4();\n      return function scale(x, y, z) {\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj = new Object3D();\n      return function lookAt(vector) {\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    center: function () {\n      this.computeBoundingBox();\n      var offset = this.boundingBox.getCenter().negate();\n      this.translate(offset.x, offset.y, offset.z);\n      return offset;\n    },\n    setFromObject: function (object) {\n      // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n      var geometry = object.geometry;\n\n      if (object.isPoints || object.isLine) {\n        var positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n        var colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n        this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n        this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n        if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n          var lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n          this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n        }\n\n        if (geometry.boundingSphere !== null) {\n          this.boundingSphere = geometry.boundingSphere.clone();\n        }\n\n        if (geometry.boundingBox !== null) {\n          this.boundingBox = geometry.boundingBox.clone();\n        }\n      } else if (object.isMesh) {\n        if (geometry && geometry.isGeometry) {\n          this.fromGeometry(geometry);\n        }\n      }\n\n      return this;\n    },\n    updateFromObject: function (object) {\n      var geometry = object.geometry;\n\n      if (object.isMesh) {\n        var direct = geometry.__directGeometry;\n\n        if (geometry.elementsNeedUpdate === true) {\n          direct = undefined;\n          geometry.elementsNeedUpdate = false;\n        }\n\n        if (direct === undefined) {\n          return this.fromGeometry(geometry);\n        }\n\n        direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        geometry.verticesNeedUpdate = false;\n        geometry.normalsNeedUpdate = false;\n        geometry.colorsNeedUpdate = false;\n        geometry.uvsNeedUpdate = false;\n        geometry.groupsNeedUpdate = false;\n        geometry = direct;\n      }\n\n      var attribute;\n\n      if (geometry.verticesNeedUpdate === true) {\n        attribute = this.attributes.position;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.vertices);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.verticesNeedUpdate = false;\n      }\n\n      if (geometry.normalsNeedUpdate === true) {\n        attribute = this.attributes.normal;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.normals);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.normalsNeedUpdate = false;\n      }\n\n      if (geometry.colorsNeedUpdate === true) {\n        attribute = this.attributes.color;\n\n        if (attribute !== undefined) {\n          attribute.copyColorsArray(geometry.colors);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.colorsNeedUpdate = false;\n      }\n\n      if (geometry.uvsNeedUpdate) {\n        attribute = this.attributes.uv;\n\n        if (attribute !== undefined) {\n          attribute.copyVector2sArray(geometry.uvs);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.uvsNeedUpdate = false;\n      }\n\n      if (geometry.lineDistancesNeedUpdate) {\n        attribute = this.attributes.lineDistance;\n\n        if (attribute !== undefined) {\n          attribute.copyArray(geometry.lineDistances);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.lineDistancesNeedUpdate = false;\n      }\n\n      if (geometry.groupsNeedUpdate) {\n        geometry.computeGroups(object.geometry);\n        this.groups = geometry.groups;\n        geometry.groupsNeedUpdate = false;\n      }\n\n      return this;\n    },\n    fromGeometry: function (geometry) {\n      geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n      return this.fromDirectGeometry(geometry.__directGeometry);\n    },\n    fromDirectGeometry: function (geometry) {\n      var positions = new Float32Array(geometry.vertices.length * 3);\n      this.addAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n      if (geometry.normals.length > 0) {\n        var normals = new Float32Array(geometry.normals.length * 3);\n        this.addAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n      }\n\n      if (geometry.colors.length > 0) {\n        var colors = new Float32Array(geometry.colors.length * 3);\n        this.addAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n      }\n\n      if (geometry.uvs.length > 0) {\n        var uvs = new Float32Array(geometry.uvs.length * 2);\n        this.addAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n      }\n\n      if (geometry.uvs2.length > 0) {\n        var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n        this.addAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n      }\n\n      if (geometry.indices.length > 0) {\n        var TypeArray = arrayMax(geometry.indices) > 65535 ? Uint32Array : Uint16Array;\n        var indices = new TypeArray(geometry.indices.length * 3);\n        this.setIndex(new BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n      } // groups\n\n\n      this.groups = geometry.groups; // morphs\n\n      for (var name in geometry.morphTargets) {\n        var array = [];\n        var morphTargets = geometry.morphTargets[name];\n\n        for (var i = 0, l = morphTargets.length; i < l; i++) {\n          var morphTarget = morphTargets[i];\n          var attribute = new Float32BufferAttribute(morphTarget.length * 3, 3);\n          array.push(attribute.copyVector3sArray(morphTarget));\n        }\n\n        this.morphAttributes[name] = array;\n      } // skinning\n\n\n      if (geometry.skinIndices.length > 0) {\n        var skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n        this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n      }\n\n      if (geometry.skinWeights.length > 0) {\n        var skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n        this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n      } //\n\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      return this;\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        this.boundingBox.setFromBufferAttribute(position);\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    },\n    computeBoundingSphere: function () {\n      var box = new Box3();\n      var vector = new Vector3();\n      return function computeBoundingSphere() {\n        if (this.boundingSphere === null) {\n          this.boundingSphere = new Sphere();\n        }\n\n        var position = this.attributes.position;\n\n        if (position) {\n          var center = this.boundingSphere.center;\n          box.setFromBufferAttribute(position);\n          box.getCenter(center); // hoping to find a boundingSphere with a radius smaller than the\n          // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n          var maxRadiusSq = 0;\n\n          for (var i = 0, il = position.count; i < il; i++) {\n            vector.x = position.getX(i);\n            vector.y = position.getY(i);\n            vector.z = position.getZ(i);\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n          }\n\n          this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n          if (isNaN(this.boundingSphere.radius)) {\n            console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n          }\n        }\n      };\n    }(),\n    computeFaceNormals: function () {// backwards compatibility\n    },\n    computeVertexNormals: function () {\n      var index = this.index;\n      var attributes = this.attributes;\n      var groups = this.groups;\n\n      if (attributes.position) {\n        var positions = attributes.position.array;\n\n        if (attributes.normal === undefined) {\n          this.addAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n        } else {\n          // reset existing normals to zero\n          var array = attributes.normal.array;\n\n          for (var i = 0, il = array.length; i < il; i++) {\n            array[i] = 0;\n          }\n        }\n\n        var normals = attributes.normal.array;\n        var vA, vB, vC;\n        var pA = new Vector3(),\n            pB = new Vector3(),\n            pC = new Vector3();\n        var cb = new Vector3(),\n            ab = new Vector3(); // indexed elements\n\n        if (index) {\n          var indices = index.array;\n\n          if (groups.length === 0) {\n            this.addGroup(0, indices.length);\n          }\n\n          for (var j = 0, jl = groups.length; j < jl; ++j) {\n            var group = groups[j];\n            var start = group.start;\n            var count = group.count;\n\n            for (var i = start, il = start + count; i < il; i += 3) {\n              vA = indices[i + 0] * 3;\n              vB = indices[i + 1] * 3;\n              vC = indices[i + 2] * 3;\n              pA.fromArray(positions, vA);\n              pB.fromArray(positions, vB);\n              pC.fromArray(positions, vC);\n              cb.subVectors(pC, pB);\n              ab.subVectors(pA, pB);\n              cb.cross(ab);\n              normals[vA] += cb.x;\n              normals[vA + 1] += cb.y;\n              normals[vA + 2] += cb.z;\n              normals[vB] += cb.x;\n              normals[vB + 1] += cb.y;\n              normals[vB + 2] += cb.z;\n              normals[vC] += cb.x;\n              normals[vC + 1] += cb.y;\n              normals[vC + 2] += cb.z;\n            }\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var i = 0, il = positions.length; i < il; i += 9) {\n            pA.fromArray(positions, i);\n            pB.fromArray(positions, i + 3);\n            pC.fromArray(positions, i + 6);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[i] = cb.x;\n            normals[i + 1] = cb.y;\n            normals[i + 2] = cb.z;\n            normals[i + 3] = cb.x;\n            normals[i + 4] = cb.y;\n            normals[i + 5] = cb.z;\n            normals[i + 6] = cb.x;\n            normals[i + 7] = cb.y;\n            normals[i + 8] = cb.z;\n          }\n        }\n\n        this.normalizeNormals();\n        attributes.normal.needsUpdate = true;\n      }\n    },\n    merge: function (geometry, offset) {\n      if (!(geometry && geometry.isBufferGeometry)) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) offset = 0;\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) continue;\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeSize = attribute2.itemSize;\n\n        for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    },\n    normalizeNormals: function () {\n      var normals = this.attributes.normal;\n      var x, y, z, n;\n\n      for (var i = 0, il = normals.count; i < il; i++) {\n        x = normals.getX(i);\n        y = normals.getY(i);\n        z = normals.getZ(i);\n        n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n        normals.setXYZ(i, x * n, y * n, z * n);\n      }\n    },\n    toNonIndexed: function () {\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          index = indices[i] * itemSize;\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        geometry2.addAttribute(name, new BufferAttribute(array2, itemSize));\n      }\n\n      return geometry2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        var array = Array.prototype.slice.call(index.array);\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: array\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var array = Array.prototype.slice.call(attribute.array);\n        data.data.attributes[key] = {\n          itemSize: attribute.itemSize,\n          type: attribute.array.constructor.name,\n          array: array,\n          normalized: attribute.normalized\n        };\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    },\n    clone: function () {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new BufferGeometry().copy(this);\n    },\n    copy: function (source) {\n      var name, i, l; // reset\n\n      this.index = null;\n      this.attributes = {};\n      this.morphAttributes = {};\n      this.groups = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // index\n\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone());\n      } // attributes\n\n\n      var attributes = source.attributes;\n\n      for (name in attributes) {\n        var attribute = attributes[name];\n        this.addAttribute(name, attribute.clone());\n      } // morph attributes\n\n\n      var morphAttributes = source.morphAttributes;\n\n      for (name in morphAttributes) {\n        var array = [];\n        var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (i = 0, l = morphAttribute.length; i < l; i++) {\n          array.push(morphAttribute[i].clone());\n        }\n\n        this.morphAttributes[name] = array;\n      } // groups\n\n\n      var groups = source.groups;\n\n      for (i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // draw range\n\n\n      this.drawRange.start = source.drawRange.start;\n      this.drawRange.count = source.drawRange.count;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // BoxGeometry\n\n  function BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    Geometry.call(this);\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n    this.mergeVertices();\n  }\n\n  BoxGeometry.prototype = Object.create(Geometry.prototype);\n  BoxGeometry.prototype.constructor = BoxGeometry; // BoxBufferGeometry\n\n  function BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    BufferGeometry.call(this);\n    this.type = 'BoxBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    var scope = this; // segments\n\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var numberOfVertices = 0;\n    var groupStart = 0; // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n    // build geometry\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      var segmentWidth = width / gridX;\n      var segmentHeight = height / gridY;\n      var widthHalf = width / 2;\n      var heightHalf = height / 2;\n      var depthHalf = depth / 2;\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var vertexCounter = 0;\n      var groupCount = 0;\n      var ix, iy;\n      var vector = new Vector3(); // generate vertices, normals and uvs\n\n      for (iy = 0; iy < gridY1; iy++) {\n        var y = iy * segmentHeight - heightHalf;\n\n        for (ix = 0; ix < gridX1; ix++) {\n          var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf; // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z); // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY); // counters\n\n          vertexCounter += 1;\n        }\n      } // indices\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n\n      for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n          var a = numberOfVertices + ix + gridX1 * iy;\n          var b = numberOfVertices + ix + gridX1 * (iy + 1);\n          var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          var d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // increase counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n      groupStart += groupCount; // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  }\n\n  BoxBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PlaneGeometry\n\n  function PlaneGeometry(width, height, widthSegments, heightSegments) {\n    Geometry.call(this);\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n    this.mergeVertices();\n  }\n\n  PlaneGeometry.prototype = Object.create(Geometry.prototype);\n  PlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry\n\n  function PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\n    BufferGeometry.call(this);\n    this.type = 'PlaneBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    var width_half = width / 2;\n    var height_half = height / 2;\n    var gridX = Math.floor(widthSegments) || 1;\n    var gridY = Math.floor(heightSegments) || 1;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var segment_width = width / gridX;\n    var segment_height = height / gridY;\n    var ix, iy; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy < gridY1; iy++) {\n      var y = iy * segment_height - height_half;\n\n      for (ix = 0; ix < gridX1; ix++) {\n        var x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    } // indices\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  PlaneBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  shading: THREE.SmoothShading,\n   *  depthTest: <bool>,\n   *  depthWrite: <bool>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function MeshBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshBasicMaterial.prototype = Object.create(Material.prototype);\n  MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n  MeshBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n\n  function Ray(origin, direction) {\n    this.origin = origin !== undefined ? origin : new Vector3();\n    this.direction = direction !== undefined ? direction : new Vector3();\n  }\n\n  Object.assign(Ray.prototype, {\n    set: function (origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    },\n    at: function (t, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n    },\n    lookAt: function (v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    },\n    recast: function () {\n      var v1 = new Vector3();\n      return function recast(t) {\n        this.origin.copy(this.at(t, v1));\n        return this;\n      };\n    }(),\n    closestPointToPoint: function (point, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      result.subVectors(point, this.origin);\n      var directionDistance = result.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return result.copy(this.origin);\n      }\n\n      return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    },\n    distanceToPoint: function (point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    },\n    distanceSqToPoint: function () {\n      var v1 = new Vector3();\n      return function distanceSqToPoint(point) {\n        var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n        if (directionDistance < 0) {\n          return this.origin.distanceToSquared(point);\n        }\n\n        v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n        return v1.distanceToSquared(point);\n      };\n    }(),\n    distanceSqToSegment: function () {\n      var segCenter = new Vector3();\n      var segDir = new Vector3();\n      var diff = new Vector3();\n      return function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n        // It returns the min distance between the ray and the segment\n        // defined by v0 and v1\n        // It can also set two optional targets :\n        // - The closest point on the ray\n        // - The closest point on the segment\n        segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n        segDir.copy(v1).sub(v0).normalize();\n        diff.copy(this.origin).sub(segCenter);\n        var segExtent = v0.distanceTo(v1) * 0.5;\n        var a01 = -this.direction.dot(segDir);\n        var b0 = diff.dot(this.direction);\n        var b1 = -diff.dot(segDir);\n        var c = diff.lengthSq();\n        var det = Math.abs(1 - a01 * a01);\n        var s0, s1, sqrDist, extDet;\n\n        if (det > 0) {\n          // The ray and segment are not parallel.\n          s0 = a01 * b1 - b0;\n          s1 = a01 * b0 - b1;\n          extDet = segExtent * det;\n\n          if (s0 >= 0) {\n            if (s1 >= -extDet) {\n              if (s1 <= extDet) {\n                // region 0\n                // Minimum at interior points of ray and segment.\n                var invDet = 1 / det;\n                s0 *= invDet;\n                s1 *= invDet;\n                sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n              } else {\n                // region 1\n                s1 = segExtent;\n                s0 = Math.max(0, -(a01 * s1 + b0));\n                sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n              }\n            } else {\n              // region 5\n              s1 = -segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            if (s1 <= -extDet) {\n              // region 4\n              s0 = Math.max(0, -(-a01 * segExtent + b0));\n              s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            } else if (s1 <= extDet) {\n              // region 3\n              s0 = 0;\n              s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = s1 * (s1 + 2 * b1) + c;\n            } else {\n              // region 2\n              s0 = Math.max(0, -(a01 * segExtent + b0));\n              s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          }\n        } else {\n          // Ray and segment are parallel.\n          s1 = a01 > 0 ? -segExtent : segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n\n        if (optionalPointOnRay) {\n          optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n        }\n\n        if (optionalPointOnSegment) {\n          optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n        }\n\n        return sqrDist;\n      };\n    }(),\n    intersectSphere: function () {\n      var v1 = new Vector3();\n      return function intersectSphere(sphere, optionalTarget) {\n        v1.subVectors(sphere.center, this.origin);\n        var tca = v1.dot(this.direction);\n        var d2 = v1.dot(v1) - tca * tca;\n        var radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return null;\n        var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n        var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n        var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n        if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n        // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n        // in order to always return an intersect point that is in front of the ray.\n\n        if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n        return this.at(t0, optionalTarget);\n      };\n    }(),\n    intersectsSphere: function (sphere) {\n      return this.distanceToPoint(sphere.center) <= sphere.radius;\n    },\n    distanceToPlane: function (plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    },\n    intersectPlane: function (plane, optionalTarget) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, optionalTarget);\n    },\n    intersectsPlane: function (plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    },\n    intersectBox: function (box, optionalTarget) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) return null;\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n      if (tmax < 0) return null;\n      return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n    },\n    intersectsBox: function () {\n      var v = new Vector3();\n      return function intersectsBox(box) {\n        return this.intersectBox(box, v) !== null;\n      };\n    }(),\n    intersectTriangle: function () {\n      // Compute the offset origin, edges, and normal.\n      var diff = new Vector3();\n      var edge1 = new Vector3();\n      var edge2 = new Vector3();\n      var normal = new Vector3();\n      return function intersectTriangle(a, b, c, backfaceCulling, optionalTarget) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        edge1.subVectors(b, a);\n        edge2.subVectors(c, a);\n        normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n        // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n        //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n        //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n        //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n        var DdN = this.direction.dot(normal);\n        var sign;\n\n        if (DdN > 0) {\n          if (backfaceCulling) return null;\n          sign = 1;\n        } else if (DdN < 0) {\n          sign = -1;\n          DdN = -DdN;\n        } else {\n          return null;\n        }\n\n        diff.subVectors(this.origin, a);\n        var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n        if (DdQxE2 < 0) {\n          return null;\n        }\n\n        var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n        if (DdE1xQ < 0) {\n          return null;\n        } // b1+b2 > 1, no intersection\n\n\n        if (DdQxE2 + DdE1xQ > DdN) {\n          return null;\n        } // Line intersects triangle, check if ray does.\n\n\n        var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n        if (QdN < 0) {\n          return null;\n        } // Ray intersects triangle.\n\n\n        return this.at(QdN / DdN, optionalTarget);\n      };\n    }(),\n    applyMatrix4: function (matrix4) {\n      this.origin.applyMatrix4(matrix4);\n      this.direction.transformDirection(matrix4);\n      return this;\n    },\n    equals: function (ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Line3(start, end) {\n    this.start = start !== undefined ? start : new Vector3();\n    this.end = end !== undefined ? end : new Vector3();\n  }\n\n  Object.assign(Line3.prototype, {\n    set: function (start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    },\n    getCenter: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n    },\n    delta: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return result.subVectors(this.end, this.start);\n    },\n    distanceSq: function () {\n      return this.start.distanceToSquared(this.end);\n    },\n    distance: function () {\n      return this.start.distanceTo(this.end);\n    },\n    at: function (t, optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    },\n    closestPointToPointParameter: function () {\n      var startP = new Vector3();\n      var startEnd = new Vector3();\n      return function closestPointToPointParameter(point, clampToLine) {\n        startP.subVectors(point, this.start);\n        startEnd.subVectors(this.end, this.start);\n        var startEnd2 = startEnd.dot(startEnd);\n        var startEnd_startP = startEnd.dot(startP);\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n          t = _Math.clamp(t, 0, 1);\n        }\n\n        return t;\n      };\n    }(),\n    closestPointToPoint: function (point, clampToLine, optionalTarget) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n      var result = optionalTarget || new Vector3();\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    },\n    applyMatrix4: function (matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    },\n    equals: function (line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Triangle(a, b, c) {\n    this.a = a !== undefined ? a : new Vector3();\n    this.b = b !== undefined ? b : new Vector3();\n    this.c = c !== undefined ? c : new Vector3();\n  }\n\n  Object.assign(Triangle, {\n    normal: function () {\n      var v0 = new Vector3();\n      return function normal(a, b, c, optionalTarget) {\n        var result = optionalTarget || new Vector3();\n        result.subVectors(c, b);\n        v0.subVectors(a, b);\n        result.cross(v0);\n        var resultLengthSq = result.lengthSq();\n\n        if (resultLengthSq > 0) {\n          return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n        }\n\n        return result.set(0, 0, 0);\n      };\n    }(),\n    // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n    barycoordFromPoint: function () {\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function barycoordFromPoint(point, a, b, c, optionalTarget) {\n        v0.subVectors(c, a);\n        v1.subVectors(b, a);\n        v2.subVectors(point, a);\n        var dot00 = v0.dot(v0);\n        var dot01 = v0.dot(v1);\n        var dot02 = v0.dot(v2);\n        var dot11 = v1.dot(v1);\n        var dot12 = v1.dot(v2);\n        var denom = dot00 * dot11 - dot01 * dot01;\n        var result = optionalTarget || new Vector3(); // collinear or singular triangle\n\n        if (denom === 0) {\n          // arbitrary location outside of triangle?\n          // not sure if this is the best idea, maybe should be returning undefined\n          return result.set(-2, -1, -1);\n        }\n\n        var invDenom = 1 / denom;\n        var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n        return result.set(1 - u - v, v, u);\n      };\n    }(),\n    containsPoint: function () {\n      var v1 = new Vector3();\n      return function containsPoint(point, a, b, c) {\n        var result = Triangle.barycoordFromPoint(point, a, b, c, v1);\n        return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n      };\n    }()\n  });\n  Object.assign(Triangle.prototype, {\n    set: function (a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    },\n    setFromPointsAndIndices: function (points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    },\n    area: function () {\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      return function area() {\n        v0.subVectors(this.c, this.b);\n        v1.subVectors(this.a, this.b);\n        return v0.cross(v1).length() * 0.5;\n      };\n    }(),\n    midpoint: function (optionalTarget) {\n      var result = optionalTarget || new Vector3();\n      return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    },\n    normal: function (optionalTarget) {\n      return Triangle.normal(this.a, this.b, this.c, optionalTarget);\n    },\n    plane: function (optionalTarget) {\n      var result = optionalTarget || new Plane();\n      return result.setFromCoplanarPoints(this.a, this.b, this.c);\n    },\n    barycoordFromPoint: function (point, optionalTarget) {\n      return Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n    },\n    containsPoint: function (point) {\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\n    },\n    closestPointToPoint: function () {\n      var plane = new Plane();\n      var edgeList = [new Line3(), new Line3(), new Line3()];\n      var projectedPoint = new Vector3();\n      var closestPoint = new Vector3();\n      return function closestPointToPoint(point, optionalTarget) {\n        var result = optionalTarget || new Vector3();\n        var minDistance = Infinity; // project the point onto the plane of the triangle\n\n        plane.setFromCoplanarPoints(this.a, this.b, this.c);\n        plane.projectPoint(point, projectedPoint); // check if the projection lies within the triangle\n\n        if (this.containsPoint(projectedPoint) === true) {\n          // if so, this is the closest point\n          result.copy(projectedPoint);\n        } else {\n          // if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n          edgeList[0].set(this.a, this.b);\n          edgeList[1].set(this.b, this.c);\n          edgeList[2].set(this.c, this.a);\n\n          for (var i = 0; i < edgeList.length; i++) {\n            edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n            var distance = projectedPoint.distanceToSquared(closestPoint);\n\n            if (distance < minDistance) {\n              minDistance = distance;\n              result.copy(closestPoint);\n            }\n          }\n        }\n\n        return result;\n      };\n    }(),\n    equals: function (triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author jonobr1 / http://jonobr1.com/\n   */\n\n  function Mesh(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Mesh';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new MeshBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n    this.drawMode = TrianglesDrawMode;\n    this.updateMorphTargets();\n  }\n\n  Mesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Mesh,\n    isMesh: true,\n    setDrawMode: function (value) {\n      this.drawMode = value;\n    },\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.drawMode = source.drawMode;\n      return this;\n    },\n    updateMorphTargets: function () {\n      var geometry = this.geometry;\n      var m, ml, name;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n              name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (m = 0, ml = morphTargets.length; m < ml; m++) {\n            name = morphTargets[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    },\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      var vA = new Vector3();\n      var vB = new Vector3();\n      var vC = new Vector3();\n      var tempA = new Vector3();\n      var tempB = new Vector3();\n      var tempC = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n      var barycoord = new Vector3();\n      var intersectionPoint = new Vector3();\n      var intersectionPointWorld = new Vector3();\n\n      function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n        Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n        uv1.multiplyScalar(barycoord.x);\n        uv2.multiplyScalar(barycoord.y);\n        uv3.multiplyScalar(barycoord.z);\n        uv1.add(uv2).add(uv3);\n        return uv1.clone();\n      }\n\n      function checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n        var intersect;\n        var material = object.material;\n\n        if (material.side === BackSide) {\n          intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n        } else {\n          intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n        }\n\n        if (intersect === null) return null;\n        intersectionPointWorld.copy(point);\n        intersectionPointWorld.applyMatrix4(object.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n        if (distance < raycaster.near || distance > raycaster.far) return null;\n        return {\n          distance: distance,\n          point: intersectionPointWorld.clone(),\n          object: object\n        };\n      }\n\n      function checkBufferGeometryIntersection(object, raycaster, ray, position, uv, a, b, c) {\n        vA.fromBufferAttribute(position, a);\n        vB.fromBufferAttribute(position, b);\n        vC.fromBufferAttribute(position, c);\n        var intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n        if (intersection) {\n          if (uv) {\n            uvA.fromBufferAttribute(uv, a);\n            uvB.fromBufferAttribute(uv, b);\n            uvC.fromBufferAttribute(uv, c);\n            intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n          }\n\n          intersection.face = new Face3(a, b, c, Triangle.normal(vA, vB, vC));\n          intersection.faceIndex = a;\n        }\n\n        return intersection;\n      }\n\n      return function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var material = this.material;\n        var matrixWorld = this.matrixWorld;\n        if (material === undefined) return; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n        if (geometry.boundingBox !== null) {\n          if (ray.intersectsBox(geometry.boundingBox) === false) return;\n        }\n\n        var intersection;\n\n        if (geometry.isBufferGeometry) {\n          var a, b, c;\n          var index = geometry.index;\n          var position = geometry.attributes.position;\n          var uv = geometry.attributes.uv;\n          var i, l;\n\n          if (index !== null) {\n            // indexed buffer geometry\n            for (i = 0, l = index.count; i < l; i += 3) {\n              a = index.getX(i);\n              b = index.getX(i + 1);\n              c = index.getX(i + 2);\n              intersection = checkBufferGeometryIntersection(this, raycaster, ray, position, uv, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          } else {\n            // non-indexed buffer geometry\n            for (i = 0, l = position.count; i < l; i += 3) {\n              a = i;\n              b = i + 1;\n              c = i + 2;\n              intersection = checkBufferGeometryIntersection(this, raycaster, ray, position, uv, a, b, c);\n\n              if (intersection) {\n                intersection.index = a; // triangle number in positions buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else if (geometry.isGeometry) {\n          var fvA, fvB, fvC;\n          var isMultiMaterial = Array.isArray(material);\n          var vertices = geometry.vertices;\n          var faces = geometry.faces;\n          var uvs;\n          var faceVertexUvs = geometry.faceVertexUvs[0];\n          if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n          for (var f = 0, fl = faces.length; f < fl; f++) {\n            var face = faces[f];\n            var faceMaterial = isMultiMaterial ? material[face.materialIndex] : material;\n            if (faceMaterial === undefined) continue;\n            fvA = vertices[face.a];\n            fvB = vertices[face.b];\n            fvC = vertices[face.c];\n\n            if (faceMaterial.morphTargets === true) {\n              var morphTargets = geometry.morphTargets;\n              var morphInfluences = this.morphTargetInfluences;\n              vA.set(0, 0, 0);\n              vB.set(0, 0, 0);\n              vC.set(0, 0, 0);\n\n              for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                var influence = morphInfluences[t];\n                if (influence === 0) continue;\n                var targets = morphTargets[t].vertices;\n                vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n                vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n                vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n              }\n\n              vA.add(fvA);\n              vB.add(fvB);\n              vC.add(fvC);\n              fvA = vA;\n              fvB = vB;\n              fvC = vC;\n            }\n\n            intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n            if (intersection) {\n              if (uvs && uvs[f]) {\n                var uvs_f = uvs[f];\n                uvA.copy(uvs_f[0]);\n                uvB.copy(uvs_f[1]);\n                uvC.copy(uvs_f[2]);\n                intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n              }\n\n              intersection.face = face;\n              intersection.faceIndex = f;\n              intersects.push(intersection);\n            }\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLBackground(renderer, state, objects, premultipliedAlpha) {\n    var clearColor = new Color(0x000000);\n    var clearAlpha = 0;\n    var planeCamera, planeMesh;\n    var boxCamera, boxMesh;\n\n    function render(scene, camera, forceClear) {\n      var background = scene.background;\n\n      if (background === null) {\n        setClear(clearColor, clearAlpha);\n      } else if (background && background.isColor) {\n        setClear(background, 1);\n        forceClear = true;\n      }\n\n      if (renderer.autoClear || forceClear) {\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n\n      if (background && background.isCubeTexture) {\n        if (boxCamera === undefined) {\n          boxCamera = new PerspectiveCamera();\n          boxMesh = new Mesh(new BoxBufferGeometry(5, 5, 5), new ShaderMaterial({\n            uniforms: ShaderLib.cube.uniforms,\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n        }\n\n        boxCamera.projectionMatrix.copy(camera.projectionMatrix);\n        boxCamera.matrixWorld.extractRotation(camera.matrixWorld);\n        boxCamera.matrixWorldInverse.getInverse(boxCamera.matrixWorld);\n        boxMesh.material.uniforms[\"tCube\"].value = background;\n        boxMesh.modelViewMatrix.multiplyMatrices(boxCamera.matrixWorldInverse, boxMesh.matrixWorld);\n        objects.update(boxMesh);\n        renderer.renderBufferDirect(boxCamera, null, boxMesh.geometry, boxMesh.material, boxMesh, null);\n      } else if (background && background.isTexture) {\n        if (planeCamera === undefined) {\n          planeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n          planeMesh = new Mesh(new PlaneBufferGeometry(2, 2), new MeshBasicMaterial({\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n        }\n\n        planeMesh.material.map = background;\n        objects.update(planeMesh);\n        renderer.renderBufferDirect(planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null);\n      }\n    }\n\n    function setClear(color, alpha) {\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n    }\n\n    return {\n      getClearColor: function () {\n        return clearColor;\n      },\n      setClearColor: function (color, alpha) {\n        clearColor.set(color);\n        clearAlpha = alpha !== undefined ? alpha : 1;\n        setClear(clearColor, clearAlpha);\n      },\n      getClearAlpha: function () {\n        return clearAlpha;\n      },\n      setClearAlpha: function (alpha) {\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      render: render\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program && b.program && a.program !== b.program) {\n      return a.program.id - b.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function WebGLRenderList() {\n    var opaque = [];\n    var opaqueLastIndex = -1;\n    var transparent = [];\n    var transparentLastIndex = -1;\n\n    function init() {\n      opaqueLastIndex = -1;\n      transparentLastIndex = -1;\n    }\n\n    function push(object, geometry, material, z, group) {\n      var array, index; // allocate the next position in the appropriate array\n\n      if (material.transparent) {\n        array = transparent;\n        index = ++transparentLastIndex;\n      } else {\n        array = opaque;\n        index = ++opaqueLastIndex;\n      } // recycle existing render item or grow the array\n\n\n      var renderItem = array[index];\n\n      if (renderItem) {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.program = material.program;\n        renderItem.renderOrder = object.renderOrder;\n        renderItem.z = z;\n        renderItem.group = group;\n      } else {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          program: material.program,\n          renderOrder: object.renderOrder,\n          z: z,\n          group: group\n        }; // assert( index === array.length );\n\n        array.push(renderItem);\n      }\n    }\n\n    function finish() {\n      opaque.length = opaqueLastIndex + 1;\n      transparent.length = transparentLastIndex + 1;\n    }\n\n    function sort() {\n      opaque.sort(painterSortStable);\n      transparent.sort(reversePainterSortStable);\n    }\n\n    return {\n      opaque: opaque,\n      transparent: transparent,\n      init: init,\n      push: push,\n      finish: finish,\n      sort: sort\n    };\n  }\n\n  function WebGLRenderLists() {\n    var lists = {};\n\n    function get(scene, camera) {\n      var hash = scene.id + ',' + camera.id;\n      var list = lists[hash];\n\n      if (list === undefined) {\n        // console.log( 'THREE.WebGLRenderLists:', hash );\n        list = new WebGLRenderList();\n        lists[hash] = list;\n      }\n\n      return list;\n    }\n\n    function dispose() {\n      lists = {};\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLIndexedBufferRenderer(gl, extensions, infoRender) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, bytesPerElement;\n\n    function setIndex(value) {\n      type = value.type;\n      bytesPerElement = value.bytesPerElement;\n    }\n\n    function render(start, count) {\n      gl.drawElements(mode, count, type, start * bytesPerElement);\n      infoRender.calls++;\n      infoRender.vertices += count;\n      if (mode === gl.TRIANGLES) infoRender.faces += count / 3;\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n\n      extension.drawElementsInstancedANGLE(mode, count, type, start * bytesPerElement, geometry.maxInstancedCount);\n      infoRender.calls++;\n      infoRender.vertices += count * geometry.maxInstancedCount;\n      if (mode === gl.TRIANGLES) infoRender.faces += geometry.maxInstancedCount * count / 3;\n    } //\n\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLBufferRenderer(gl, extensions, infoRender) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      gl.drawArrays(mode, start, count);\n      infoRender.calls++;\n      infoRender.vertices += count;\n      if (mode === gl.TRIANGLES) infoRender.faces += count / 3;\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n\n      var position = geometry.attributes.position;\n\n      if (position.isInterleavedBufferAttribute) {\n        count = position.data.count;\n        extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n      } else {\n        extension.drawArraysInstancedANGLE(mode, start, count, geometry.maxInstancedCount);\n      }\n\n      infoRender.calls++;\n      infoRender.vertices += count * geometry.maxInstancedCount;\n      if (mode === gl.TRIANGLES) infoRender.faces += geometry.maxInstancedCount * count / 3;\n    } //\n\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLGeometries(gl, attributes, infoMemory) {\n    var geometries = {};\n    var wireframeAttributes = {};\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n      var buffergeometry = geometries[geometry.id];\n\n      if (buffergeometry.index !== null) {\n        attributes.remove(buffergeometry.index);\n      }\n\n      for (var name in buffergeometry.attributes) {\n        attributes.remove(buffergeometry.attributes[name]);\n      }\n\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id]; // TODO Remove duplicate code\n\n      var attribute = wireframeAttributes[geometry.id];\n\n      if (attribute) {\n        attributes.remove(attribute);\n        delete wireframeAttributes[geometry.id];\n      }\n\n      attribute = wireframeAttributes[buffergeometry.id];\n\n      if (attribute) {\n        attributes.remove(attribute);\n        delete wireframeAttributes[buffergeometry.id];\n      } //\n\n\n      infoMemory.geometries--;\n    }\n\n    function get(object, geometry) {\n      var buffergeometry = geometries[geometry.id];\n      if (buffergeometry) return buffergeometry;\n      geometry.addEventListener('dispose', onGeometryDispose);\n\n      if (geometry.isBufferGeometry) {\n        buffergeometry = geometry;\n      } else if (geometry.isGeometry) {\n        if (geometry._bufferGeometry === undefined) {\n          geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n        }\n\n        buffergeometry = geometry._bufferGeometry;\n      }\n\n      geometries[geometry.id] = buffergeometry;\n      infoMemory.geometries++;\n      return buffergeometry;\n    }\n\n    function update(geometry) {\n      var index = geometry.index;\n      var geometryAttributes = geometry.attributes;\n\n      if (index !== null) {\n        attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n      }\n\n      for (var name in geometryAttributes) {\n        attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var name in morphAttributes) {\n        var array = morphAttributes[name];\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          attributes.update(array[i], gl.ARRAY_BUFFER);\n        }\n      }\n    }\n\n    function getWireframeAttribute(geometry) {\n      var attribute = wireframeAttributes[geometry.id];\n      if (attribute) return attribute;\n      var indices = [];\n      var geometryIndex = geometry.index;\n      var geometryAttributes = geometry.attributes; // console.time( 'wireframe' );\n\n      if (geometryIndex !== null) {\n        var array = geometryIndex.array;\n\n        for (var i = 0, l = array.length; i < l; i += 3) {\n          var a = array[i + 0];\n          var b = array[i + 1];\n          var c = array[i + 2];\n          indices.push(a, b, b, c, c, a);\n        }\n      } else {\n        var array = geometryAttributes.position.array;\n\n        for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n          var a = i + 0;\n          var b = i + 1;\n          var c = i + 2;\n          indices.push(a, b, b, c, c, a);\n        }\n      } // console.timeEnd( 'wireframe' );\n\n\n      attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n      attributes.update(attribute, gl.ELEMENT_ARRAY_BUFFER);\n      wireframeAttributes[geometry.id] = attribute;\n      return attribute;\n    }\n\n    return {\n      get: get,\n      update: update,\n      getWireframeAttribute: getWireframeAttribute\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLLights() {\n    var lights = {};\n    return {\n      get: function (light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              direction: new Vector3(),\n              color: new Color(),\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              position: new Vector3(),\n              direction: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              coneCos: 0,\n              penumbraCos: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              position: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'HemisphereLight':\n            uniforms = {\n              direction: new Vector3(),\n              skyColor: new Color(),\n              groundColor: new Color()\n            };\n            break;\n\n          case 'RectAreaLight':\n            uniforms = {\n              color: new Color(),\n              position: new Vector3(),\n              halfWidth: new Vector3(),\n              halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms\n\n            };\n            break;\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLObjects(gl, geometries, infoRender) {\n    var updateList = {};\n\n    function update(object) {\n      var frame = infoRender.frame;\n      var geometry = object.geometry;\n      var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n      if (updateList[buffergeometry.id] !== frame) {\n        if (geometry.isGeometry) {\n          buffergeometry.updateFromObject(object);\n        }\n\n        geometries.update(buffergeometry);\n        updateList[buffergeometry.id] = frame;\n      }\n\n      return buffergeometry;\n    }\n\n    function clear() {\n      updateList = {};\n    }\n\n    return {\n      update: update,\n      clear: clear\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var programIdCount = 0;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case LinearToneMapping:\n        toneMappingName = \"Linear\";\n        break;\n\n      case ReinhardToneMapping:\n        toneMappingName = \"Reinhard\";\n        break;\n\n      case Uncharted2ToneMapping:\n        toneMappingName = \"Uncharted2\";\n        break;\n\n      case CineonToneMapping:\n        toneMappingName = \"OptimizedCineon\";\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program, identifiers) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n    function replace(match, include) {\n      var replace = ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function WebGLProgram(renderer, code, material, shader, parameters) {\n    var gl = renderer.context;\n    var extensions = material.extensions;\n    var defines = material.defines;\n    var vertexShader = shader.vertexShader;\n    var fragmentShader = shader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case EquirectangularReflectionMapping:\n        case EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case CubeRefractionMapping:\n        case EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material.isRawShaderMaterial) {\n      prefixVertex = [customDefines, '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, customDefines, '\\n'].filter(filterEmptyLine).join('\\n');\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, '#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection), parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n    if (!material.isShaderMaterial) {\n      vertexShader = unrollLoops(vertexShader);\n      fragmentShader = unrollLoops(fragmentShader);\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program);\n    var vertexLog = gl.getShaderInfoLog(glVertexShader);\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new WebGLUniforms(gl, program, renderer);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLPrograms(renderer, capabilities) {\n    var programs = [];\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshToonMaterial: 'phong',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points'\n    };\n    var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"];\n\n    function allocateBones(object) {\n      var skeleton = object.skeleton;\n      var bones = skeleton.bones;\n\n      if (capabilities.floatVertexTextures) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //  - leave some extra space for other uniforms\n        //  - limit here is ANGLE's 254 max uniform vectors\n        //    (up to 54 should be safe)\n        var nVertexUniforms = capabilities.maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = Math.min(nVertexMatrices, bones.length);\n\n        if (maxBones < bones.length) {\n          console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n          return 0;\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n      var encoding;\n\n      if (!map) {\n        encoding = LinearEncoding;\n      } else if (map.isTexture) {\n        encoding = map.encoding;\n      } else if (map.isWebGLRenderTarget) {\n        console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n        encoding = map.texture.encoding;\n      } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n      if (encoding === LinearEncoding && gammaOverrideLinear) {\n        encoding = GammaEncoding;\n      }\n\n      return encoding;\n    }\n\n    this.getParameters = function (material, lights, fog, nClipPlanes, nClipIntersection, object) {\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = object.isSkinnedMesh ? allocateBones(object) : 0;\n      var precision = renderer.getPrecision();\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var parameters = {\n        shaderID: shaderID,\n        precision: precision,\n        supportsVertexTextures: capabilities.vertexTextures,\n        outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n        envMap: !!material.envMap,\n        envMapMode: material.envMap && material.envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n        envMapCubeUV: !!material.envMap && (material.envMap.mapping === CubeUVReflectionMapping || material.envMap.mapping === CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        alphaMap: !!material.alphaMap,\n        gradientMap: !!material.gradientMap,\n        combine: material.combine,\n        vertexColors: material.vertexColors,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp: fog && fog.isFogExp2,\n        flatShading: material.shading === FlatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n        skinning: material.skinning && maxBones > 0,\n        maxBones: maxBones,\n        useVertexTexture: capabilities.floatVertexTextures,\n        morphTargets: material.morphTargets,\n        morphNormals: material.morphNormals,\n        maxMorphTargets: renderer.maxMorphTargets,\n        maxMorphNormals: renderer.maxMorphNormals,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numRectAreaLights: lights.rectArea.length,\n        numHemiLights: lights.hemi.length,\n        numClippingPlanes: nClipPlanes,\n        numClipIntersection: nClipIntersection,\n        dithering: material.dithering,\n        shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: renderer.toneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        alphaTest: material.alphaTest,\n        doubleSided: material.side === DoubleSide,\n        flipSided: material.side === BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n      };\n      return parameters;\n    };\n\n    this.getProgramCode = function (material, parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(material.fragmentShader);\n        array.push(material.vertexShader);\n      }\n\n      if (material.defines !== undefined) {\n        for (var name in material.defines) {\n          array.push(name);\n          array.push(material.defines[name]);\n        }\n      }\n\n      for (var i = 0; i < parameterNames.length; i++) {\n        array.push(parameters[parameterNames[i]]);\n      }\n\n      array.push(material.onBeforeCompile.toString());\n      array.push(renderer.gammaOutput);\n      return array.join();\n    };\n\n    this.acquireProgram = function (material, shader, parameters, code) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var programInfo = programs[p];\n\n        if (programInfo.code === code) {\n          program = programInfo;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new WebGLProgram(renderer, code, material, shader, parameters);\n        programs.push(program);\n      }\n\n      return program;\n    };\n\n    this.releaseProgram = function (program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var i = programs.indexOf(program);\n        programs[i] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n    this.programs = programs;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, paramThreeToGL, infoMemory) {\n    var _isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext; //\n\n\n    function clampToMaxSize(image, maxSize) {\n      if (image.width > maxSize || image.height > maxSize) {\n        // Warning: Scaling through the canvas will only work with images that use\n        // premultiplied alpha.\n        var scale = maxSize / Math.max(image.width, image.height);\n        var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = Math.floor(image.width * scale);\n        canvas.height = Math.floor(image.height * scale);\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n        console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n        return canvas;\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo(image) {\n      return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n    }\n\n    function makePowerOfTwo(image) {\n      if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n        var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = _Math.nearestPowerOfTwo(image.width);\n        canvas.height = _Math.nearestPowerOfTwo(image.height);\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, canvas.width, canvas.height);\n        console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n        return canvas;\n      }\n\n      return image;\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function textureNeedsGenerateMipmaps(texture, isPowerOfTwo) {\n      return texture.generateMipmaps && isPowerOfTwo && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter) {\n        return _gl.NEAREST;\n      }\n\n      return _gl.LINEAR;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n      infoMemory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n      infoMemory.textures--;\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image && textureProperties.__image__webglTextureCube) {\n        // cube texture\n        _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n      } else {\n        // 2D texture\n        if (textureProperties.__webglInit === undefined) return;\n\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      } // remove all webgl properties\n\n\n      properties.remove(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      if (!renderTarget) return;\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget.isWebGLRenderTargetCube) {\n        for (var i = 0; i < 6; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n          if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n      }\n\n      properties.remove(renderTarget.texture);\n      properties.remove(renderTarget);\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image.length === 6) {\n        if (texture.version > 0 && textureProperties.__version !== texture.version) {\n          if (!textureProperties.__image__webglTextureCube) {\n            texture.addEventListener('dispose', onTextureDispose);\n            textureProperties.__image__webglTextureCube = _gl.createTexture();\n            infoMemory.textures++;\n          }\n\n          state.activeTexture(_gl.TEXTURE0 + slot);\n          state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n          _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n          var isCompressed = texture && texture.isCompressedTexture;\n          var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n          var cubeImage = [];\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed && !isDataTexture) {\n              cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n            } else {\n              cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n            }\n          }\n\n          var image = cubeImage[0],\n              isPowerOfTwoImage = isPowerOfTwo(image),\n              glFormat = paramThreeToGL(texture.format),\n              glType = paramThreeToGL(texture.type);\n          setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed) {\n              if (isDataTexture) {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n              }\n            } else {\n              var mipmap,\n                  mipmaps = cubeImage[i].mipmaps;\n\n              for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n                mipmap = mipmaps[j];\n\n                if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n                  if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                    state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                  } else {\n                    console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\");\n                  }\n                } else {\n                  state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n                }\n              }\n            }\n          }\n\n          if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n            _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n          }\n\n          textureProperties.__version = texture.version;\n          if (texture.onUpdate) texture.onUpdate(texture);\n        } else {\n          state.activeTexture(_gl.TEXTURE0 + slot);\n          state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n        }\n      }\n    }\n\n    function setTextureCubeDynamic(texture, slot) {\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n    }\n\n    function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n      var extension;\n\n      if (isPowerOfTwoImage) {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n      } else {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture);\n        }\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture);\n        }\n      }\n\n      extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension) {\n        if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n        if (texture.type === HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        infoMemory.textures++;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n      var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n      if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n        image = makePowerOfTwo(image);\n      }\n\n      var isPowerOfTwoImage = isPowerOfTwo(image),\n          glFormat = paramThreeToGL(texture.format),\n          glType = paramThreeToGL(texture.type);\n      setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n      var mipmap,\n          mipmaps = texture.mipmaps;\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        var internalFormat = _gl.DEPTH_COMPONENT;\n\n        if (texture.type === FloatType) {\n          if (!_isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n          internalFormat = _gl.DEPTH_COMPONENT32F;\n        } else if (_isWebGL2) {\n          // WebGL 2.0 requires signed internalformat for glTexImage2D\n          internalFormat = _gl.DEPTH_COMPONENT16;\n        }\n\n        if (texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedShortType;\n            glType = paramThreeToGL(texture.type);\n          }\n        } // Depth stencil textures need the DEPTH_STENCIL internal format\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\n        if (texture.format === DepthStencilFormat) {\n          internalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = paramThreeToGL(texture.type);\n          }\n        }\n\n        state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n        }\n      } else if (texture.isCompressedTexture) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n              state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\");\n            }\n          } else {\n            state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) _gl.generateMipmap(_gl.TEXTURE_2D);\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n      var glFormat = paramThreeToGL(renderTarget.texture.format);\n      var glType = paramThreeToGL(renderTarget.texture.type);\n      state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget) {\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else {\n        // FIXME: We don't support !depth !stencil\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n      }\n\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported!');\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      if (renderTarget.depthTexture.format === DepthFormat) {\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n      } else {\n        throw new Error('Unknown depthTexture format');\n      }\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var i = 0; i < 6; i++) {\n            _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n          }\n        } else {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n        }\n      }\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      infoMemory.textures++;\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget); // Setup framebuffer\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n        }\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n      } else {\n        state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) _gl.generateMipmap(_gl.TEXTURE_2D);\n        state.bindTexture(_gl.TEXTURE_2D, null);\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var texture = renderTarget.texture;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget);\n\n      if (textureNeedsGenerateMipmaps(texture, isTargetPowerOfTwo)) {\n        var target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n\n        _gl.generateMipmap(target);\n\n        state.bindTexture(target, null);\n      }\n    }\n\n    this.setTexture2D = setTexture2D;\n    this.setTextureCube = setTextureCube;\n    this.setTextureCubeDynamic = setTextureCubeDynamic;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n  }\n  /**\n   * @author fordacious / fordacious.github.io\n   */\n\n\n  function WebGLProperties() {\n    var properties = {};\n\n    function get(object) {\n      var uuid = object.uuid;\n      var map = properties[uuid];\n\n      if (map === undefined) {\n        map = {};\n        properties[uuid] = map;\n      }\n\n      return map;\n    }\n\n    function remove(object) {\n      delete properties[object.uuid];\n    }\n\n    function clear() {\n      properties = {};\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      clear: clear\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLState(gl, extensions, paramThreeToGL) {\n    function ColorBuffer() {\n      var locked = false;\n      var color = new Vector4();\n      var currentColorMask = null;\n      var currentColorClear = new Vector4();\n      return {\n        setMask: function (colorMask) {\n          if (currentColorMask !== colorMask && !locked) {\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n            currentColorMask = colorMask;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (r, g, b, a, premultipliedAlpha) {\n          if (premultipliedAlpha === true) {\n            r *= a;\n            g *= a;\n            b *= a;\n          }\n\n          color.set(r, g, b, a);\n\n          if (currentColorClear.equals(color) === false) {\n            gl.clearColor(r, g, b, a);\n            currentColorClear.copy(color);\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentColorMask = null;\n          currentColorClear.set(0, 0, 0, 1);\n        }\n      };\n    }\n\n    function DepthBuffer() {\n      var locked = false;\n      var currentDepthMask = null;\n      var currentDepthFunc = null;\n      var currentDepthClear = null;\n      return {\n        setTest: function (depthTest) {\n          if (depthTest) {\n            enable(gl.DEPTH_TEST);\n          } else {\n            disable(gl.DEPTH_TEST);\n          }\n        },\n        setMask: function (depthMask) {\n          if (currentDepthMask !== depthMask && !locked) {\n            gl.depthMask(depthMask);\n            currentDepthMask = depthMask;\n          }\n        },\n        setFunc: function (depthFunc) {\n          if (currentDepthFunc !== depthFunc) {\n            if (depthFunc) {\n              switch (depthFunc) {\n                case NeverDepth:\n                  gl.depthFunc(gl.NEVER);\n                  break;\n\n                case AlwaysDepth:\n                  gl.depthFunc(gl.ALWAYS);\n                  break;\n\n                case LessDepth:\n                  gl.depthFunc(gl.LESS);\n                  break;\n\n                case LessEqualDepth:\n                  gl.depthFunc(gl.LEQUAL);\n                  break;\n\n                case EqualDepth:\n                  gl.depthFunc(gl.EQUAL);\n                  break;\n\n                case GreaterEqualDepth:\n                  gl.depthFunc(gl.GEQUAL);\n                  break;\n\n                case GreaterDepth:\n                  gl.depthFunc(gl.GREATER);\n                  break;\n\n                case NotEqualDepth:\n                  gl.depthFunc(gl.NOTEQUAL);\n                  break;\n\n                default:\n                  gl.depthFunc(gl.LEQUAL);\n              }\n            } else {\n              gl.depthFunc(gl.LEQUAL);\n            }\n\n            currentDepthFunc = depthFunc;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (depth) {\n          if (currentDepthClear !== depth) {\n            gl.clearDepth(depth);\n            currentDepthClear = depth;\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentDepthMask = null;\n          currentDepthFunc = null;\n          currentDepthClear = null;\n        }\n      };\n    }\n\n    function StencilBuffer() {\n      var locked = false;\n      var currentStencilMask = null;\n      var currentStencilFunc = null;\n      var currentStencilRef = null;\n      var currentStencilFuncMask = null;\n      var currentStencilFail = null;\n      var currentStencilZFail = null;\n      var currentStencilZPass = null;\n      var currentStencilClear = null;\n      return {\n        setTest: function (stencilTest) {\n          if (stencilTest) {\n            enable(gl.STENCIL_TEST);\n          } else {\n            disable(gl.STENCIL_TEST);\n          }\n        },\n        setMask: function (stencilMask) {\n          if (currentStencilMask !== stencilMask && !locked) {\n            gl.stencilMask(stencilMask);\n            currentStencilMask = stencilMask;\n          }\n        },\n        setFunc: function (stencilFunc, stencilRef, stencilMask) {\n          if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n            currentStencilFunc = stencilFunc;\n            currentStencilRef = stencilRef;\n            currentStencilFuncMask = stencilMask;\n          }\n        },\n        setOp: function (stencilFail, stencilZFail, stencilZPass) {\n          if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n            currentStencilFail = stencilFail;\n            currentStencilZFail = stencilZFail;\n            currentStencilZPass = stencilZPass;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (stencil) {\n          if (currentStencilClear !== stencil) {\n            gl.clearStencil(stencil);\n            currentStencilClear = stencil;\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentStencilMask = null;\n          currentStencilFunc = null;\n          currentStencilRef = null;\n          currentStencilFuncMask = null;\n          currentStencilFail = null;\n          currentStencilZFail = null;\n          currentStencilZPass = null;\n          currentStencilClear = null;\n        }\n      };\n    } //\n\n\n    var colorBuffer = new ColorBuffer();\n    var depthBuffer = new DepthBuffer();\n    var stencilBuffer = new StencilBuffer();\n    var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var newAttributes = new Uint8Array(maxVertexAttributes);\n    var enabledAttributes = new Uint8Array(maxVertexAttributes);\n    var attributeDivisors = new Uint8Array(maxVertexAttributes);\n    var capabilities = {};\n    var compressedTextureFormats = null;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var currentScissorTest = null;\n    var maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    var version = parseFloat(/^WebGL\\ ([0-9])/.exec(gl.getParameter(gl.VERSION))[1]);\n    var lineWidthAvailable = parseFloat(version) >= 1.0;\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var currentScissor = new Vector4();\n    var currentViewport = new Vector4();\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      for (var i = 0; i < count; i++) {\n        gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n    emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); //\n\n    function init() {\n      colorBuffer.setClear(0, 0, 0, 1);\n      depthBuffer.setClear(1);\n      stencilBuffer.setClear(0);\n      enable(gl.DEPTH_TEST);\n      depthBuffer.setFunc(LessEqualDepth);\n      setFlipSided(false);\n      setCullFace(CullFaceBack);\n      enable(gl.CULL_FACE);\n      enable(gl.BLEND);\n      setBlending(NormalBlending);\n    }\n\n    function initAttributes() {\n      for (var i = 0, l = newAttributes.length; i < l; i++) {\n        newAttributes[i] = 0;\n      }\n    }\n\n    function enableAttribute(attribute) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== 0) {\n        var extension = extensions.get('ANGLE_instanced_arrays');\n        extension.vertexAttribDivisorANGLE(attribute, 0);\n        attributeDivisors[attribute] = 0;\n      }\n    }\n\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        var extension = extensions.get('ANGLE_instanced_arrays');\n        extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    }\n\n    function disableUnusedAttributes() {\n      for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n        if (enabledAttributes[i] !== newAttributes[i]) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n    }\n\n    function enable(id) {\n      if (capabilities[id] !== true) {\n        gl.enable(id);\n        capabilities[id] = true;\n      }\n    }\n\n    function disable(id) {\n      if (capabilities[id] !== false) {\n        gl.disable(id);\n        capabilities[id] = false;\n      }\n    }\n\n    function getCompressedTextureFormats() {\n      if (compressedTextureFormats === null) {\n        compressedTextureFormats = [];\n\n        if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n          var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n          for (var i = 0; i < formats.length; i++) {\n            compressedTextureFormats.push(formats[i]);\n          }\n        }\n      }\n\n      return compressedTextureFormats;\n    }\n\n    function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending !== NoBlending) {\n        enable(gl.BLEND);\n      } else {\n        disable(gl.BLEND);\n      }\n\n      if (blending !== CustomBlending && (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha)) {\n        if (blending === AdditiveBlending) {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n          } else {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n          }\n        } else if (blending === SubtractiveBlending) {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n          } else {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n          }\n        } else if (blending === MultiplyBlending) {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n          } else {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n          }\n        } else {\n          if (premultipliedAlpha) {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          } else {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          }\n        }\n\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n\n      if (blending === CustomBlending) {\n        blendEquationAlpha = blendEquationAlpha || blendEquation;\n        blendSrcAlpha = blendSrcAlpha || blendSrc;\n        blendDstAlpha = blendDstAlpha || blendDst;\n\n        if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n          gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n          currentBlendEquation = blendEquation;\n          currentBlendEquationAlpha = blendEquationAlpha;\n        }\n\n        if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n          gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n          currentBlendSrc = blendSrc;\n          currentBlendDst = blendDst;\n          currentBlendSrcAlpha = blendSrcAlpha;\n          currentBlendDstAlpha = blendDstAlpha;\n        }\n      } else {\n        currentBlendEquation = null;\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendEquationAlpha = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n      }\n    }\n\n    function setMaterial(material) {\n      material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n      setFlipSided(material.side === BackSide);\n      material.transparent === true ? setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha) : setBlending(NoBlending);\n      depthBuffer.setFunc(material.depthFunc);\n      depthBuffer.setTest(material.depthTest);\n      depthBuffer.setMask(material.depthWrite);\n      colorBuffer.setMask(material.colorWrite);\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    } //\n\n\n    function setFlipSided(flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(gl.CW);\n        } else {\n          gl.frontFace(gl.CCW);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    }\n\n    function setCullFace(cullFace) {\n      if (cullFace !== CullFaceNone) {\n        enable(gl.CULL_FACE);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === CullFaceBack) {\n            gl.cullFace(gl.BACK);\n          } else if (cullFace === CullFaceFront) {\n            gl.cullFace(gl.FRONT);\n          } else {\n            gl.cullFace(gl.FRONT_AND_BACK);\n          }\n        }\n      } else {\n        disable(gl.CULL_FACE);\n      }\n\n      currentCullFace = cullFace;\n    }\n\n    function setLineWidth(width) {\n      if (width !== currentLineWidth) {\n        if (lineWidthAvailable) gl.lineWidth(width);\n        currentLineWidth = width;\n      }\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n      if (polygonOffset) {\n        enable(gl.POLYGON_OFFSET_FILL);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        disable(gl.POLYGON_OFFSET_FILL);\n      }\n    }\n\n    function getScissorTest() {\n      return currentScissorTest;\n    }\n\n    function setScissorTest(scissorTest) {\n      currentScissorTest = scissorTest;\n\n      if (scissorTest) {\n        enable(gl.SCISSOR_TEST);\n      } else {\n        disable(gl.SCISSOR_TEST);\n      }\n    } // texture\n\n\n    function activeTexture(webglSlot) {\n      if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    }\n\n    function bindTexture(webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    }\n\n    function compressedTexImage2D() {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage2D() {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    } //\n\n\n    function scissor(scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    }\n\n    function viewport(viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    } //\n\n\n    function reset() {\n      for (var i = 0; i < enabledAttributes.length; i++) {\n        if (enabledAttributes[i] === 1) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n\n      capabilities = {};\n      compressedTextureFormats = null;\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      currentBlending = null;\n      currentFlipSided = null;\n      currentCullFace = null;\n      colorBuffer.reset();\n      depthBuffer.reset();\n      stencilBuffer.reset();\n    }\n\n    return {\n      buffers: {\n        color: colorBuffer,\n        depth: depthBuffer,\n        stencil: stencilBuffer\n      },\n      init: init,\n      initAttributes: initAttributes,\n      enableAttribute: enableAttribute,\n      enableAttributeAndDivisor: enableAttributeAndDivisor,\n      disableUnusedAttributes: disableUnusedAttributes,\n      enable: enable,\n      disable: disable,\n      getCompressedTextureFormats: getCompressedTextureFormats,\n      setBlending: setBlending,\n      setMaterial: setMaterial,\n      setFlipSided: setFlipSided,\n      setCullFace: setCullFace,\n      setLineWidth: setLineWidth,\n      setPolygonOffset: setPolygonOffset,\n      getScissorTest: getScissorTest,\n      setScissorTest: setScissorTest,\n      activeTexture: activeTexture,\n      bindTexture: bindTexture,\n      compressedTexImage2D: compressedTexImage2D,\n      texImage2D: texImage2D,\n      scissor: scissor,\n      viewport: viewport,\n      reset: reset\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLCapabilities(gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n\n    var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    var maxPrecision = getMaxPrecision(precision);\n\n    if (maxPrecision !== precision) {\n      console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n      precision = maxPrecision;\n    }\n\n    var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !!extensions.get('EXT_frag_depth');\n    var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    var maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    var maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    var maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n    var vertexTextures = maxVertexTextures > 0;\n    var floatFragmentTextures = !!extensions.get('OES_texture_float');\n    var floatVertexTextures = vertexTextures && floatFragmentTextures;\n    return {\n      getMaxAnisotropy: getMaxAnisotropy,\n      getMaxPrecision: getMaxPrecision,\n      precision: precision,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      maxTextures: maxTextures,\n      maxVertexTextures: maxVertexTextures,\n      maxTextureSize: maxTextureSize,\n      maxCubemapSize: maxCubemapSize,\n      maxAttributes: maxAttributes,\n      maxVertexUniforms: maxVertexUniforms,\n      maxVaryings: maxVaryings,\n      maxFragmentUniforms: maxFragmentUniforms,\n      vertexTextures: vertexTextures,\n      floatFragmentTextures: floatFragmentTextures,\n      floatVertexTextures: floatVertexTextures\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function ArrayCamera(array) {\n    PerspectiveCamera.call(this);\n    this.cameras = array || [];\n  }\n\n  ArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n    constructor: ArrayCamera,\n    isArrayCamera: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebVRManager(renderer) {\n    var scope = this;\n    var device = null;\n    var frameData = null;\n\n    if ('VRFrameData' in window) {\n      frameData = new window.VRFrameData();\n    }\n\n    var matrixWorldInverse = new Matrix4();\n    var standingMatrix = new Matrix4();\n    var standingMatrixInverse = new Matrix4();\n    var cameraL = new PerspectiveCamera();\n    cameraL.bounds = new Vector4(0.0, 0.0, 0.5, 1.0);\n    cameraL.layers.enable(1);\n    var cameraR = new PerspectiveCamera();\n    cameraR.bounds = new Vector4(0.5, 0.0, 0.5, 1.0);\n    cameraR.layers.enable(2);\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    var currentSize, currentPixelRatio;\n\n    function onVRDisplayPresentChange() {\n      if (device.isPresenting) {\n        var eyeParameters = device.getEyeParameters('left');\n        var renderWidth = eyeParameters.renderWidth;\n        var renderHeight = eyeParameters.renderHeight;\n        currentPixelRatio = renderer.getPixelRatio();\n        currentSize = renderer.getSize();\n        renderer.setDrawingBufferSize(renderWidth * 2, renderHeight, 1);\n      } else if (scope.enabled) {\n        renderer.setDrawingBufferSize(currentSize.width, currentSize.height, currentPixelRatio);\n      }\n    }\n\n    window.addEventListener('vrdisplaypresentchange', onVRDisplayPresentChange, false); //\n\n    this.enabled = false;\n    this.standing = false;\n\n    this.getDevice = function () {\n      return device;\n    };\n\n    this.setDevice = function (value) {\n      if (value !== undefined) device = value;\n    };\n\n    this.getCamera = function (camera) {\n      if (device === null) return camera;\n      device.depthNear = camera.near;\n      device.depthFar = camera.far;\n      device.getFrameData(frameData); //\n\n      var pose = frameData.pose;\n\n      if (pose.position !== null) {\n        camera.position.fromArray(pose.position);\n      } else {\n        camera.position.set(0, 0, 0);\n      }\n\n      if (pose.orientation !== null) {\n        camera.quaternion.fromArray(pose.orientation);\n      }\n\n      camera.updateMatrixWorld();\n      var stageParameters = device.stageParameters;\n\n      if (this.standing && stageParameters) {\n        standingMatrix.fromArray(stageParameters.sittingToStandingTransform);\n        standingMatrixInverse.getInverse(standingMatrix);\n        camera.matrixWorld.multiply(standingMatrix);\n        camera.matrixWorldInverse.multiply(standingMatrixInverse);\n      }\n\n      if (device.isPresenting === false) return camera; //\n\n      cameraVR.matrixWorld.copy(camera.matrixWorld);\n      cameraVR.matrixWorldInverse.copy(camera.matrixWorldInverse);\n      cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);\n      cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix);\n\n      if (this.standing && stageParameters) {\n        cameraL.matrixWorldInverse.multiply(standingMatrixInverse);\n        cameraR.matrixWorldInverse.multiply(standingMatrixInverse);\n      }\n\n      var parent = camera.parent;\n\n      if (parent !== null) {\n        matrixWorldInverse.getInverse(parent.matrixWorld);\n        cameraL.matrixWorldInverse.multiply(matrixWorldInverse);\n        cameraR.matrixWorldInverse.multiply(matrixWorldInverse);\n      } // envMap and Mirror needs camera.matrixWorld\n\n\n      cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);\n      cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);\n      cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);\n      cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix); // HACK @mrdoob\n      // https://github.com/w3c/webvr/issues/203\n\n      cameraVR.projectionMatrix.copy(cameraL.projectionMatrix); //\n\n      var layers = device.getLayers();\n\n      if (layers.length) {\n        var layer = layers[0];\n\n        if (layer.leftBounds !== null && layer.leftBounds.length === 4) {\n          cameraL.bounds.fromArray(layer.leftBounds);\n        }\n\n        if (layer.rightBounds !== null && layer.rightBounds.length === 4) {\n          cameraR.bounds.fromArray(layer.rightBounds);\n        }\n      }\n\n      return cameraVR;\n    };\n\n    this.getStandingMatrix = function () {\n      return standingMatrix;\n    };\n\n    this.submitFrame = function () {\n      if (device && device.isPresenting) device.submitFrame();\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLExtensions(gl) {\n    var extensions = {};\n    return {\n      get: function (name) {\n        if (extensions[name] !== undefined) {\n          return extensions[name];\n        }\n\n        var extension;\n\n        switch (name) {\n          case 'WEBGL_depth_texture':\n            extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n            break;\n\n          case 'EXT_texture_filter_anisotropic':\n            extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n            break;\n\n          case 'WEBGL_compressed_texture_s3tc':\n            extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n            break;\n\n          case 'WEBGL_compressed_texture_pvrtc':\n            extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n            break;\n\n          case 'WEBGL_compressed_texture_etc1':\n            extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n            break;\n\n          default:\n            extension = gl.getExtension(name);\n        }\n\n        if (extension === null) {\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n        }\n\n        extensions[name] = extension;\n        return extension;\n      }\n    };\n  }\n  /**\n   * @author tschw\n   */\n\n\n  function WebGLClipping() {\n    var scope = this,\n        globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false,\n        plane = new Plane(),\n        viewNormalMatrix = new Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n    this.numIntersection = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (planes, clipIntersection, clipShadows, camera, cache, fromCache) {\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4,\n            dstArray = cache.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n        for (var i = 0; i !== lGlobal; ++i) {\n          dstArray[i] = globalState[i];\n        }\n\n        cache.clippingState = dstArray;\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n      scope.numIntersection = 0;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0,\n          dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      return dstArray;\n    }\n  } // import { Sphere } from '../math/Sphere';\n\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   * @author tschw\n   */\n\n\n  function WebGLRenderer(parameters) {\n    console.log('THREE.WebGLRenderer', REVISION);\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n    var lights = [];\n    var currentRenderList = null;\n    var morphInfluences = new Float32Array(8);\n    var sprites = [];\n    var lensFlares = []; // public properties\n\n    this.domElement = _canvas;\n    this.context = null; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.gammaInput = false;\n    this.gammaOutput = false; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = LinearToneMapping;\n    this.toneMappingExposure = 1.0;\n    this.toneMappingWhitePoint = 1.0; // morphs\n\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4; // internal properties\n\n    var _this = this,\n        // internal state cache\n    _currentProgram = null,\n        _currentRenderTarget = null,\n        _currentFramebuffer = null,\n        _currentMaterialId = -1,\n        _currentGeometryProgram = '',\n        _currentCamera = null,\n        _currentArrayCamera = null,\n        _currentScissor = new Vector4(),\n        _currentScissorTest = null,\n        _currentViewport = new Vector4(),\n        //\n    _usedTextureUnits = 0,\n        //\n    _width = _canvas.width,\n        _height = _canvas.height,\n        _pixelRatio = 1,\n        _scissor = new Vector4(0, 0, _width, _height),\n        _scissorTest = false,\n        _viewport = new Vector4(0, 0, _width, _height),\n        // frustum\n    _frustum = new Frustum(),\n        // clipping\n    _clipping = new WebGLClipping(),\n        _clippingEnabled = false,\n        _localClippingEnabled = false,\n        // camera matrices cache\n    _projScreenMatrix = new Matrix4(),\n        _vector3 = new Vector3(),\n        _matrix4 = new Matrix4(),\n        _matrix42 = new Matrix4(),\n        // light arrays cache\n    _lights = {\n      hash: '',\n      ambient: [0, 0, 0],\n      directional: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      rectArea: [],\n      point: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: [],\n      shadows: []\n    },\n        // info\n    _infoMemory = {\n      geometries: 0,\n      textures: 0\n    },\n        _infoRender = {\n      frame: 0,\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0\n    };\n\n    this.info = {\n      render: _infoRender,\n      memory: _infoMemory,\n      programs: null\n    }; // initialize\n\n    var _gl;\n\n    try {\n      var contextAttributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer\n      };\n      _gl = _context || _canvas.getContext('webgl', contextAttributes) || _canvas.getContext('experimental-webgl', contextAttributes);\n\n      if (_gl === null) {\n        if (_canvas.getContext('webgl') !== null) {\n          throw 'Error creating WebGL context with your selected attributes.';\n        } else {\n          throw 'Error creating WebGL context.';\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error);\n    }\n\n    var extensions = new WebGLExtensions(_gl);\n    extensions.get('WEBGL_depth_texture');\n    extensions.get('OES_texture_float');\n    extensions.get('OES_texture_float_linear');\n    extensions.get('OES_texture_half_float');\n    extensions.get('OES_texture_half_float_linear');\n    extensions.get('OES_standard_derivatives');\n    extensions.get('ANGLE_instanced_arrays');\n\n    if (extensions.get('OES_element_index_uint')) {\n      BufferGeometry.MaxIndex = 4294967296;\n    }\n\n    var capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n    var state = new WebGLState(_gl, extensions, paramThreeToGL);\n    var properties = new WebGLProperties();\n    var textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, paramThreeToGL, _infoMemory);\n    var attributes = new WebGLAttributes(_gl);\n    var geometries = new WebGLGeometries(_gl, attributes, _infoMemory);\n    var objects = new WebGLObjects(_gl, geometries, _infoRender);\n    var programCache = new WebGLPrograms(this, capabilities);\n    var lightCache = new WebGLLights();\n    var renderLists = new WebGLRenderLists();\n    var background = new WebGLBackground(this, state, objects, _premultipliedAlpha);\n    var vr = new WebVRManager(this);\n    this.info.programs = programCache.programs;\n    var bufferRenderer = new WebGLBufferRenderer(_gl, extensions, _infoRender);\n    var indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    }\n\n    function setDefaultGLState() {\n      state.init();\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    }\n\n    function resetGLState() {\n      _currentProgram = null;\n      _currentCamera = null;\n      _currentGeometryProgram = '';\n      _currentMaterialId = -1;\n      state.reset();\n    }\n\n    setDefaultGLState();\n    this.context = _gl;\n    this.capabilities = capabilities;\n    this.extensions = extensions;\n    this.properties = properties;\n    this.renderLists = renderLists;\n    this.state = state;\n    this.vr = vr; // shadow map\n\n    var shadowMap = new WebGLShadowMap(this, _lights, objects, capabilities);\n    this.shadowMap = shadowMap; // Plugins\n\n    var spritePlugin = new SpritePlugin(this, sprites);\n    var lensFlarePlugin = new LensFlarePlugin(this, lensFlares); // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.loseContext();\n    };\n\n    this.getMaxAnisotropy = function () {\n      return capabilities.getMaxAnisotropy();\n    };\n\n    this.getPrecision = function () {\n      return capabilities.precision;\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) return;\n      _pixelRatio = value;\n      this.setSize(_width, _height, false);\n    };\n\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      var device = vr.getDevice();\n\n      if (device && device.isPresenting) {\n        console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n        return;\n      }\n\n      _width = width;\n      _height = height;\n      _canvas.width = width * _pixelRatio;\n      _canvas.height = height * _pixelRatio;\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getDrawingBufferSize = function () {\n      return {\n        width: _width * _pixelRatio,\n        height: _height * _pixelRatio\n      };\n    };\n\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\n      _width = width;\n      _height = height;\n      _pixelRatio = pixelRatio;\n      _canvas.width = width * pixelRatio;\n      _canvas.height = height * pixelRatio;\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      _viewport.set(x, _height - y - height, width, height);\n\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      _scissor.set(x, _height - y - height, width, height);\n\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    }; // Clearing\n\n\n    this.getClearColor = background.getClearColor;\n    this.setClearColor = background.setClearColor;\n    this.getClearAlpha = background.getClearAlpha;\n    this.setClearAlpha = background.setClearAlpha;\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n      if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n      if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n      if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    };\n\n    this.clearTarget = function (renderTarget, color, depth, stencil) {\n      this.setRenderTarget(renderTarget);\n      this.clear(color, depth, stencil);\n    }; // Reset\n\n\n    this.resetGLState = resetGLState;\n\n    this.dispose = function () {\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n      renderLists.dispose();\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      resetGLState();\n      setDefaultGLState();\n      properties.clear();\n      objects.clear();\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReference(material);\n      properties.remove(material);\n    }\n\n    function releaseMaterialProgramReference(material) {\n      var programInfo = properties.get(material).program;\n      material.program = undefined;\n\n      if (programInfo !== undefined) {\n        programCache.releaseProgram(programInfo);\n      }\n    } // Buffer rendering\n\n\n    function renderObjectImmediate(object, program, material) {\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program, material);\n      });\n    }\n\n    this.renderBufferImmediate = function (object, program, material) {\n      state.initAttributes();\n      var buffers = properties.get(object);\n      if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n      if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n      if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n      if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n      var programAttributes = program.getAttributes();\n\n      if (object.hasPositions) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.position);\n\n        _gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasNormals) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n        if (!material.isMeshPhongMaterial && !material.isMeshStandardMaterial && !material.isMeshNormalMaterial && material.shading === FlatShading) {\n          for (var i = 0, l = object.count * 3; i < l; i += 9) {\n            var array = object.normalArray;\n            var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n            var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n            var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n            array[i + 0] = nx;\n            array[i + 1] = ny;\n            array[i + 2] = nz;\n            array[i + 3] = nx;\n            array[i + 4] = ny;\n            array[i + 5] = nz;\n            array[i + 6] = nx;\n            array[i + 7] = ny;\n            array[i + 8] = nz;\n          }\n        }\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.normal);\n\n        _gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasUvs && material.map) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.uv);\n\n        _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasColors && material.vertexColors !== NoColors) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.color);\n\n        _gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      state.disableUnusedAttributes();\n\n      _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n      object.count = 0;\n    };\n\n    function absNumericalSort(a, b) {\n      return Math.abs(b[0]) - Math.abs(a[0]);\n    }\n\n    this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n      state.setMaterial(material);\n      var program = setProgram(camera, fog, material, object);\n      var geometryProgram = geometry.id + '_' + program.id + '_' + (material.wireframe === true);\n      var updateBuffers = false;\n\n      if (geometryProgram !== _currentGeometryProgram) {\n        _currentGeometryProgram = geometryProgram;\n        updateBuffers = true;\n      } // morph targets\n\n\n      var morphTargetInfluences = object.morphTargetInfluences;\n\n      if (morphTargetInfluences !== undefined) {\n        // TODO Remove allocations\n        var activeInfluences = [];\n\n        for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n          var influence = morphTargetInfluences[i];\n          activeInfluences.push([influence, i]);\n        }\n\n        activeInfluences.sort(absNumericalSort);\n\n        if (activeInfluences.length > 8) {\n          activeInfluences.length = 8;\n        }\n\n        var morphAttributes = geometry.morphAttributes;\n\n        for (var i = 0, l = activeInfluences.length; i < l; i++) {\n          var influence = activeInfluences[i];\n          morphInfluences[i] = influence[0];\n\n          if (influence[0] !== 0) {\n            var index = influence[1];\n            if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n            if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n          } else {\n            if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n            if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n          }\n        }\n\n        for (var i = activeInfluences.length, il = morphInfluences.length; i < il; i++) {\n          morphInfluences[i] = 0.0;\n        }\n\n        program.getUniforms().setValue(_gl, 'morphTargetInfluences', morphInfluences);\n        updateBuffers = true;\n      } //\n\n\n      var index = geometry.index;\n      var position = geometry.attributes.position;\n      var rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        index = geometries.getWireframeAttribute(geometry);\n        rangeFactor = 2;\n      }\n\n      var attribute;\n      var renderer = bufferRenderer;\n\n      if (index !== null) {\n        attribute = attributes.get(index);\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(attribute);\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(material, program, geometry);\n\n        if (index !== null) {\n          _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, attribute.buffer);\n        }\n      } //\n\n\n      var dataCount = 0;\n\n      if (index !== null) {\n        dataCount = index.count;\n      } else if (position !== undefined) {\n        dataCount = position.count;\n      }\n\n      var rangeStart = geometry.drawRange.start * rangeFactor;\n      var rangeCount = geometry.drawRange.count * rangeFactor;\n      var groupStart = group !== null ? group.start * rangeFactor : 0;\n      var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n      var drawStart = Math.max(rangeStart, groupStart);\n      var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1);\n      if (drawCount === 0) return; //\n\n      if (object.isMesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(_gl.LINES);\n        } else {\n          switch (object.drawMode) {\n            case TrianglesDrawMode:\n              renderer.setMode(_gl.TRIANGLES);\n              break;\n\n            case TriangleStripDrawMode:\n              renderer.setMode(_gl.TRIANGLE_STRIP);\n              break;\n\n            case TriangleFanDrawMode:\n              renderer.setMode(_gl.TRIANGLE_FAN);\n              break;\n          }\n        }\n      } else if (object.isLine) {\n        var lineWidth = material.linewidth;\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object.isLineSegments) {\n          renderer.setMode(_gl.LINES);\n        } else if (object.isLineLoop) {\n          renderer.setMode(_gl.LINE_LOOP);\n        } else {\n          renderer.setMode(_gl.LINE_STRIP);\n        }\n      } else if (object.isPoints) {\n        renderer.setMode(_gl.POINTS);\n      }\n\n      if (geometry && geometry.isInstancedBufferGeometry) {\n        if (geometry.maxInstancedCount > 0) {\n          renderer.renderInstances(geometry, drawStart, drawCount);\n        }\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    };\n\n    function setupVertexAttributes(material, program, geometry, startIndex) {\n      if (geometry && geometry.isInstancedBufferGeometry) {\n        if (extensions.get('ANGLE_instanced_arrays') === null) {\n          console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      if (startIndex === undefined) startIndex = 0;\n      state.initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute !== undefined) {\n            var normalized = geometryAttribute.normalized;\n            var size = geometryAttribute.itemSize;\n            var attribute = attributes.get(geometryAttribute);\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            var bytesPerElement = attribute.bytesPerElement;\n\n            if (geometryAttribute.isInterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data && data.isInstancedInterleavedBuffer) {\n                state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, (startIndex * stride + offset) * bytesPerElement);\n            } else {\n              if (geometryAttribute.isInstancedBufferAttribute) {\n                state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement);\n            }\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var value = materialDefaultAttributeValues[name];\n\n            if (value !== undefined) {\n              switch (value.length) {\n                case 2:\n                  _gl.vertexAttrib2fv(programAttribute, value);\n\n                  break;\n\n                case 3:\n                  _gl.vertexAttrib3fv(programAttribute, value);\n\n                  break;\n\n                case 4:\n                  _gl.vertexAttrib4fv(programAttribute, value);\n\n                  break;\n\n                default:\n                  _gl.vertexAttrib1fv(programAttribute, value);\n\n              }\n            }\n          }\n        }\n      }\n\n      state.disableUnusedAttributes();\n    } // Compile\n\n\n    this.compile = function (scene, camera) {\n      lights = [];\n      scene.traverse(function (object) {\n        if (object.isLight) {\n          lights.push(object);\n        }\n      });\n      setupLights(lights, camera);\n      scene.traverse(function (object) {\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            for (var i = 0; i < object.material.length; i++) {\n              initMaterial(object.material[i], scene.fog, object);\n            }\n          } else {\n            initMaterial(object.material, scene.fog, object);\n          }\n        }\n      });\n    }; // Rendering\n\n\n    this.animate = function (callback) {\n      function onFrame() {\n        callback();\n        (vr.getDevice() || window).requestAnimationFrame(onFrame);\n      }\n\n      (vr.getDevice() || window).requestAnimationFrame(onFrame);\n    };\n\n    this.render = function (scene, camera, renderTarget, forceClear) {\n      if (!(camera && camera.isCamera)) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      } // reset caching for this frame\n\n\n      _currentGeometryProgram = '';\n      _currentMaterialId = -1;\n      _currentCamera = null; // update scene graph\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      if (vr.enabled) {\n        camera = vr.getCamera(camera);\n      }\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix);\n\n      lights.length = 0;\n      sprites.length = 0;\n      lensFlares.length = 0;\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      currentRenderList = renderLists.get(scene, camera);\n      currentRenderList.init();\n      projectObject(scene, camera, _this.sortObjects);\n      currentRenderList.finish();\n\n      if (_this.sortObjects === true) {\n        currentRenderList.sort();\n      } //\n\n\n      if (_clippingEnabled) _clipping.beginShadows();\n      setupShadows(lights);\n      shadowMap.render(scene, camera);\n      setupLights(lights, camera);\n      if (_clippingEnabled) _clipping.endShadows(); //\n\n      _infoRender.frame++;\n      _infoRender.calls = 0;\n      _infoRender.vertices = 0;\n      _infoRender.faces = 0;\n      _infoRender.points = 0;\n\n      if (renderTarget === undefined) {\n        renderTarget = null;\n      }\n\n      this.setRenderTarget(renderTarget); //\n\n      background.render(scene, camera, forceClear); // render scene\n\n      var opaqueObjects = currentRenderList.opaque;\n      var transparentObjects = currentRenderList.transparent;\n\n      if (scene.overrideMaterial) {\n        var overrideMaterial = scene.overrideMaterial;\n        if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera, overrideMaterial);\n        if (transparentObjects.length) renderObjects(transparentObjects, scene, camera, overrideMaterial);\n      } else {\n        // opaque pass (front-to-back order)\n        if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera); // transparent pass (back-to-front order)\n\n        if (transparentObjects.length) renderObjects(transparentObjects, scene, camera);\n      } // custom render plugins (post pass)\n\n\n      spritePlugin.render(scene, camera);\n      lensFlarePlugin.render(scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n      if (renderTarget) {\n        textures.updateRenderTargetMipmap(renderTarget);\n      } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n      state.buffers.depth.setTest(true);\n      state.buffers.depth.setMask(true);\n      state.buffers.color.setMask(true);\n\n      if (camera.isArrayCamera) {\n        _this.setScissorTest(false);\n      }\n\n      if (vr.enabled) {\n        vr.submitFrame();\n      } // _gl.finish();\n\n    };\n    /*\n    // TODO Duplicated code (Frustum)\n    \tvar _sphere = new Sphere();\n    \tfunction isObjectViewable( object ) {\n    \t\tvar geometry = object.geometry;\n    \t\tif ( geometry.boundingSphere === null )\n    \t\tgeometry.computeBoundingSphere();\n    \t\t_sphere.copy( geometry.boundingSphere ).\n    \tapplyMatrix4( object.matrixWorld );\n    \t\treturn isSphereViewable( _sphere );\n    \t}\n    \tfunction isSpriteViewable( sprite ) {\n    \t\t_sphere.center.set( 0, 0, 0 );\n    \t_sphere.radius = 0.7071067811865476;\n    \t_sphere.applyMatrix4( sprite.matrixWorld );\n    \t\treturn isSphereViewable( _sphere );\n    \t}\n    \tfunction isSphereViewable( sphere ) {\n    \t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n    \t\tvar numPlanes = _clipping.numPlanes;\n    \t\tif ( numPlanes === 0 ) return true;\n    \t\tvar planes = _this.clippingPlanes,\n    \t\t\tcenter = sphere.center,\n    \t\tnegRad = - sphere.radius,\n    \t\ti = 0;\n    \t\tdo {\n    \t\t\t// out when deeper than radius in the negative halfspace\n    \t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n    \t\t} while ( ++ i !== numPlanes );\n    \t\treturn true;\n    \t}\n    */\n\n\n    function projectObject(object, camera, sortObjects) {\n      if (!object.visible) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible) {\n        if (object.isLight) {\n          lights.push(object);\n        } else if (object.isSprite) {\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n            sprites.push(object);\n          }\n        } else if (object.isLensFlare) {\n          lensFlares.push(object);\n        } else if (object.isImmediateRenderObject) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          currentRenderList.push(object, null, object.material, _vector3.z, null);\n        } else if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.isSkinnedMesh) {\n            object.skeleton.update();\n          }\n\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (Array.isArray(material)) {\n              var groups = geometry.groups;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = material[group.materialIndex];\n\n                if (groupMaterial && groupMaterial.visible) {\n                  currentRenderList.push(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else if (material.visible) {\n              currentRenderList.push(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i], camera, sortObjects);\n      }\n    }\n\n    function renderObjects(renderList, scene, camera, overrideMaterial) {\n      for (var i = 0, l = renderList.length; i < l; i++) {\n        var renderItem = renderList[i];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n\n        if (camera.isArrayCamera) {\n          _currentArrayCamera = camera;\n          var cameras = camera.cameras;\n\n          for (var j = 0, jl = cameras.length; j < jl; j++) {\n            var camera2 = cameras[j];\n\n            if (object.layers.test(camera2.layers)) {\n              var bounds = camera2.bounds;\n              var x = bounds.x * _width;\n              var y = bounds.y * _height;\n              var width = bounds.z * _width;\n              var height = bounds.w * _height;\n\n              _this.setViewport(x, y, width, height);\n\n              _this.setScissor(x, y, width, height);\n\n              _this.setScissorTest(true);\n\n              renderObject(object, scene, camera2, geometry, material, group);\n            }\n          }\n        } else {\n          _currentArrayCamera = null;\n          renderObject(object, scene, camera, geometry, material, group);\n        }\n      }\n    }\n\n    function renderObject(object, scene, camera, geometry, material, group) {\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\n\n      if (object.isImmediateRenderObject) {\n        state.setMaterial(material);\n        var program = setProgram(camera, scene.fog, material, object);\n        _currentGeometryProgram = '';\n        renderObjectImmediate(object, program, material);\n      } else {\n        _this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n      }\n\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\n    }\n\n    function initMaterial(material, fog, object) {\n      var materialProperties = properties.get(material);\n      var parameters = programCache.getParameters(material, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object);\n      var code = programCache.getProgramCode(material, parameters);\n      var program = materialProperties.program;\n      var programChange = true;\n\n      if (program === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n      } else if (program.code !== code) {\n        // changed glsl or parameters\n        releaseMaterialProgramReference(material);\n      } else if (parameters.shaderID !== undefined) {\n        // same glsl and uniform list\n        return;\n      } else {\n        // only rebuild uniform list\n        programChange = false;\n      }\n\n      if (programChange) {\n        if (parameters.shaderID) {\n          var shader = ShaderLib[parameters.shaderID];\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: UniformsUtils.clone(shader.uniforms),\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader\n          };\n        } else {\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: material.uniforms,\n            vertexShader: material.vertexShader,\n            fragmentShader: material.fragmentShader\n          };\n        }\n\n        material.onBeforeCompile(materialProperties.shader);\n        program = programCache.acquireProgram(material, materialProperties.shader, parameters, code);\n        materialProperties.program = program;\n        material.program = program;\n      }\n\n      var programAttributes = program.getAttributes();\n\n      if (material.morphTargets) {\n        material.numSupportedMorphTargets = 0;\n\n        for (var i = 0; i < _this.maxMorphTargets; i++) {\n          if (programAttributes['morphTarget' + i] >= 0) {\n            material.numSupportedMorphTargets++;\n          }\n        }\n      }\n\n      if (material.morphNormals) {\n        material.numSupportedMorphNormals = 0;\n\n        for (var i = 0; i < _this.maxMorphNormals; i++) {\n          if (programAttributes['morphNormal' + i] >= 0) {\n            material.numSupportedMorphNormals++;\n          }\n        }\n      }\n\n      var uniforms = materialProperties.shader.uniforms;\n\n      if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n        materialProperties.numClippingPlanes = _clipping.numPlanes;\n        materialProperties.numIntersection = _clipping.numIntersection;\n        uniforms.clippingPlanes = _clipping.uniform;\n      }\n\n      materialProperties.fog = fog; // store the light setup it was created for\n\n      materialProperties.lightsHash = _lights.hash;\n\n      if (material.lights) {\n        // wire up the material to this renderer's lighting state\n        uniforms.ambientLightColor.value = _lights.ambient;\n        uniforms.directionalLights.value = _lights.directional;\n        uniforms.spotLights.value = _lights.spot;\n        uniforms.rectAreaLights.value = _lights.rectArea;\n        uniforms.pointLights.value = _lights.point;\n        uniforms.hemisphereLights.value = _lights.hemi;\n        uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = _lights.spotShadowMap;\n        uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n        uniforms.pointShadowMap.value = _lights.pointShadowMap;\n        uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n      }\n\n      var progUniforms = materialProperties.program.getUniforms(),\n          uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.uniformsList = uniformsList;\n    }\n\n    function setProgram(camera, fog, material, object) {\n      _usedTextureUnits = 0;\n      var materialProperties = properties.get(material);\n\n      if (_clippingEnabled) {\n        if (_localClippingEnabled || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          _clipping.setState(material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache);\n        }\n      }\n\n      if (material.needsUpdate === false) {\n        if (materialProperties.program === undefined) {\n          material.needsUpdate = true;\n        } else if (material.fog && materialProperties.fog !== fog) {\n          material.needsUpdate = true;\n        } else if (material.lights && materialProperties.lightsHash !== _lights.hash) {\n          material.needsUpdate = true;\n        } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection)) {\n          material.needsUpdate = true;\n        }\n      }\n\n      if (material.needsUpdate) {\n        initMaterial(material, fog, object);\n        material.needsUpdate = false;\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var program = materialProperties.program,\n          p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.shader.uniforms;\n\n      if (program.id !== _currentProgram) {\n        _gl.useProgram(program.program);\n\n        _currentProgram = program.id;\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || camera !== _currentCamera) {\n        p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        } // Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\n        if (_currentCamera !== (_currentArrayCamera || camera)) {\n          _currentCamera = _currentArrayCamera || camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning) {\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n        }\n      } // skinning uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone texture must go before other textures\n      // not sure why, but otherwise weird things happen\n\n\n      if (material.skinning) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          var bones = skeleton.bones;\n\n          if (capabilities.floatVertexTextures) {\n            if (skeleton.boneTexture === undefined) {\n              // layout (1 matrix = 4 pixels)\n              //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n              //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n              //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n              //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n              //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n              var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n              size = _Math.nextPowerOfTwo(Math.ceil(size));\n              size = Math.max(size, 4);\n              var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n              boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n              var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n              skeleton.boneMatrices = boneMatrices;\n              skeleton.boneTexture = boneTexture;\n              skeleton.boneTextureSize = size;\n            }\n\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture);\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (refreshMaterial) {\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n        p_uniforms.setValue(_gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint);\n\n        if (material.lights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          refreshUniformsFog(m_uniforms, fog);\n        }\n\n        if (material.isMeshBasicMaterial || material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isMeshNormalMaterial || material.isMeshDepthMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n        } // refresh single material specific uniforms\n\n\n        if (material.isLineBasicMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n        } else if (material.isLineDashedMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n          refreshUniformsDash(m_uniforms, material);\n        } else if (material.isPointsMaterial) {\n          refreshUniformsPoints(m_uniforms, material);\n        } else if (material.isMeshLambertMaterial) {\n          refreshUniformsLambert(m_uniforms, material);\n        } else if (material.isMeshToonMaterial) {\n          refreshUniformsToon(m_uniforms, material);\n        } else if (material.isMeshPhongMaterial) {\n          refreshUniformsPhong(m_uniforms, material);\n        } else if (material.isMeshPhysicalMaterial) {\n          refreshUniformsPhysical(m_uniforms, material);\n        } else if (material.isMeshStandardMaterial) {\n          refreshUniformsStandard(m_uniforms, material);\n        } else if (material.isMeshDepthMaterial) {\n          if (material.displacementMap) {\n            m_uniforms.displacementMap.value = material.displacementMap;\n            m_uniforms.displacementScale.value = material.displacementScale;\n            m_uniforms.displacementBias.value = material.displacementBias;\n          }\n        } else if (material.isMeshNormalMaterial) {\n          refreshUniformsNormal(m_uniforms, material);\n        } // RectAreaLight Texture\n        // TODO (mrdoob): Find a nicer implementation\n\n\n        if (m_uniforms.ltcMat !== undefined) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n        if (m_uniforms.ltcMag !== undefined) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n      } // common matrices\n\n\n      p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n      p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n      return program;\n    } // Uniforms (refresh uniforms objects)\n\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n      uniforms.diffuse.value = material.color;\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      uniforms.map.value = material.map;\n      uniforms.specularMap.value = material.specularMap;\n      uniforms.alphaMap.value = material.alphaMap;\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. normal map\n      // 4. bump map\n      // 5. alpha map\n      // 6. emissive map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        var offset = uvScaleMap.offset;\n        var repeat = uvScaleMap.repeat;\n        uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n      }\n\n      uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n      //  WebGLRenderTargetCube will be flipped for backwards compatibility\n      //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n      // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n      uniforms.flipEnvMap.value = !(material.envMap && material.envMap.isCubeTexture) ? 1 : -1;\n      uniforms.reflectivity.value = material.reflectivity;\n      uniforms.refractionRatio.value = material.refractionRatio;\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * _pixelRatio;\n      uniforms.scale.value = _height * 0.5;\n      uniforms.map.value = material.map;\n\n      if (material.map !== null) {\n        var offset = material.map.offset;\n        var repeat = material.map.repeat;\n        uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n      }\n    }\n\n    function refreshUniformsFog(uniforms, fog) {\n      uniforms.fogColor.value = fog.color;\n\n      if (fog.isFog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog.isFogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value = material.specular;\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsToon(uniforms, material) {\n      refreshUniformsPhong(uniforms, material);\n\n      if (material.gradientMap) {\n        uniforms.gradientMap.value = material.gradientMap;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      if (material.envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material) {\n      uniforms.clearCoat.value = material.clearCoat;\n      uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n      refreshUniformsStandard(uniforms, material);\n    }\n\n    function refreshUniformsNormal(uniforms, material) {\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.rectAreaLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    } // Lighting\n\n\n    function setupShadows(lights) {\n      var lightShadowsLength = 0;\n\n      for (var i = 0, l = lights.length; i < l; i++) {\n        var light = lights[i];\n\n        if (light.castShadow) {\n          _lights.shadows[lightShadowsLength] = light;\n          lightShadowsLength++;\n        }\n      }\n\n      _lights.shadows.length = lightShadowsLength;\n    }\n\n    function setupLights(lights, camera) {\n      var l,\n          ll,\n          light,\n          shadow,\n          r = 0,\n          g = 0,\n          b = 0,\n          color,\n          intensity,\n          distance,\n          shadowMap,\n          viewMatrix = camera.matrixWorldInverse,\n          directionalLength = 0,\n          pointLength = 0,\n          spotLength = 0,\n          rectAreaLength = 0,\n          hemiLength = 0;\n\n      for (l = 0, ll = lights.length; l < ll; l++) {\n        light = lights[l];\n        color = light.color;\n        intensity = light.intensity;\n        distance = light.distance;\n        shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light.isAmbientLight) {\n          r += color.r * intensity;\n          g += color.g * intensity;\n          b += color.b * intensity;\n        } else if (light.isDirectionalLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n          _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n          uniforms.direction.sub(_vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          _lights.directionalShadowMap[directionalLength] = shadowMap;\n          _lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          _lights.directional[directionalLength] = uniforms;\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.distance = distance;\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n          _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n          uniforms.direction.sub(_vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.coneCos = Math.cos(light.angle);\n          uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          _lights.spotShadowMap[spotLength] = shadowMap;\n          _lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n          _lights.spot[spotLength] = uniforms;\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var uniforms = lightCache.get(light); // (a) intensity controls irradiance of entire light\n\n          uniforms.color.copy(color).multiplyScalar(intensity / (light.width * light.height)); // (b) intensity controls the radiance per light area\n          // uniforms.color.copy( color ).multiplyScalar( intensity );\n\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n          _matrix42.identity();\n\n          _matrix4.copy(light.matrixWorld);\n\n          _matrix4.premultiply(viewMatrix);\n\n          _matrix42.extractRotation(_matrix4);\n\n          uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n          uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n          uniforms.halfWidth.applyMatrix4(_matrix42);\n          uniforms.halfHeight.applyMatrix4(_matrix42); // TODO (abelnation): RectAreaLight distance?\n          // uniforms.distance = distance;\n\n          _lights.rectArea[rectAreaLength] = uniforms;\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.distance = light.distance;\n          uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          _lights.pointShadowMap[pointLength] = shadowMap;\n          _lights.pointShadowMatrix[pointLength] = light.shadow.matrix;\n          _lights.point[pointLength] = uniforms;\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var uniforms = lightCache.get(light);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.direction.normalize();\n          uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n          uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n          _lights.hemi[hemiLength] = uniforms;\n          hemiLength++;\n        }\n      }\n\n      _lights.ambient[0] = r;\n      _lights.ambient[1] = g;\n      _lights.ambient[2] = b;\n      _lights.directional.length = directionalLength;\n      _lights.spot.length = spotLength;\n      _lights.rectArea.length = rectAreaLength;\n      _lights.point.length = pointLength;\n      _lights.hemi.length = hemiLength; // TODO (sam-g-steel) why aren't we using join\n\n      _lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + _lights.shadows.length;\n    } // GL state setting\n\n\n    this.setFaceCulling = function (cullFace, frontFaceDirection) {\n      state.setCullFace(cullFace);\n      state.setFlipSided(frontFaceDirection === FrontFaceDirectionCW);\n    }; // Textures\n\n\n    function allocTextureUnit() {\n      var textureUnit = _usedTextureUnits;\n\n      if (textureUnit >= capabilities.maxTextures) {\n        console.warn('THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n      }\n\n      _usedTextureUnits += 1;\n      return textureUnit;\n    }\n\n    this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D;\n\n    this.setTexture2D = function () {\n      var warned = false; // backwards compatibility: peel texture.texture\n\n      return function setTexture2D(texture, slot) {\n        if (texture && texture.isWebGLRenderTarget) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTexture = function () {\n      var warned = false;\n      return function setTexture(texture, slot) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n          warned = true;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTextureCube = function () {\n      var warned = false;\n      return function setTextureCube(texture, slot) {\n        // backwards compatibility: peel texture.texture\n        if (texture && texture.isWebGLRenderTargetCube) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n        // TODO: unify these code paths\n\n\n        if (texture && texture.isCubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n          // CompressedTexture can have Array in image :/\n          // this function alone should take care of cube textures\n          textures.setTextureCube(texture, slot);\n        } else {\n          // assumed: texture property of THREE.WebGLRenderTargetCube\n          textures.setTextureCubeDynamic(texture, slot);\n        }\n      };\n    }();\n\n    this.getRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget) {\n      _currentRenderTarget = renderTarget;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n      var framebuffer;\n\n      if (renderTarget) {\n        var renderTargetProperties = properties.get(renderTarget);\n\n        if (isCube) {\n          framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n        } else {\n          framebuffer = renderTargetProperties.__webglFramebuffer;\n        }\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n\n        _currentViewport.copy(renderTarget.viewport);\n      } else {\n        framebuffer = null;\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n        _currentScissorTest = _scissorTest;\n\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n      }\n\n      if (_currentFramebuffer !== framebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        _currentFramebuffer = framebuffer;\n      }\n\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n      state.viewport(_currentViewport);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n      }\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (framebuffer) {\n        var restore = false;\n\n        if (framebuffer !== _currentFramebuffer) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n          restore = true;\n        }\n\n        try {\n          var texture = renderTarget.texture;\n          var textureFormat = texture.format;\n          var textureType = texture.type;\n\n          if (textureFormat !== RGBAFormat && paramThreeToGL(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          if (textureType !== UnsignedByteType && paramThreeToGL(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // IE11, Edge and Chrome Mac < 52 (#9513)\n          !(textureType === FloatType && (extensions.get('OES_texture_float') || extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n          !(textureType === HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, paramThreeToGL(textureFormat), paramThreeToGL(textureType), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          if (restore) {\n            _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n          }\n        }\n      }\n    }; // Map three.js constants to WebGL constants\n\n\n    function paramThreeToGL(p) {\n      var extension;\n      if (p === RepeatWrapping) return _gl.REPEAT;\n      if (p === ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n      if (p === MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n      if (p === NearestFilter) return _gl.NEAREST;\n      if (p === NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n      if (p === NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n      if (p === LinearFilter) return _gl.LINEAR;\n      if (p === LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n      if (p === LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n      if (p === UnsignedByteType) return _gl.UNSIGNED_BYTE;\n      if (p === UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n      if (p === UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n      if (p === UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n      if (p === ByteType) return _gl.BYTE;\n      if (p === ShortType) return _gl.SHORT;\n      if (p === UnsignedShortType) return _gl.UNSIGNED_SHORT;\n      if (p === IntType) return _gl.INT;\n      if (p === UnsignedIntType) return _gl.UNSIGNED_INT;\n      if (p === FloatType) return _gl.FLOAT;\n\n      if (p === HalfFloatType) {\n        extension = extensions.get('OES_texture_half_float');\n        if (extension !== null) return extension.HALF_FLOAT_OES;\n      }\n\n      if (p === AlphaFormat) return _gl.ALPHA;\n      if (p === RGBFormat) return _gl.RGB;\n      if (p === RGBAFormat) return _gl.RGBA;\n      if (p === LuminanceFormat) return _gl.LUMINANCE;\n      if (p === LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n      if (p === DepthFormat) return _gl.DEPTH_COMPONENT;\n      if (p === DepthStencilFormat) return _gl.DEPTH_STENCIL;\n      if (p === AddEquation) return _gl.FUNC_ADD;\n      if (p === SubtractEquation) return _gl.FUNC_SUBTRACT;\n      if (p === ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n      if (p === ZeroFactor) return _gl.ZERO;\n      if (p === OneFactor) return _gl.ONE;\n      if (p === SrcColorFactor) return _gl.SRC_COLOR;\n      if (p === OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n      if (p === SrcAlphaFactor) return _gl.SRC_ALPHA;\n      if (p === OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n      if (p === DstAlphaFactor) return _gl.DST_ALPHA;\n      if (p === OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n      if (p === DstColorFactor) return _gl.DST_COLOR;\n      if (p === OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n      if (p === SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n\n      if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        }\n      }\n\n      if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n        if (extension !== null) {\n          if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n          if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n          if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n          if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        }\n      }\n\n      if (p === RGB_ETC1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\n        if (extension !== null) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      }\n\n      if (p === MinEquation || p === MaxEquation) {\n        extension = extensions.get('EXT_blend_minmax');\n\n        if (extension !== null) {\n          if (p === MinEquation) return extension.MIN_EXT;\n          if (p === MaxEquation) return extension.MAX_EXT;\n        }\n      }\n\n      if (p === UnsignedInt248Type) {\n        extension = extensions.get('WEBGL_depth_texture');\n        if (extension !== null) return extension.UNSIGNED_INT_24_8_WEBGL;\n      }\n\n      return 0;\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function FogExp2(color, density) {\n    this.name = '';\n    this.color = new Color(color);\n    this.density = density !== undefined ? density : 0.00025;\n  }\n\n  FogExp2.prototype.isFogExp2 = true;\n\n  FogExp2.prototype.clone = function () {\n    return new FogExp2(this.color.getHex(), this.density);\n  };\n\n  FogExp2.prototype.toJSON = function (meta) {\n    return {\n      type: 'FogExp2',\n      color: this.color.getHex(),\n      density: this.density\n    };\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Fog(color, near, far) {\n    this.name = '';\n    this.color = new Color(color);\n    this.near = near !== undefined ? near : 1;\n    this.far = far !== undefined ? far : 1000;\n  }\n\n  Fog.prototype.isFog = true;\n\n  Fog.prototype.clone = function () {\n    return new Fog(this.color.getHex(), this.near, this.far);\n  };\n\n  Fog.prototype.toJSON = function (meta) {\n    return {\n      type: 'Fog',\n      color: this.color.getHex(),\n      near: this.near,\n      far: this.far\n    };\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Scene() {\n    Object3D.call(this);\n    this.type = 'Scene';\n    this.background = null;\n    this.fog = null;\n    this.overrideMaterial = null;\n    this.autoUpdate = true; // checked by the renderer\n  }\n\n  Scene.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Scene,\n    copy: function (source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      if (source.background !== null) this.background = source.background.clone();\n      if (source.fog !== null) this.fog = source.fog.clone();\n      if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n      this.autoUpdate = source.autoUpdate;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      if (this.background !== null) data.object.background = this.background.toJSON(meta);\n      if (this.fog !== null) data.object.fog = this.fog.toJSON();\n      return data;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function LensFlare(texture, size, distance, blending, color) {\n    Object3D.call(this);\n    this.lensFlares = [];\n    this.positionScreen = new Vector3();\n    this.customUpdateCallback = undefined;\n\n    if (texture !== undefined) {\n      this.add(texture, size, distance, blending, color);\n    }\n  }\n\n  LensFlare.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: LensFlare,\n    isLensFlare: true,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.positionScreen.copy(source.positionScreen);\n      this.customUpdateCallback = source.customUpdateCallback;\n\n      for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n        this.lensFlares.push(source.lensFlares[i]);\n      }\n\n      return this;\n    },\n    add: function (texture, size, distance, blending, color, opacity) {\n      if (size === undefined) size = -1;\n      if (distance === undefined) distance = 0;\n      if (opacity === undefined) opacity = 1;\n      if (color === undefined) color = new Color(0xffffff);\n      if (blending === undefined) blending = NormalBlending;\n      distance = Math.min(distance, Math.max(0, distance));\n      this.lensFlares.push({\n        texture: texture,\n        // THREE.Texture\n        size: size,\n        // size in pixels (-1 = use texture.width)\n        distance: distance,\n        // distance (0-1) from light source (0=at light source)\n        x: 0,\n        y: 0,\n        z: 0,\n        // screen position (-1 => 1) z = 0 is in front z = 1 is back\n        scale: 1,\n        // scale\n        rotation: 0,\n        // rotation\n        opacity: opacity,\n        // opacity\n        color: color,\n        // color\n        blending: blending // blending\n\n      });\n    },\n\n    /*\n     * Update lens flares update positions on all flares based on the screen position\n     * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n     */\n    updateLensFlares: function () {\n      var f,\n          fl = this.lensFlares.length;\n      var flare;\n      var vecX = -this.positionScreen.x * 2;\n      var vecY = -this.positionScreen.y * 2;\n\n      for (f = 0; f < fl; f++) {\n        flare = this.lensFlares[f];\n        flare.x = this.positionScreen.x + vecX * flare.distance;\n        flare.y = this.positionScreen.y + vecY * flare.distance;\n        flare.wantedRotation = flare.x * Math.PI * 0.25;\n        flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *\tuvOffset: new THREE.Vector2(),\n   *\tuvScale: new THREE.Vector2()\n   * }\n   */\n\n  function SpriteMaterial(parameters) {\n    Material.call(this);\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.rotation = 0;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  SpriteMaterial.prototype = Object.create(Material.prototype);\n  SpriteMaterial.prototype.constructor = SpriteMaterial;\n  SpriteMaterial.prototype.isSpriteMaterial = true;\n\n  SpriteMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.rotation = source.rotation;\n    return this;\n  };\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Sprite(material) {\n    Object3D.call(this);\n    this.type = 'Sprite';\n    this.material = material !== undefined ? material : new SpriteMaterial();\n  }\n\n  Sprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Sprite,\n    isSprite: true,\n    raycast: function () {\n      var intersectPoint = new Vector3();\n      var worldPosition = new Vector3();\n      var worldScale = new Vector3();\n      return function raycast(raycaster, intersects) {\n        worldPosition.setFromMatrixPosition(this.matrixWorld);\n        raycaster.ray.closestPointToPoint(worldPosition, intersectPoint);\n        worldScale.setFromMatrixScale(this.matrixWorld);\n        var guessSizeSq = worldScale.x * worldScale.y / 4;\n        if (worldPosition.distanceToSquared(intersectPoint) > guessSizeSq) return;\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          point: intersectPoint.clone(),\n          face: null,\n          object: this\n        });\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.material).copy(this);\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LOD() {\n    Object3D.call(this);\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      }\n    });\n  }\n\n  LOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: LOD,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source, false);\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      return this;\n    },\n    addLevel: function (object, distance) {\n      if (distance === undefined) distance = 0;\n      distance = Math.abs(distance);\n      var levels = this.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n    },\n    getObjectForDistance: function (distance) {\n      var levels = this.levels;\n\n      for (var i = 1, l = levels.length; i < l; i++) {\n        if (distance < levels[i].distance) {\n          break;\n        }\n      }\n\n      return levels[i - 1].object;\n    },\n    raycast: function () {\n      var matrixPosition = new Vector3();\n      return function raycast(raycaster, intersects) {\n        matrixPosition.setFromMatrixPosition(this.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      };\n    }(),\n    update: function () {\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function update(camera) {\n        var levels = this.levels;\n\n        if (levels.length > 1) {\n          v1.setFromMatrixPosition(camera.matrixWorld);\n          v2.setFromMatrixPosition(this.matrixWorld);\n          var distance = v1.distanceTo(v2);\n          levels[0].object.visible = true;\n\n          for (var i = 1, l = levels.length; i < l; i++) {\n            if (distance >= levels[i].distance) {\n              levels[i - 1].object.visible = false;\n              levels[i].object.visible = true;\n            } else {\n              break;\n            }\n          }\n\n          for (; i < l; i++) {\n            levels[i].object.visible = false;\n          }\n        }\n      };\n    }(),\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author michael guerrero / http://realitymeltdown.com\n   * @author ikerr / http://verold.com\n   */\n\n  function Skeleton(bones, boneInverses) {\n    // copy the bone array\n    bones = bones || [];\n    this.bones = bones.slice(0);\n    this.boneMatrices = new Float32Array(this.bones.length * 16); // use the supplied bone inverses or calculate the inverses\n\n    if (boneInverses === undefined) {\n      this.calculateInverses();\n    } else {\n      if (this.bones.length === boneInverses.length) {\n        this.boneInverses = boneInverses.slice(0);\n      } else {\n        console.warn('THREE.Skeleton boneInverses is the wrong length.');\n        this.boneInverses = [];\n\n        for (var i = 0, il = this.bones.length; i < il; i++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n\n  Object.assign(Skeleton.prototype, {\n    calculateInverses: function () {\n      this.boneInverses = [];\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var inverse = new Matrix4();\n\n        if (this.bones[i]) {\n          inverse.getInverse(this.bones[i].matrixWorld);\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    },\n    pose: function () {\n      var bone, i, il; // recover the bind-time world matrices\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          bone.matrixWorld.getInverse(this.boneInverses[i]);\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          if (bone.parent && bone.parent.isBone) {\n            bone.matrix.getInverse(bone.parent.matrixWorld);\n            bone.matrix.multiply(bone.matrixWorld);\n          } else {\n            bone.matrix.copy(bone.matrixWorld);\n          }\n\n          bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n        }\n      }\n    },\n    update: function () {\n      var offsetMatrix = new Matrix4();\n      var identityMatrix = new Matrix4();\n      return function update() {\n        var bones = this.bones;\n        var boneInverses = this.boneInverses;\n        var boneMatrices = this.boneMatrices;\n        var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n        for (var i = 0, il = bones.length; i < il; i++) {\n          // compute the offset between the current and the original transform\n          var matrix = bones[i] ? bones[i].matrixWorld : identityMatrix;\n          offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n          offsetMatrix.toArray(boneMatrices, i * 16);\n        }\n\n        if (boneTexture !== undefined) {\n          boneTexture.needsUpdate = true;\n        }\n      };\n    }(),\n    clone: function () {\n      return new Skeleton(this.bones, this.boneInverses);\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function Bone() {\n    Object3D.call(this);\n    this.type = 'Bone';\n  }\n\n  Bone.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Bone,\n    isBone: true\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function SkinnedMesh(geometry, material) {\n    Mesh.call(this, geometry, material);\n    this.type = 'SkinnedMesh';\n    this.bindMode = 'attached';\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n    var bones = this.initBones();\n    var skeleton = new Skeleton(bones);\n    this.bind(skeleton, this.matrixWorld);\n    this.normalizeSkinWeights();\n  }\n\n  SkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: SkinnedMesh,\n    isSkinnedMesh: true,\n    initBones: function () {\n      var bones = [],\n          bone,\n          gbone;\n      var i, il;\n\n      if (this.geometry && this.geometry.bones !== undefined) {\n        // first, create array of 'Bone' objects from geometry data\n        for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n          gbone = this.geometry.bones[i]; // create new 'Bone' object\n\n          bone = new Bone();\n          bones.push(bone); // apply values\n\n          bone.name = gbone.name;\n          bone.position.fromArray(gbone.pos);\n          bone.quaternion.fromArray(gbone.rotq);\n          if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n        } // second, create bone hierarchy\n\n\n        for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n          gbone = this.geometry.bones[i];\n\n          if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n            // subsequent bones in the hierarchy\n            bones[gbone.parent].add(bones[i]);\n          } else {\n            // topmost bone, immediate child of the skinned mesh\n            this.add(bones[i]);\n          }\n        }\n      } // now the bones are part of the scene graph and children of the skinned mesh.\n      // let's update the corresponding matrices\n\n\n      this.updateMatrixWorld(true);\n      return bones;\n    },\n    bind: function (skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.getInverse(bindMatrix);\n    },\n    pose: function () {\n      this.skeleton.pose();\n    },\n    normalizeSkinWeights: function () {\n      var scale, i;\n\n      if (this.geometry && this.geometry.isGeometry) {\n        for (i = 0; i < this.geometry.skinWeights.length; i++) {\n          var sw = this.geometry.skinWeights[i];\n          scale = 1.0 / sw.lengthManhattan();\n\n          if (scale !== Infinity) {\n            sw.multiplyScalar(scale);\n          } else {\n            sw.set(1, 0, 0, 0); // do something reasonable\n          }\n        }\n      } else if (this.geometry && this.geometry.isBufferGeometry) {\n        var vec = new Vector4();\n        var skinWeight = this.geometry.attributes.skinWeight;\n\n        for (i = 0; i < skinWeight.count; i++) {\n          vec.x = skinWeight.getX(i);\n          vec.y = skinWeight.getY(i);\n          vec.z = skinWeight.getZ(i);\n          vec.w = skinWeight.getW(i);\n          scale = 1.0 / vec.lengthManhattan();\n\n          if (scale !== Infinity) {\n            vec.multiplyScalar(scale);\n          } else {\n            vec.set(1, 0, 0, 0); // do something reasonable\n          }\n\n          skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n        }\n      }\n    },\n    updateMatrixWorld: function (force) {\n      Mesh.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.bindMode === 'attached') {\n        this.bindMatrixInverse.getInverse(this.matrixWorld);\n      } else if (this.bindMode === 'detached') {\n        this.bindMatrixInverse.getInverse(this.bindMatrix);\n      } else {\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *  linecap: \"round\",\n   *  linejoin: \"round\"\n   * }\n   */\n\n  function LineBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  LineBasicMaterial.prototype = Object.create(Material.prototype);\n  LineBasicMaterial.prototype.constructor = LineBasicMaterial;\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n  LineBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Line(geometry, material, mode) {\n    if (mode === 1) {\n      console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n      return new LineSegments(geometry, material);\n    }\n\n    Object3D.call(this);\n    this.type = 'Line';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new LineBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Line.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Line,\n    isLine: true,\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      return function raycast(raycaster, intersects) {\n        var precision = raycaster.linePrecision;\n        var precisionSq = precision * precision;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var vStart = new Vector3();\n        var vEnd = new Vector3();\n        var interSegment = new Vector3();\n        var interRay = new Vector3();\n        var step = this && this.isLineSegments ? 2 : 1;\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, l = indices.length - 1; i < l; i += step) {\n              var a = indices[i];\n              var b = indices[i + 1];\n              vStart.fromArray(positions, a * 3);\n              vEnd.fromArray(positions, b * 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > precisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n              vStart.fromArray(positions, 3 * i);\n              vEnd.fromArray(positions, 3 * i + 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > precisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var nbVertices = vertices.length;\n\n          for (var i = 0; i < nbVertices - 1; i += step) {\n            var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LineSegments(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineSegments';\n  }\n\n  LineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineSegments,\n    isLineSegments: true\n  });\n  /**\n   * @author mgreter / http://github.com/mgreter\n   */\n\n  function LineLoop(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineLoop';\n  }\n\n  LineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineLoop,\n    isLineLoop: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  size: <float>,\n   *  sizeAttenuation: <bool>\n   * }\n   */\n\n  function PointsMaterial(parameters) {\n    Material.call(this);\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  PointsMaterial.prototype = Object.create(Material.prototype);\n  PointsMaterial.prototype.constructor = PointsMaterial;\n  PointsMaterial.prototype.isPointsMaterial = true;\n\n  PointsMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Points(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Points';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new PointsMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Points.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Points,\n    isPoints: true,\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      return function raycast(raycaster, intersects) {\n        var object = this;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld;\n        var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        sphere.radius += threshold;\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localThresholdSq = localThreshold * localThreshold;\n        var position = new Vector3();\n\n        function testPoint(point, index) {\n          var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n          if (rayPointDistanceSq < localThresholdSq) {\n            var intersectPoint = ray.closestPointToPoint(point);\n            intersectPoint.applyMatrix4(matrixWorld);\n            var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n            if (distance < raycaster.near || distance > raycaster.far) return;\n            intersects.push({\n              distance: distance,\n              distanceToRay: Math.sqrt(rayPointDistanceSq),\n              point: intersectPoint.clone(),\n              index: index,\n              face: null,\n              object: object\n            });\n          }\n        }\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, il = indices.length; i < il; i++) {\n              var a = indices[i];\n              position.fromArray(positions, a * 3);\n              testPoint(position, a);\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3; i < l; i++) {\n              position.fromArray(positions, i * 3);\n              testPoint(position, i);\n            }\n          }\n        } else {\n          var vertices = geometry.vertices;\n\n          for (var i = 0, l = vertices.length; i < l; i++) {\n            testPoint(vertices[i], i);\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Group() {\n    Object3D.call(this);\n    this.type = 'Group';\n  }\n\n  Group.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Group\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.generateMipmaps = false;\n    var scope = this;\n\n    function update() {\n      requestAnimationFrame(update);\n\n      if (video.readyState >= video.HAVE_CURRENT_DATA) {\n        scope.needsUpdate = true;\n      }\n    }\n\n    update();\n  }\n\n  VideoTexture.prototype = Object.create(Texture.prototype);\n  VideoTexture.prototype.constructor = VideoTexture;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n\n  CompressedTexture.prototype = Object.create(Texture.prototype);\n  CompressedTexture.prototype.constructor = CompressedTexture;\n  CompressedTexture.prototype.isCompressedTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  }\n\n  CanvasTexture.prototype = Object.create(Texture.prototype);\n  CanvasTexture.prototype.constructor = CanvasTexture;\n  /**\n   * @author Matt DesLauriers / @mattdesl\n   * @author atix / arthursilber.de\n   */\n\n  function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n\n    if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n    if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  }\n\n  DepthTexture.prototype = Object.create(Texture.prototype);\n  DepthTexture.prototype.constructor = DepthTexture;\n  DepthTexture.prototype.isDepthTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  function WireframeGeometry(geometry) {\n    BufferGeometry.call(this);\n    this.type = 'WireframeGeometry'; // buffer\n\n    var vertices = []; // helper variables\n\n    var i, j, l, o, ol;\n    var edge = [0, 0],\n        edges = {},\n        e,\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c'];\n    var vertex; // different logic for Geometry and BufferGeometry\n\n    if (geometry && geometry.isGeometry) {\n      // create a data structure that contains all edges without duplicates\n      var faces = geometry.faces;\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (j = 0; j < 3; j++) {\n          edge1 = face[keys[j]];\n          edge2 = face[keys[(j + 1) % 3]];\n          edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n          edge[1] = Math.max(edge1, edge2);\n          key = edge[0] + ',' + edge[1];\n\n          if (edges[key] === undefined) {\n            edges[key] = {\n              index1: edge[0],\n              index2: edge[1]\n            };\n          }\n        }\n      } // generate vertices\n\n\n      for (key in edges) {\n        e = edges[key];\n        vertex = geometry.vertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = geometry.vertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } else if (geometry && geometry.isBufferGeometry) {\n      var position, indices, groups;\n      var group, start, count;\n      var index1, index2;\n      vertex = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n        position = geometry.attributes.position;\n        indices = geometry.index;\n        groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        } // create a data structure that contains all eges without duplicates\n\n\n        for (o = 0, ol = groups.length; o < ol; ++o) {\n          group = groups[o];\n          start = group.start;\n          count = group.count;\n\n          for (i = start, l = start + count; i < l; i += 3) {\n            for (j = 0; j < 3; j++) {\n              edge1 = indices.getX(i + j);\n              edge2 = indices.getX(i + (j + 1) % 3);\n              edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n              edge[1] = Math.max(edge1, edge2);\n              key = edge[0] + ',' + edge[1];\n\n              if (edges[key] === undefined) {\n                edges[key] = {\n                  index1: edge[0],\n                  index2: edge[1]\n                };\n              }\n            }\n          }\n        } // generate vertices\n\n\n        for (key in edges) {\n          e = edges[key];\n          vertex.fromBufferAttribute(position, e.index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          vertex.fromBufferAttribute(position, e.index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      } else {\n        // non-indexed BufferGeometry\n        position = geometry.attributes.position;\n\n        for (i = 0, l = position.count / 3; i < l; i++) {\n          for (j = 0; j < 3; j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n            index1 = 3 * i + j;\n            vertex.fromBufferAttribute(position, index1);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n            index2 = 3 * i + (j + 1) % 3;\n            vertex.fromBufferAttribute(position, index2);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n          }\n        }\n      }\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  WireframeGeometry.prototype = Object.create(BufferGeometry.prototype);\n  WireframeGeometry.prototype.constructor = WireframeGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Parametric Surfaces Geometry\n   * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n   */\n  // ParametricGeometry\n\n  function ParametricGeometry(func, slices, stacks) {\n    Geometry.call(this);\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n    this.mergeVertices();\n  }\n\n  ParametricGeometry.prototype = Object.create(Geometry.prototype);\n  ParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry\n\n  function ParametricBufferGeometry(func, slices, stacks) {\n    BufferGeometry.call(this);\n    this.type = 'ParametricBufferGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    }; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var EPS = 0.00001;\n    var normal = new Vector3();\n    var p0 = new Vector3(),\n        p1 = new Vector3();\n    var pu = new Vector3(),\n        pv = new Vector3();\n    var i, j; // generate vertices, normals and uvs\n\n    var sliceCount = slices + 1;\n\n    for (i = 0; i <= stacks; i++) {\n      var v = i / stacks;\n\n      for (j = 0; j <= slices; j++) {\n        var u = j / slices; // vertex\n\n        p0 = func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z); // normal\n        // approximate tangent vectors via finite differences\n\n        if (u - EPS >= 0) {\n          p1 = func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          p1 = func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n\n        if (v - EPS >= 0) {\n          p1 = func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          p1 = func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        } // cross product of tangent vectors returns surface normal\n\n\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, v);\n      }\n    } // generate indices\n\n\n    for (i = 0; i < stacks; i++) {\n      for (j = 0; j < slices; j++) {\n        var a = i * sliceCount + j;\n        var b = i * sliceCount + j + 1;\n        var c = (i + 1) * sliceCount + j + 1;\n        var d = (i + 1) * sliceCount + j; // faces one and two\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  ParametricBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n  /**\n   * @author clockworkgeek / https://github.com/clockworkgeek\n   * @author timothypratley / https://github.com/timothypratley\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PolyhedronGeometry\n\n  function PolyhedronGeometry(vertices, indices, radius, detail) {\n    Geometry.call(this);\n    this.type = 'PolyhedronGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n    this.mergeVertices();\n  }\n\n  PolyhedronGeometry.prototype = Object.create(Geometry.prototype);\n  PolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry\n\n  function PolyhedronBufferGeometry(vertices, indices, radius, detail) {\n    BufferGeometry.call(this);\n    this.type = 'PolyhedronBufferGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    radius = radius || 1;\n    detail = detail || 0; // default buffer data\n\n    var vertexBuffer = [];\n    var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n    subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n    appplyRadius(radius); // finally, create the uv data\n\n    generateUVs(); // build non-indexed geometry\n\n    this.addAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n    if (detail === 0) {\n      this.computeVertexNormals(); // flat normals\n    } else {\n      this.normalizeNormals(); // smooth normals\n    } // helper functions\n\n\n    function subdivide(detail) {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n      for (var i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n\n    function subdivideFace(a, b, c, detail) {\n      var cols = Math.pow(2, detail); // we use this multidimensional array as a data structure for creating the subdivision\n\n      var v = [];\n      var i, j; // construct all of the vertices for this subdivision\n\n      for (i = 0; i <= cols; i++) {\n        v[i] = [];\n        var aj = a.clone().lerp(c, i / cols);\n        var bj = b.clone().lerp(c, i / cols);\n        var rows = cols - i;\n\n        for (j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      } // construct all of the faces\n\n\n      for (i = 0; i < cols; i++) {\n        for (j = 0; j < 2 * (cols - i) - 1; j++) {\n          var k = Math.floor(j / 2);\n\n          if (j % 2 === 0) {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k]);\n            pushVertex(v[i][k]);\n          } else {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k + 1]);\n            pushVertex(v[i + 1][k]);\n          }\n        }\n      }\n    }\n\n    function appplyRadius(radius) {\n      var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n\n    function generateUVs() {\n      var vertex = new Vector3();\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        var v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n\n      correctUVs();\n      correctSeam();\n    }\n\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n      for (var i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n        var x0 = uvBuffer[i + 0];\n        var x1 = uvBuffer[i + 2];\n        var x2 = uvBuffer[i + 4];\n        var max = Math.max(x0, x1, x2);\n        var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[i + 0] += 1;\n          if (x1 < 0.2) uvBuffer[i + 2] += 1;\n          if (x2 < 0.2) uvBuffer[i + 4] += 1;\n        }\n      }\n    }\n\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    function getVertexByIndex(index, vertex) {\n      var stride = index * 3;\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n\n    function correctUVs() {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3();\n      var centroid = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        var azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    } // Angle above the XZ plane.\n\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    }\n  }\n\n  PolyhedronBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TetrahedronGeometry\n\n  function TetrahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  TetrahedronGeometry.prototype = Object.create(Geometry.prototype);\n  TetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry\n\n  function TetrahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'TetrahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  TetrahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // OctahedronGeometry\n\n  function OctahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  OctahedronGeometry.prototype = Object.create(Geometry.prototype);\n  OctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry\n\n  function OctahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'OctahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  OctahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // IcosahedronGeometry\n\n  function IcosahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  IcosahedronGeometry.prototype = Object.create(Geometry.prototype);\n  IcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry\n\n  function IcosahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'IcosahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  IcosahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n  /**\n   * @author Abe Pazos / https://hamoid.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // DodecahedronGeometry\n\n  function DodecahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  DodecahedronGeometry.prototype = Object.create(Geometry.prototype);\n  DodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry\n\n  function DodecahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var r = 1 / t;\n    var vertices = [// (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'DodecahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  DodecahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n  /**\n   * @author oosmoxiecode / https://github.com/oosmoxiecode\n   * @author WestLangley / https://github.com/WestLangley\n   * @author zz85 / https://github.com/zz85\n   * @author miningold / https://github.com/miningold\n   * @author jonobr1 / https://github.com/jonobr1\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   */\n  // TubeGeometry\n\n  function TubeGeometry(path, tubularSegments, radius, radialSegments, closed, taper) {\n    Geometry.call(this);\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    if (taper !== undefined) console.warn('THREE.TubeGeometry: taper has been removed.');\n    var bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed); // expose internals\n\n    this.tangents = bufferGeometry.tangents;\n    this.normals = bufferGeometry.normals;\n    this.binormals = bufferGeometry.binormals; // create geometry\n\n    this.fromBufferGeometry(bufferGeometry);\n    this.mergeVertices();\n  }\n\n  TubeGeometry.prototype = Object.create(Geometry.prototype);\n  TubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry\n\n  function TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed) {\n    BufferGeometry.call(this);\n    this.type = 'TubeBufferGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    tubularSegments = tubularSegments || 64;\n    radius = radius || 1;\n    radialSegments = radialSegments || 8;\n    closed = closed || false;\n    var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals; // helper variables\n\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var uv = new Vector2();\n    var i, j; // buffer\n\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var indices = []; // create buffer data\n\n    generateBufferData(); // build geometry\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n    function generateBufferData() {\n      for (i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      } // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n      generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs(); // finally create faces\n\n      generateIndices();\n    }\n\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n      var P = path.getPointAt(i / tubularSegments); // retrieve corresponding normal and binormal\n\n      var N = frames.normals[i];\n      var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n      for (j = 0; j <= radialSegments; j++) {\n        var v = j / radialSegments * Math.PI * 2;\n        var sin = Math.sin(v);\n        var cos = -Math.cos(v); // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z); // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n\n    function generateIndices() {\n      for (j = 1; j <= tubularSegments; j++) {\n        for (i = 1; i <= radialSegments; i++) {\n          var a = (radialSegments + 1) * (j - 1) + (i - 1);\n          var b = (radialSegments + 1) * j + (i - 1);\n          var c = (radialSegments + 1) * j + i;\n          var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n\n    function generateUVs() {\n      for (i = 0; i <= tubularSegments; i++) {\n        for (j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n\n  TubeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * based on http://www.blackpawn.com/texts/pqtorus/\n   */\n  // TorusKnotGeometry\n\n  function TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n    Geometry.call(this);\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n    this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n    this.mergeVertices();\n  }\n\n  TorusKnotGeometry.prototype = Object.create(Geometry.prototype);\n  TorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry\n\n  function TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n    BufferGeometry.call(this);\n    this.type = 'TorusKnotBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    radius = radius || 100;\n    tube = tube || 40;\n    tubularSegments = Math.floor(tubularSegments) || 64;\n    radialSegments = Math.floor(radialSegments) || 8;\n    p = p || 2;\n    q = q || 3; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, j;\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var P1 = new Vector3();\n    var P2 = new Vector3();\n    var B = new Vector3();\n    var T = new Vector3();\n    var N = new Vector3(); // generate vertices, normals and uvs\n\n    for (i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n      var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        var v = j / radialSegments * Math.PI * 2;\n        var cx = -tube * Math.cos(v);\n        var cy = tube * Math.sin(v); // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        // indices\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      var cu = Math.cos(u);\n      var su = Math.sin(u);\n      var quOverP = q / p * u;\n      var cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n\n  TorusKnotBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TorusGeometry\n\n  function TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    Geometry.call(this);\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n    this.mergeVertices();\n  }\n\n  TorusGeometry.prototype = Object.create(Geometry.prototype);\n  TorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry\n\n  function TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    BufferGeometry.call(this);\n    this.type = 'TorusBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radius = radius || 100;\n    tube = tube || 40;\n    radialSegments = Math.floor(radialSegments) || 8;\n    tubularSegments = Math.floor(tubularSegments) || 6;\n    arc = arc || Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var center = new Vector3();\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= radialSegments; j++) {\n      for (i = 0; i <= tubularSegments; i++) {\n        var u = i / tubularSegments * arc;\n        var v = j / radialSegments * Math.PI * 2; // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= radialSegments; j++) {\n      for (i = 1; i <= tubularSegments; i++) {\n        // indices\n        var a = (tubularSegments + 1) * j + i - 1;\n        var b = (tubularSegments + 1) * (j - 1) + i - 1;\n        var c = (tubularSegments + 1) * (j - 1) + i;\n        var d = (tubularSegments + 1) * j + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  TorusBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  var ShapeUtils = {\n    // calculate area of the contour polygon\n    area: function (contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    },\n    triangulate: function () {\n      /**\n       * This code is a quick port of code written in C++ which was submitted to\n       * flipcode.com by John W. Ratcliff  // July 22, 2000\n       * See original code and more information here:\n       * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n       *\n       * ported to actionscript by Zevan Rosser\n       * www.actionsnippet.com\n       *\n       * ported to javascript by Joshua Koo\n       * http://www.lab4games.net/zz85/blog\n       *\n       */\n      function snip(contour, u, v, w, n, verts) {\n        var p;\n        var ax, ay, bx, by;\n        var cx, cy, px, py;\n        ax = contour[verts[u]].x;\n        ay = contour[verts[u]].y;\n        bx = contour[verts[v]].x;\n        by = contour[verts[v]].y;\n        cx = contour[verts[w]].x;\n        cy = contour[verts[w]].y;\n        if ((bx - ax) * (cy - ay) - (by - ay) * (cx - ax) <= 0) return false;\n        var aX, aY, bX, bY, cX, cY;\n        var apx, apy, bpx, bpy, cpx, cpy;\n        var cCROSSap, bCROSScp, aCROSSbp;\n        aX = cx - bx;\n        aY = cy - by;\n        bX = ax - cx;\n        bY = ay - cy;\n        cX = bx - ax;\n        cY = by - ay;\n\n        for (p = 0; p < n; p++) {\n          px = contour[verts[p]].x;\n          py = contour[verts[p]].y;\n          if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n          apx = px - ax;\n          apy = py - ay;\n          bpx = px - bx;\n          bpy = py - by;\n          cpx = px - cx;\n          cpy = py - cy; // see if p is inside triangle abc\n\n          aCROSSbp = aX * bpy - aY * bpx;\n          cCROSSap = cX * apy - cY * apx;\n          bCROSScp = bX * cpy - bY * cpx;\n          if (aCROSSbp >= -Number.EPSILON && bCROSScp >= -Number.EPSILON && cCROSSap >= -Number.EPSILON) return false;\n        }\n\n        return true;\n      } // takes in an contour array and returns\n\n\n      return function triangulate(contour, indices) {\n        var n = contour.length;\n        if (n < 3) return null;\n        var result = [],\n            verts = [],\n            vertIndices = [];\n        /* we want a counter-clockwise polygon in verts */\n\n        var u, v, w;\n\n        if (ShapeUtils.area(contour) > 0.0) {\n          for (v = 0; v < n; v++) verts[v] = v;\n        } else {\n          for (v = 0; v < n; v++) verts[v] = n - 1 - v;\n        }\n\n        var nv = n;\n        /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n        var count = 2 * nv;\n        /* error detection */\n\n        for (v = nv - 1; nv > 2;) {\n          /* if we loop, it is probably a non-simple polygon */\n          if (count-- <= 0) {\n            //** Triangulate: ERROR - probable bad polygon!\n            //throw ( \"Warning, unable to triangulate polygon!\" );\n            //return null;\n            // Sometimes warning is fine, especially polygons are triangulated in reverse.\n            console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');\n            if (indices) return vertIndices;\n            return result;\n          }\n          /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n          u = v;\n          if (nv <= u) u = 0;\n          /* previous */\n\n          v = u + 1;\n          if (nv <= v) v = 0;\n          /* new v    */\n\n          w = v + 1;\n          if (nv <= w) w = 0;\n          /* next     */\n\n          if (snip(contour, u, v, w, nv, verts)) {\n            var a, b, c, s, t;\n            /* true names of the vertices */\n\n            a = verts[u];\n            b = verts[v];\n            c = verts[w];\n            /* output Triangle */\n\n            result.push([contour[a], contour[b], contour[c]]);\n            vertIndices.push([verts[u], verts[v], verts[w]]);\n            /* remove v from the remaining polygon */\n\n            for (s = v, t = v + 1; t < nv; s++, t++) {\n              verts[s] = verts[t];\n            }\n\n            nv--;\n            /* reset error detection counter */\n\n            count = 2 * nv;\n          }\n        }\n\n        if (indices) return vertIndices;\n        return result;\n      };\n    }(),\n    triangulateShape: function (contour, holes) {\n      function removeDupEndPts(points) {\n        var l = points.length;\n\n        if (l > 2 && points[l - 1].equals(points[0])) {\n          points.pop();\n        }\n      }\n\n      removeDupEndPts(contour);\n      holes.forEach(removeDupEndPts);\n\n      function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n        // inOtherPt needs to be collinear to the inSegment\n        if (inSegPt1.x !== inSegPt2.x) {\n          if (inSegPt1.x < inSegPt2.x) {\n            return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n          } else {\n            return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n          }\n        } else {\n          if (inSegPt1.y < inSegPt2.y) {\n            return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n          } else {\n            return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n          }\n        }\n      }\n\n      function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n        var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n            seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n        var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n            seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n        var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n        var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n        var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n        var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n        if (Math.abs(limit) > Number.EPSILON) {\n          // not parallel\n          var perpSeg2;\n\n          if (limit > 0) {\n            if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n            perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n            if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n          } else {\n            if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n            perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n            if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n          } // i.e. to reduce rounding errors\n          // intersection at endpoint of segment#1?\n\n\n          if (perpSeg2 === 0) {\n            if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n            return [inSeg1Pt1];\n          }\n\n          if (perpSeg2 === limit) {\n            if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n            return [inSeg1Pt2];\n          } // intersection at endpoint of segment#2?\n\n\n          if (perpSeg1 === 0) return [inSeg2Pt1];\n          if (perpSeg1 === limit) return [inSeg2Pt2]; // return real intersection point\n\n          var factorSeg1 = perpSeg2 / limit;\n          return [{\n            x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n            y: inSeg1Pt1.y + factorSeg1 * seg1dy\n          }];\n        } else {\n          // parallel or collinear\n          if (perpSeg1 !== 0 || seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n          var seg1Pt = seg1dx === 0 && seg1dy === 0; // segment1 is just a point?\n\n          var seg2Pt = seg2dx === 0 && seg2dy === 0; // segment2 is just a point?\n          // both segments are points\n\n          if (seg1Pt && seg2Pt) {\n            if (inSeg1Pt1.x !== inSeg2Pt1.x || inSeg1Pt1.y !== inSeg2Pt1.y) return []; // they are distinct  points\n\n            return [inSeg1Pt1]; // they are the same point\n          } // segment#1  is a single point\n\n\n          if (seg1Pt) {\n            if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n            return [inSeg1Pt1];\n          } // segment#2  is a single point\n\n\n          if (seg2Pt) {\n            if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n            return [inSeg2Pt1];\n          } // they are collinear segments, which might overlap\n\n\n          var seg1min, seg1max, seg1minVal, seg1maxVal;\n          var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n          if (seg1dx !== 0) {\n            // the segments are NOT on a vertical line\n            if (inSeg1Pt1.x < inSeg1Pt2.x) {\n              seg1min = inSeg1Pt1;\n              seg1minVal = inSeg1Pt1.x;\n              seg1max = inSeg1Pt2;\n              seg1maxVal = inSeg1Pt2.x;\n            } else {\n              seg1min = inSeg1Pt2;\n              seg1minVal = inSeg1Pt2.x;\n              seg1max = inSeg1Pt1;\n              seg1maxVal = inSeg1Pt1.x;\n            }\n\n            if (inSeg2Pt1.x < inSeg2Pt2.x) {\n              seg2min = inSeg2Pt1;\n              seg2minVal = inSeg2Pt1.x;\n              seg2max = inSeg2Pt2;\n              seg2maxVal = inSeg2Pt2.x;\n            } else {\n              seg2min = inSeg2Pt2;\n              seg2minVal = inSeg2Pt2.x;\n              seg2max = inSeg2Pt1;\n              seg2maxVal = inSeg2Pt1.x;\n            }\n          } else {\n            // the segments are on a vertical line\n            if (inSeg1Pt1.y < inSeg1Pt2.y) {\n              seg1min = inSeg1Pt1;\n              seg1minVal = inSeg1Pt1.y;\n              seg1max = inSeg1Pt2;\n              seg1maxVal = inSeg1Pt2.y;\n            } else {\n              seg1min = inSeg1Pt2;\n              seg1minVal = inSeg1Pt2.y;\n              seg1max = inSeg1Pt1;\n              seg1maxVal = inSeg1Pt1.y;\n            }\n\n            if (inSeg2Pt1.y < inSeg2Pt2.y) {\n              seg2min = inSeg2Pt1;\n              seg2minVal = inSeg2Pt1.y;\n              seg2max = inSeg2Pt2;\n              seg2maxVal = inSeg2Pt2.y;\n            } else {\n              seg2min = inSeg2Pt2;\n              seg2minVal = inSeg2Pt2.y;\n              seg2max = inSeg2Pt1;\n              seg2maxVal = inSeg2Pt1.y;\n            }\n          }\n\n          if (seg1minVal <= seg2minVal) {\n            if (seg1maxVal < seg2minVal) return [];\n\n            if (seg1maxVal === seg2minVal) {\n              if (inExcludeAdjacentSegs) return [];\n              return [seg2min];\n            }\n\n            if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n            return [seg2min, seg2max];\n          } else {\n            if (seg1minVal > seg2maxVal) return [];\n\n            if (seg1minVal === seg2maxVal) {\n              if (inExcludeAdjacentSegs) return [];\n              return [seg1min];\n            }\n\n            if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n            return [seg1min, seg2max];\n          }\n        }\n      }\n\n      function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n        // The order of legs is important\n        // translation of all points, so that Vertex is at (0,0)\n        var legFromPtX = inLegFromPt.x - inVertex.x,\n            legFromPtY = inLegFromPt.y - inVertex.y;\n        var legToPtX = inLegToPt.x - inVertex.x,\n            legToPtY = inLegToPt.y - inVertex.y;\n        var otherPtX = inOtherPt.x - inVertex.x,\n            otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n        var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n        var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n        if (Math.abs(from2toAngle) > Number.EPSILON) {\n          // angle != 180 deg.\n          var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n          if (from2toAngle > 0) {\n            // main angle < 180 deg.\n            return from2otherAngle >= 0 && other2toAngle >= 0;\n          } else {\n            // main angle > 180 deg.\n            return from2otherAngle >= 0 || other2toAngle >= 0;\n          }\n        } else {\n          // angle == 180 deg.\n          // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n          return from2otherAngle > 0;\n        }\n      }\n\n      function removeHoles(contour, holes) {\n        var shape = contour.concat(); // work on this shape\n\n        var hole;\n\n        function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n          // Check if hole point lies within angle around shape point\n          var lastShapeIdx = shape.length - 1;\n          var prevShapeIdx = inShapeIdx - 1;\n          if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n          var nextShapeIdx = inShapeIdx + 1;\n          if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n          var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n          if (!insideAngle) {\n            // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n            return false;\n          } // Check if shape point lies within angle around hole point\n\n\n          var lastHoleIdx = hole.length - 1;\n          var prevHoleIdx = inHoleIdx - 1;\n          if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n          var nextHoleIdx = inHoleIdx + 1;\n          if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n          insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n          if (!insideAngle) {\n            // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n            return false;\n          }\n\n          return true;\n        }\n\n        function intersectsShapeEdge(inShapePt, inHolePt) {\n          // checks for intersections with shape edges\n          var sIdx, nextIdx, intersection;\n\n          for (sIdx = 0; sIdx < shape.length; sIdx++) {\n            nextIdx = sIdx + 1;\n            nextIdx %= shape.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n\n          return false;\n        }\n\n        var indepHoles = [];\n\n        function intersectsHoleEdge(inShapePt, inHolePt) {\n          // checks for intersections with hole edges\n          var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n          for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n            chkHole = holes[indepHoles[ihIdx]];\n\n            for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n              nextIdx = hIdx + 1;\n              nextIdx %= chkHole.length;\n              intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n              if (intersection.length > 0) return true;\n            }\n          }\n\n          return false;\n        }\n\n        var holeIndex,\n            shapeIndex,\n            shapePt,\n            holePt,\n            holeIdx,\n            cutKey,\n            failedCuts = [],\n            tmpShape1,\n            tmpShape2,\n            tmpHole1,\n            tmpHole2;\n\n        for (var h = 0, hl = holes.length; h < hl; h++) {\n          indepHoles.push(h);\n        }\n\n        var minShapeIndex = 0;\n        var counter = indepHoles.length * 2;\n\n        while (indepHoles.length > 0) {\n          counter--;\n\n          if (counter < 0) {\n            console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n            break;\n          } // search for shape-vertex and hole-vertex,\n          // which can be connected without intersections\n\n\n          for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n            shapePt = shape[shapeIndex];\n            holeIndex = -1; // search for hole which can be reached without intersections\n\n            for (var h = 0; h < indepHoles.length; h++) {\n              holeIdx = indepHoles[h]; // prevent multiple checks\n\n              cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n              if (failedCuts[cutKey] !== undefined) continue;\n              hole = holes[holeIdx];\n\n              for (var h2 = 0; h2 < hole.length; h2++) {\n                holePt = hole[h2];\n                if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n                if (intersectsShapeEdge(shapePt, holePt)) continue;\n                if (intersectsHoleEdge(shapePt, holePt)) continue;\n                holeIndex = h2;\n                indepHoles.splice(h, 1);\n                tmpShape1 = shape.slice(0, shapeIndex + 1);\n                tmpShape2 = shape.slice(shapeIndex);\n                tmpHole1 = hole.slice(holeIndex);\n                tmpHole2 = hole.slice(0, holeIndex + 1);\n                shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n                minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n                // glob_CutLines.push( [ shapePt, holePt ] );\n\n                break;\n              }\n\n              if (holeIndex >= 0) break; // hole-vertex found\n\n              failedCuts[cutKey] = true; // remember failure\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n          }\n        }\n\n        return shape;\n        /* shape with no holes */\n      }\n\n      var i,\n          il,\n          f,\n          face,\n          key,\n          index,\n          allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n      var allpoints = contour.concat();\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        Array.prototype.push.apply(allpoints, holes[h]);\n      } //console.log( \"allpoints\",allpoints, allpoints.length );\n      // prepare all points map\n\n\n      for (i = 0, il = allpoints.length; i < il; i++) {\n        key = allpoints[i].x + \":\" + allpoints[i].y;\n\n        if (allPointsMap[key] !== undefined) {\n          console.warn(\"THREE.ShapeUtils: Duplicate point\", key, i);\n        }\n\n        allPointsMap[key] = i;\n      } // remove holes by cutting paths to holes and adding them to the shape\n\n\n      var shapeWithoutHoles = removeHoles(contour, holes);\n      var triangles = ShapeUtils.triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n      //console.log( \"triangles\",triangles, triangles.length );\n      // check all face vertices against all points map\n\n      for (i = 0, il = triangles.length; i < il; i++) {\n        face = triangles[i];\n\n        for (f = 0; f < 3; f++) {\n          key = face[f].x + \":\" + face[f].y;\n          index = allPointsMap[key];\n\n          if (index !== undefined) {\n            face[f] = index;\n          }\n        }\n      }\n\n      return triangles.concat();\n    },\n    isClockWise: function (pts) {\n      return ShapeUtils.area(pts) < 0;\n    }\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Creates extruded geometry from a path shape.\n   *\n   * parameters = {\n   *\n   *  curveSegments: <int>, // number of points on the curves\n   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n   *  amount: <int>, // Depth to extrude the shape\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into the original shape bevel goes\n   *  bevelSize: <float>, // how far from shape outline is bevel\n   *  bevelSegments: <int>, // number of bevel layers\n   *\n   *  extrudePath: <THREE.Curve> // curve to extrude shape along\n   *  frames: <Object> // containing arrays of tangents, normals, binormals\n   *\n   *  UVGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   */\n  // ExtrudeGeometry\n\n  function ExtrudeGeometry(shapes, options) {\n    Geometry.call(this);\n    this.type = 'ExtrudeGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes, options));\n    this.mergeVertices();\n  }\n\n  ExtrudeGeometry.prototype = Object.create(Geometry.prototype);\n  ExtrudeGeometry.prototype.constructor = ExtrudeGeometry; // ExtrudeBufferGeometry\n\n  function ExtrudeBufferGeometry(shapes, options) {\n    if (typeof shapes === \"undefined\") {\n      return;\n    }\n\n    BufferGeometry.call(this);\n    this.type = 'ExtrudeBufferGeometry';\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n    this.addShapeList(shapes, options);\n    this.computeVertexNormals(); // can't really use automatic vertex normals\n    // as then front and back sides get smoothed too\n    // should do separate smoothing just for sides\n    //this.computeVertexNormals();\n    //console.log( \"took\", ( Date.now() - startTime ) );\n  }\n\n  ExtrudeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n  ExtrudeBufferGeometry.prototype.getArrays = function () {\n    var positionAttribute = this.getAttribute(\"position\");\n    var verticesArray = positionAttribute ? Array.prototype.slice.call(positionAttribute.array) : [];\n    var uvAttribute = this.getAttribute(\"uv\");\n    var uvArray = uvAttribute ? Array.prototype.slice.call(uvAttribute.array) : [];\n    var IndexAttribute = this.index;\n    var indicesArray = IndexAttribute ? Array.prototype.slice.call(IndexAttribute.array) : [];\n    return {\n      position: verticesArray,\n      uv: uvArray,\n      index: indicesArray\n    };\n  };\n\n  ExtrudeBufferGeometry.prototype.addShapeList = function (shapes, options) {\n    var sl = shapes.length;\n    options.arrays = this.getArrays();\n\n    for (var s = 0; s < sl; s++) {\n      var shape = shapes[s];\n      this.addShape(shape, options);\n    }\n\n    this.setIndex(options.arrays.index);\n    this.addAttribute('position', new Float32BufferAttribute(options.arrays.position, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(options.arrays.uv, 2));\n  };\n\n  ExtrudeBufferGeometry.prototype.addShape = function (shape, options) {\n    var arrays = options.arrays ? options.arrays : this.getArrays();\n    var verticesArray = arrays.position;\n    var indicesArray = arrays.index;\n    var uvArray = arrays.uv;\n    var placeholder = [];\n    var amount = options.amount !== undefined ? options.amount : 100;\n    var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n    var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n    var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n    var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n    var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n    var steps = options.steps !== undefined ? options.steps : 1;\n    var extrudePath = options.extrudePath;\n    var extrudePts,\n        extrudeByPath = false; // Use default WorldUVGenerator if no UV generators are specified.\n\n    var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n    var splineTube, binormal, normal, position2;\n\n    if (extrudePath) {\n      extrudePts = extrudePath.getSpacedPoints(steps);\n      extrudeByPath = true;\n      bevelEnabled = false; // bevels not supported for path extrusion\n      // SETUP TNB variables\n      // TODO1 - have a .isClosed in spline?\n\n      splineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n      binormal = new Vector3();\n      normal = new Vector3();\n      position2 = new Vector3();\n    } // Safeguards if bevels are not enabled\n\n\n    if (!bevelEnabled) {\n      bevelSegments = 0;\n      bevelThickness = 0;\n      bevelSize = 0;\n    } // Variables initialization\n\n\n    var ahole, h, hl; // looping of holes\n\n    var scope = this;\n    var shapePoints = shape.extractPoints(curveSegments);\n    var vertices = shapePoints.shape;\n    var holes = shapePoints.holes;\n    var reverse = !ShapeUtils.isClockWise(vertices);\n\n    if (reverse) {\n      vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n\n        if (ShapeUtils.isClockWise(ahole)) {\n          holes[h] = ahole.reverse();\n        }\n      }\n    }\n\n    var faces = ShapeUtils.triangulateShape(vertices, holes);\n    /* Vertices */\n\n    var contour = vertices; // vertices has all points but contour has only points of circumference\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      vertices = vertices.concat(ahole);\n    }\n\n    function scalePt2(pt, vec, size) {\n      if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n      return vec.clone().multiplyScalar(size).add(pt);\n    }\n\n    var b,\n        bs,\n        t,\n        z,\n        vert,\n        vlen = vertices.length,\n        face,\n        flen = faces.length; // Find directions for point movement\n\n    function getBevelVec(inPt, inPrev, inNext) {\n      // computes for inPt the corresponding point inPt' on a new contour\n      //   shifted by 1 unit (length of normalized vector) to the left\n      // if we walk along contour clockwise, this new contour is outside the old one\n      //\n      // inPt' is the intersection of the two lines parallel to the two\n      //  adjacent edges of inPt at a distance of 1 unit on the left side.\n      var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n      // good reading for geometry algorithms (here: line-line intersection)\n      // http://geomalgorithms.com/a05-_intersect-1.html\n\n      var v_prev_x = inPt.x - inPrev.x,\n          v_prev_y = inPt.y - inPrev.y;\n      var v_next_x = inNext.x - inPt.x,\n          v_next_y = inNext.y - inPt.y;\n      var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n      var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n      if (Math.abs(collinear0) > Number.EPSILON) {\n        // not collinear\n        // length of vectors for normalizing\n        var v_prev_len = Math.sqrt(v_prev_lensq);\n        var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n        var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n        var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n        var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n        var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n        var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n        v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n        v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n        //  but prevent crazy spikes\n\n        var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n        if (v_trans_lensq <= 2) {\n          return new Vector2(v_trans_x, v_trans_y);\n        } else {\n          shrink_by = Math.sqrt(v_trans_lensq / 2);\n        }\n      } else {\n        // handle special case of collinear edges\n        var direction_eq = false; // assumes: opposite\n\n        if (v_prev_x > Number.EPSILON) {\n          if (v_next_x > Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (v_prev_x < -Number.EPSILON) {\n            if (v_next_x < -Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n              direction_eq = true;\n            }\n          }\n        }\n\n        if (direction_eq) {\n          // console.log(\"Warning: lines are a straight sequence\");\n          v_trans_x = -v_prev_y;\n          v_trans_y = v_prev_x;\n          shrink_by = Math.sqrt(v_prev_lensq);\n        } else {\n          // console.log(\"Warning: lines are a straight spike\");\n          v_trans_x = v_prev_x;\n          v_trans_y = v_prev_y;\n          shrink_by = Math.sqrt(v_prev_lensq / 2);\n        }\n      }\n\n      return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n    }\n\n    var contourMovements = [];\n\n    for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n      // console.log('i,j,k', i, j , k)\n\n      contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n    }\n\n    var holesMovements = [],\n        oneHoleMovements,\n        verticesMovements = contourMovements.concat();\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = [];\n\n      for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0; //  (j)---(i)---(k)\n\n        oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n      }\n\n      holesMovements.push(oneHoleMovements);\n      verticesMovements = verticesMovements.concat(oneHoleMovements);\n    } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n    for (b = 0; b < bevelSegments; b++) {\n      //for ( b = bevelSegments; b > 0; b -- ) {\n      t = b / bevelSegments;\n      z = bevelThickness * Math.cos(t * Math.PI / 2);\n      bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n      for (i = 0, il = contour.length; i < il; i++) {\n        vert = scalePt2(contour[i], contourMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      } // expand holes\n\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = holesMovements[h];\n\n        for (i = 0, il = ahole.length; i < il; i++) {\n          vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        }\n      }\n    }\n\n    bs = bevelSize; // Back facing vertices\n\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, 0);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n        normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[0]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    } // Add stepped vertices...\n    // Including front facing vertices\n\n\n    var s;\n\n    for (s = 1; s <= steps; s++) {\n      for (i = 0; i < vlen; i++) {\n        vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount / steps * s);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n          normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[s]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      }\n    } // Add bevel segments planes\n    //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n    for (b = bevelSegments - 1; b >= 0; b--) {\n      t = b / bevelSegments;\n      z = bevelThickness * Math.cos(t * Math.PI / 2);\n      bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n      for (i = 0, il = contour.length; i < il; i++) {\n        vert = scalePt2(contour[i], contourMovements[i], bs);\n        v(vert.x, vert.y, amount + z);\n      } // expand holes\n\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = holesMovements[h];\n\n        for (i = 0, il = ahole.length; i < il; i++) {\n          vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, amount + z);\n          } else {\n            v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n          }\n        }\n      }\n    }\n    /* Faces */\n    // Top and bottom faces\n\n\n    buildLidFaces(); // Sides faces\n\n    buildSideFaces(); /////  Internal functions\n\n    function buildLidFaces() {\n      var start = verticesArray.length / 3;\n\n      if (bevelEnabled) {\n        var layer = 0; // steps + 1\n\n        var offset = vlen * layer; // Bottom faces\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[2] + offset, face[1] + offset, face[0] + offset);\n        }\n\n        layer = steps + bevelSegments * 2;\n        offset = vlen * layer; // Top faces\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[0] + offset, face[1] + offset, face[2] + offset);\n        }\n      } else {\n        // Bottom faces\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[2], face[1], face[0]);\n        } // Top faces\n\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n        }\n      }\n\n      scope.addGroup(start, verticesArray.length / 3 - start, options.material !== undefined ? options.material : 0);\n    } // Create faces for the z-sides of the shape\n\n\n    function buildSideFaces() {\n      var start = verticesArray.length / 3;\n      var layeroffset = 0;\n      sidewalls(contour, layeroffset);\n      layeroffset += contour.length;\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        sidewalls(ahole, layeroffset); //, true\n\n        layeroffset += ahole.length;\n      }\n\n      scope.addGroup(start, verticesArray.length / 3 - start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n    }\n\n    function sidewalls(contour, layeroffset) {\n      var j, k;\n      i = contour.length;\n\n      while (--i >= 0) {\n        j = i;\n        k = i - 1;\n        if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n        var s = 0,\n            sl = steps + bevelSegments * 2;\n\n        for (s = 0; s < sl; s++) {\n          var slen1 = vlen * s;\n          var slen2 = vlen * (s + 1);\n          var a = layeroffset + j + slen1,\n              b = layeroffset + k + slen1,\n              c = layeroffset + k + slen2,\n              d = layeroffset + j + slen2;\n          f4(a, b, c, d, contour, s, sl, j, k);\n        }\n      }\n    }\n\n    function v(x, y, z) {\n      placeholder.push(x);\n      placeholder.push(y);\n      placeholder.push(z);\n    }\n\n    function f3(a, b, c) {\n      addVertex(a);\n      addVertex(b);\n      addVertex(c);\n      var nextIndex = verticesArray.length / 3;\n      var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n      addUV(uvs[0]);\n      addUV(uvs[1]);\n      addUV(uvs[2]);\n    }\n\n    function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n      addVertex(a);\n      addVertex(b);\n      addVertex(d);\n      addVertex(b);\n      addVertex(c);\n      addVertex(d);\n      var nextIndex = verticesArray.length / 3;\n      var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n      addUV(uvs[0]);\n      addUV(uvs[1]);\n      addUV(uvs[3]);\n      addUV(uvs[1]);\n      addUV(uvs[2]);\n      addUV(uvs[3]);\n    }\n\n    function addVertex(index) {\n      indicesArray.push(verticesArray.length / 3);\n      verticesArray.push(placeholder[index * 3 + 0]);\n      verticesArray.push(placeholder[index * 3 + 1]);\n      verticesArray.push(placeholder[index * 3 + 2]);\n    }\n\n    function addUV(vector2) {\n      uvArray.push(vector2.x);\n      uvArray.push(vector2.y);\n    }\n\n    if (!options.arrays) {\n      this.setIndex(indicesArray);\n      this.addAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n      this.addAttribute('uv', new Float32BufferAttribute(options.arrays.uv, 2));\n    }\n  };\n\n  ExtrudeGeometry.WorldUVGenerator = {\n    generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n    },\n    generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var a_z = vertices[indexA * 3 + 2];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var b_z = vertices[indexB * 3 + 2];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      var c_z = vertices[indexC * 3 + 2];\n      var d_x = vertices[indexD * 3];\n      var d_y = vertices[indexD * 3 + 1];\n      var d_z = vertices[indexD * 3 + 2];\n\n      if (Math.abs(a_y - b_y) < 0.01) {\n        return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n      } else {\n        return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n      }\n    }\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Text = 3D Text\n   *\n   * parameters = {\n   *  font: <THREE.Font>, // font\n   *\n   *  size: <float>, // size of the text\n   *  height: <float>, // thickness to extrude text\n   *  curveSegments: <int>, // number of points on the curves\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into text bevel goes\n   *  bevelSize: <float> // how far from text outline is bevel\n   * }\n   */\n  // TextGeometry\n\n  function TextGeometry(text, parameters) {\n    Geometry.call(this);\n    this.type = 'TextGeometry';\n    this.parameters = {\n      text: text,\n      parameters: parameters\n    };\n    this.fromBufferGeometry(new TextBufferGeometry(text, parameters));\n    this.mergeVertices();\n  }\n\n  TextGeometry.prototype = Object.create(Geometry.prototype);\n  TextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry\n\n  function TextBufferGeometry(text, parameters) {\n    parameters = parameters || {};\n    var font = parameters.font;\n\n    if (!(font && font.isFont)) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      return new Geometry();\n    }\n\n    var shapes = font.generateShapes(text, parameters.size, parameters.curveSegments); // translate parameters to ExtrudeGeometry API\n\n    parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    ExtrudeBufferGeometry.call(this, shapes, parameters);\n    this.type = 'TextBufferGeometry';\n  }\n\n  TextBufferGeometry.prototype = Object.create(ExtrudeBufferGeometry.prototype);\n  TextBufferGeometry.prototype.constructor = TextBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // SphereGeometry\n\n  function SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  SphereGeometry.prototype = Object.create(Geometry.prototype);\n  SphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry\n\n  function SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'SphereBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 50;\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n    phiStart = phiStart !== undefined ? phiStart : 0;\n    phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n    var thetaEnd = thetaStart + thetaLength;\n    var ix, iy;\n    var index = 0;\n    var grid = [];\n    var vertex = new Vector3();\n    var normal = new Vector3(); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy <= heightSegments; iy++) {\n      var verticesRow = [];\n      var v = iy / heightSegments;\n\n      for (ix = 0; ix <= widthSegments; ix++) {\n        var u = ix / widthSegments; // vertex\n\n        vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.set(vertex.x, vertex.y, vertex.z).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, 1 - v);\n        verticesRow.push(index++);\n      }\n\n      grid.push(verticesRow);\n    } // indices\n\n\n    for (iy = 0; iy < heightSegments; iy++) {\n      for (ix = 0; ix < widthSegments; ix++) {\n        var a = grid[iy][ix + 1];\n        var b = grid[iy][ix];\n        var c = grid[iy + 1][ix];\n        var d = grid[iy + 1][ix + 1];\n        if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n        if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  SphereBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n  /**\n   * @author Kaleb Murphy\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // RingGeometry\n\n  function RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  RingGeometry.prototype = Object.create(Geometry.prototype);\n  RingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry\n\n  function RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'RingBufferGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    innerRadius = innerRadius || 20;\n    outerRadius = outerRadius || 50;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n    phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // some helper variables\n\n    var segment;\n    var radius = innerRadius;\n    var radiusStep = (outerRadius - innerRadius) / phiSegments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= phiSegments; j++) {\n      for (i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n        segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // increase the radius for next row of vertices\n\n\n      radius += radiusStep;\n    } // indices\n\n\n    for (j = 0; j < phiSegments; j++) {\n      var thetaSegmentLevel = j * (thetaSegments + 1);\n\n      for (i = 0; i < thetaSegments; i++) {\n        segment = i + thetaSegmentLevel;\n        var a = segment;\n        var b = segment + thetaSegments + 1;\n        var c = segment + thetaSegments + 2;\n        var d = segment + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  RingBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  RingBufferGeometry.prototype.constructor = RingBufferGeometry;\n  /**\n   * @author astrodud / http://astrodud.isgreat.org/\n   * @author zz85 / https://github.com/zz85\n   * @author bhouston / http://clara.io\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // LatheGeometry\n\n  function LatheGeometry(points, segments, phiStart, phiLength) {\n    Geometry.call(this);\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n    this.mergeVertices();\n  }\n\n  LatheGeometry.prototype = Object.create(Geometry.prototype);\n  LatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry\n\n  function LatheBufferGeometry(points, segments, phiStart, phiLength) {\n    BufferGeometry.call(this);\n    this.type = 'LatheBufferGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments) || 12;\n    phiStart = phiStart || 0;\n    phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = _Math.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var uvs = []; // helper variables\n\n    var base;\n    var inverseSegments = 1.0 / segments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var i, j; // generate vertices and uvs\n\n    for (i = 0; i <= segments; i++) {\n      var phi = phiStart + i * inverseSegments * phiLength;\n      var sin = Math.sin(phi);\n      var cos = Math.cos(phi);\n\n      for (j = 0; j <= points.length - 1; j++) {\n        // vertex\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.push(uv.x, uv.y);\n      }\n    } // indices\n\n\n    for (i = 0; i < segments; i++) {\n      for (j = 0; j < points.length - 1; j++) {\n        base = j + i * points.length;\n        var a = base;\n        var b = base + points.length;\n        var c = base + points.length + 1;\n        var d = base + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n    this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n\n    if (phiLength === Math.PI * 2) {\n      var normals = this.attributes.normal.array;\n      var n1 = new Vector3();\n      var n2 = new Vector3();\n      var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n      base = segments * points.length * 3;\n\n      for (i = 0, j = 0; i < points.length; i++, j += 3) {\n        // select the normal of the vertex in the first line\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2]; // average normals\n\n        n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      }\n    }\n  }\n\n  LatheBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n  /**\n   * @author jonobr1 / http://jonobr1.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // ShapeGeometry\n\n  function ShapeGeometry(shapes, curveSegments) {\n    Geometry.call(this);\n    this.type = 'ShapeGeometry';\n\n    if (typeof curveSegments === 'object') {\n      console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n      curveSegments = curveSegments.curveSegments;\n    }\n\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n    this.mergeVertices();\n  }\n\n  ShapeGeometry.prototype = Object.create(Geometry.prototype);\n  ShapeGeometry.prototype.constructor = ShapeGeometry; // ShapeBufferGeometry\n\n  function ShapeBufferGeometry(shapes, curveSegments) {\n    BufferGeometry.call(this);\n    this.type = 'ShapeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    curveSegments = curveSegments || 12; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var groupStart = 0;\n    var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (var i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n        this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n    function addShape(shape) {\n      var i, l, shapeHole;\n      var indexOffset = vertices.length / 3;\n      var points = shape.extractPoints(curveSegments);\n      var shapeVertices = points.shape;\n      var shapeHoles = points.holes; // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse(); // also check if holes are in the opposite direction\n\n        for (i = 0, l = shapeHoles.length; i < l; i++) {\n          shapeHole = shapeHoles[i];\n\n          if (ShapeUtils.isClockWise(shapeHole) === true) {\n            shapeHoles[i] = shapeHole.reverse();\n          }\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n        shapeVertices = shapeVertices.concat(shapeHole);\n      } // vertices, normals, uvs\n\n\n      for (i = 0, l = shapeVertices.length; i < l; i++) {\n        var vertex = shapeVertices[i];\n        vertices.push(vertex.x, vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(vertex.x, vertex.y); // world uvs\n      } // incides\n\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var a = face[0] + indexOffset;\n        var b = face[1] + indexOffset;\n        var c = face[2] + indexOffset;\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n  }\n\n  ShapeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  function EdgesGeometry(geometry, thresholdAngle) {\n    BufferGeometry.call(this);\n    this.type = 'EdgesGeometry';\n    this.parameters = {\n      thresholdAngle: thresholdAngle\n    };\n    thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1; // buffer\n\n    var vertices = []; // helper variables\n\n    var thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n    var edge = [0, 0],\n        edges = {},\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c']; // prepare source geometry\n\n    var geometry2;\n\n    if (geometry.isBufferGeometry) {\n      geometry2 = new Geometry();\n      geometry2.fromBufferGeometry(geometry);\n    } else {\n      geometry2 = geometry.clone();\n    }\n\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n    var sourceVertices = geometry2.vertices;\n    var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge1 = face[keys[j]];\n        edge2 = face[keys[(j + 1) % 3]];\n        edge[0] = Math.min(edge1, edge2);\n        edge[1] = Math.max(edge1, edge2);\n        key = edge[0] + ',' + edge[1];\n\n        if (edges[key] === undefined) {\n          edges[key] = {\n            index1: edge[0],\n            index2: edge[1],\n            face1: i,\n            face2: undefined\n          };\n        } else {\n          edges[key].face2 = i;\n        }\n      }\n    } // generate vertices\n\n\n    for (key in edges) {\n      var e = edges[key]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n      if (e.face2 === undefined || faces[e.face1].normal.dot(faces[e.face2].normal) <= thresholdDot) {\n        var vertex = sourceVertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = sourceVertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  EdgesGeometry.prototype = Object.create(BufferGeometry.prototype);\n  EdgesGeometry.prototype.constructor = EdgesGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // CylinderGeometry\n\n  function CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CylinderGeometry.prototype = Object.create(Geometry.prototype);\n  CylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry\n\n  function CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CylinderBufferGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    var scope = this;\n    radiusTop = radiusTop !== undefined ? radiusTop : 20;\n    radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n    height = height !== undefined ? height : 100;\n    radialSegments = Math.floor(radialSegments) || 8;\n    heightSegments = Math.floor(heightSegments) || 1;\n    openEnded = openEnded !== undefined ? openEnded : false;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var index = 0;\n    var indexArray = [];\n    var halfHeight = height / 2;\n    var groupStart = 0; // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function generateTorso() {\n      var x, y;\n      var normal = new Vector3();\n      var vertex = new Vector3();\n      var groupCount = 0; // this will be used to calculate the normal\n\n      var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n      for (y = 0; y <= heightSegments; y++) {\n        var indexRow = [];\n        var v = y / heightSegments; // calculate the radius of the current row\n\n        var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (x = 0; x <= radialSegments; x++) {\n          var u = x / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var sinTheta = Math.sin(theta);\n          var cosTheta = Math.cos(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u, 1 - v); // save index of vertex in respective row\n\n          indexRow.push(index++);\n        } // now save vertices of the row in our index array\n\n\n        indexArray.push(indexRow);\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        for (y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n          var a = indexArray[y][x];\n          var b = indexArray[y + 1][x];\n          var c = indexArray[y + 1][x + 1];\n          var d = indexArray[y][x + 1]; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // update group counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      var x, centerIndexStart, centerIndexEnd;\n      var uv = new Vector2();\n      var vertex = new Vector3();\n      var groupCount = 0;\n      var radius = top === true ? radiusTop : radiusBottom;\n      var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n      centerIndexStart = index; // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (x = 1; x <= radialSegments; x++) {\n        // vertex\n        vertices.push(0, halfHeight * sign, 0); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uvs.push(0.5, 0.5); // increase index\n\n        index++;\n      } // save the index of the last center vertex\n\n\n      centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y); // increase index\n\n        index++;\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        var c = centerIndexStart + x;\n        var i = centerIndexEnd + x;\n\n        if (top === true) {\n          // face top\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n          indices.push(i + 1, i, c);\n        }\n\n        groupCount += 3;\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  }\n\n  CylinderBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n  // ConeGeometry\n\n  function ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeGeometry.prototype = Object.create(CylinderGeometry.prototype);\n  ConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry\n\n  function ConeBufferGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeBufferGeometry.prototype = Object.create(CylinderBufferGeometry.prototype);\n  ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author hughes\n   */\n  // CircleGeometry\n\n  function CircleGeometry(radius, segments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CircleGeometry.prototype = Object.create(Geometry.prototype);\n  CircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry\n\n  function CircleBufferGeometry(radius, segments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CircleBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 50;\n    segments = segments !== undefined ? Math.max(3, segments) : 8;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, s;\n    var vertex = new Vector3();\n    var uv = new Vector2(); // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n\n    for (s = 0, i = 3; s <= segments; s++, i += 3) {\n      var segment = thetaStart + s / segments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // indices\n\n\n    for (i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  CircleBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n  var Geometries = Object.freeze({\n    WireframeGeometry: WireframeGeometry,\n    ParametricGeometry: ParametricGeometry,\n    ParametricBufferGeometry: ParametricBufferGeometry,\n    TetrahedronGeometry: TetrahedronGeometry,\n    TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n    OctahedronGeometry: OctahedronGeometry,\n    OctahedronBufferGeometry: OctahedronBufferGeometry,\n    IcosahedronGeometry: IcosahedronGeometry,\n    IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n    DodecahedronGeometry: DodecahedronGeometry,\n    DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n    PolyhedronGeometry: PolyhedronGeometry,\n    PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n    TubeGeometry: TubeGeometry,\n    TubeBufferGeometry: TubeBufferGeometry,\n    TorusKnotGeometry: TorusKnotGeometry,\n    TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n    TorusGeometry: TorusGeometry,\n    TorusBufferGeometry: TorusBufferGeometry,\n    TextGeometry: TextGeometry,\n    TextBufferGeometry: TextBufferGeometry,\n    SphereGeometry: SphereGeometry,\n    SphereBufferGeometry: SphereBufferGeometry,\n    RingGeometry: RingGeometry,\n    RingBufferGeometry: RingBufferGeometry,\n    PlaneGeometry: PlaneGeometry,\n    PlaneBufferGeometry: PlaneBufferGeometry,\n    LatheGeometry: LatheGeometry,\n    LatheBufferGeometry: LatheBufferGeometry,\n    ShapeGeometry: ShapeGeometry,\n    ShapeBufferGeometry: ShapeBufferGeometry,\n    ExtrudeGeometry: ExtrudeGeometry,\n    ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n    EdgesGeometry: EdgesGeometry,\n    ConeGeometry: ConeGeometry,\n    ConeBufferGeometry: ConeBufferGeometry,\n    CylinderGeometry: CylinderGeometry,\n    CylinderBufferGeometry: CylinderBufferGeometry,\n    CircleGeometry: CircleGeometry,\n    CircleBufferGeometry: CircleBufferGeometry,\n    BoxGeometry: BoxGeometry,\n    BoxBufferGeometry: BoxBufferGeometry\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * parameters = {\n   *  opacity: <float>\n   * }\n   */\n\n  function ShadowMaterial(parameters) {\n    ShaderMaterial.call(this, {\n      uniforms: UniformsUtils.merge([UniformsLib.lights, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk['shadow_vert'],\n      fragmentShader: ShaderChunk['shadow_frag']\n    });\n    this.lights = true;\n    this.transparent = true;\n    Object.defineProperties(this, {\n      opacity: {\n        enumerable: true,\n        get: function () {\n          return this.uniforms.opacity.value;\n        },\n        set: function (value) {\n          this.uniforms.opacity.value = value;\n        }\n      }\n    });\n    this.setValues(parameters);\n  }\n\n  ShadowMaterial.prototype = Object.create(ShaderMaterial.prototype);\n  ShadowMaterial.prototype.constructor = ShadowMaterial;\n  ShadowMaterial.prototype.isShadowMaterial = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function RawShaderMaterial(parameters) {\n    ShaderMaterial.call(this, parameters);\n    this.type = 'RawShaderMaterial';\n  }\n\n  RawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\n  RawShaderMaterial.prototype.constructor = RawShaderMaterial;\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  roughness: <float>,\n   *  metalness: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  roughnessMap: new THREE.Texture( <Image> ),\n   *\n   *  metalnessMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  envMapIntensity: <float>\n   *\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function MeshStandardMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.type = 'MeshStandardMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.roughness = 0.5;\n    this.metalness = 0.5;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshStandardMaterial.prototype = Object.create(Material.prototype);\n  MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n  MeshStandardMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  reflectivity: <float>\n   * }\n   */\n\n\n  function MeshPhysicalMaterial(parameters) {\n    MeshStandardMaterial.call(this);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n\n    this.clearCoat = 0.0;\n    this.clearCoatRoughness = 0.0;\n    this.setValues(parameters);\n  }\n\n  MeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n  MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n  MeshPhysicalMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.reflectivity = source.reflectivity;\n    this.clearCoat = source.clearCoat;\n    this.clearCoatRoughness = source.clearCoatRoughness;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  specular: <hex>,\n   *  shininess: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshPhongMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshPhongMaterial.prototype = Object.create(Material.prototype);\n  MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n  MeshPhongMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author takahirox / http://github.com/takahirox\n   *\n   * parameters = {\n   *  gradientMap: new THREE.Texture( <Image> )\n   * }\n   */\n\n\n  function MeshToonMaterial(parameters) {\n    MeshPhongMaterial.call(this);\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.gradientMap = null;\n    this.setValues(parameters);\n  }\n\n  MeshToonMaterial.prototype = Object.create(MeshPhongMaterial.prototype);\n  MeshToonMaterial.prototype.constructor = MeshToonMaterial;\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n  MeshToonMaterial.prototype.copy = function (source) {\n    MeshPhongMaterial.prototype.copy.call(this, source);\n    this.gradientMap = source.gradientMap;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  opacity: <float>,\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshNormalMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshNormalMaterial.prototype = Object.create(Material.prototype);\n  MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n  MeshNormalMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshLambertMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshLambertMaterial.prototype = Object.create(Material.prototype);\n  MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n  MeshLambertMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *\n   *  scale: <float>,\n   *  dashSize: <float>,\n   *  gapSize: <float>\n   * }\n   */\n\n\n  function LineDashedMaterial(parameters) {\n    Material.call(this);\n    this.type = 'LineDashedMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  LineDashedMaterial.prototype = Object.create(Material.prototype);\n  LineDashedMaterial.prototype.constructor = LineDashedMaterial;\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n  LineDashedMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  };\n\n  var Materials = Object.freeze({\n    ShadowMaterial: ShadowMaterial,\n    SpriteMaterial: SpriteMaterial,\n    RawShaderMaterial: RawShaderMaterial,\n    ShaderMaterial: ShaderMaterial,\n    PointsMaterial: PointsMaterial,\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\n    MeshStandardMaterial: MeshStandardMaterial,\n    MeshPhongMaterial: MeshPhongMaterial,\n    MeshToonMaterial: MeshToonMaterial,\n    MeshNormalMaterial: MeshNormalMaterial,\n    MeshLambertMaterial: MeshLambertMaterial,\n    MeshDepthMaterial: MeshDepthMaterial,\n    MeshBasicMaterial: MeshBasicMaterial,\n    LineDashedMaterial: LineDashedMaterial,\n    LineBasicMaterial: LineBasicMaterial,\n    Material: Material\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var Cache = {\n    enabled: false,\n    files: {},\n    add: function (key, file) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n      this.files[key] = file;\n    },\n    get: function (key) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n      return this.files[key];\n    },\n    remove: function (key) {\n      delete this.files[key];\n    },\n    clear: function () {\n      this.files = {};\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LoadingManager(onLoad, onProgress, onError) {\n    var scope = this;\n    var isLoading = false,\n        itemsLoaded = 0,\n        itemsTotal = 0;\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n  }\n\n  var DefaultLoadingManager = new LoadingManager();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function FileLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(FileLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      } // Check for data: URI\n\n\n      var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n      var dataUriRegexResult = url.match(dataUriRegex); // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n      if (dataUriRegexResult) {\n        var mimeType = dataUriRegexResult[1];\n        var isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) data = window.atob(data);\n\n        try {\n          var response;\n          var responseType = (this.responseType || '').toLowerCase();\n\n          switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n              response = new ArrayBuffer(data.length);\n              var view = new Uint8Array(response);\n\n              for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n              }\n\n              if (responseType === 'blob') {\n                response = new Blob([response], {\n                  type: mimeType\n                });\n              }\n\n              break;\n\n            case 'document':\n              var parser = new DOMParser();\n              response = parser.parseFromString(data, mimeType);\n              break;\n\n            case 'json':\n              response = JSON.parse(data);\n              break;\n\n            default:\n              // 'text' or other\n              response = data;\n              break;\n          } // Wait for next browser tick\n\n\n          window.setTimeout(function () {\n            if (onLoad) onLoad(response);\n            scope.manager.itemEnd(url);\n          }, 0);\n        } catch (error) {\n          // Wait for next browser tick\n          window.setTimeout(function () {\n            if (onError) onError(error);\n            scope.manager.itemEnd(url);\n            scope.manager.itemError(url);\n          }, 0);\n        }\n      } else {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.addEventListener('load', function (event) {\n          var response = event.target.response;\n          Cache.add(url, response);\n\n          if (this.status === 200) {\n            if (onLoad) onLoad(response);\n            scope.manager.itemEnd(url);\n          } else if (this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            console.warn('THREE.FileLoader: HTTP Status 0 received.');\n            if (onLoad) onLoad(response);\n            scope.manager.itemEnd(url);\n          } else {\n            if (onError) onError(event);\n            scope.manager.itemEnd(url);\n            scope.manager.itemError(url);\n          }\n        }, false);\n\n        if (onProgress !== undefined) {\n          request.addEventListener('progress', function (event) {\n            onProgress(event);\n          }, false);\n        }\n\n        request.addEventListener('error', function (event) {\n          if (onError) onError(event);\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }, false);\n        if (this.responseType !== undefined) request.responseType = this.responseType;\n        if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n        if (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n        for (var header in this.requestHeader) {\n          request.setRequestHeader(header, this.requestHeader[header]);\n        }\n\n        request.send(null);\n      }\n\n      scope.manager.itemStart(url);\n      return request;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    },\n    setResponseType: function (value) {\n      this.responseType = value;\n      return this;\n    },\n    setWithCredentials: function (value) {\n      this.withCredentials = value;\n      return this;\n    },\n    setMimeType: function (value) {\n      this.mimeType = value;\n      return this;\n    },\n    setRequestHeader: function (value) {\n      this.requestHeader = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   */\n\n  function CompressedTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  }\n\n  Object.assign(CompressedTextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new CompressedTexture();\n      texture.image = images;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        var loaded = 0;\n\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var i = 0; i < texDatas.mipmapCount; i++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }, onProgress, onError);\n      }\n\n      return texture;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author Nikos M. / https://github.com/foo123/\n   *\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   */\n\n  function DataTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  }\n\n  Object.assign(DataTextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new DataTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        var texData = scope._parser(buffer);\n\n        if (!texData) return;\n\n        if (undefined !== texData.image) {\n          texture.image = texData.image;\n        } else if (undefined !== texData.data) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n        texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n        texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n        texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n        if (undefined !== texData.format) {\n          texture.format = texData.format;\n        }\n\n        if (undefined !== texData.type) {\n          texture.type = texData.type;\n        }\n\n        if (undefined !== texData.mipmaps) {\n          texture.mipmaps = texData.mipmaps;\n        }\n\n        if (1 === texData.mipmapCount) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture, texData);\n      }, onProgress, onError);\n      return texture;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ImageLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(ImageLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n      image.addEventListener('load', function () {\n        Cache.add(url, this);\n        if (onLoad) onLoad(this);\n        scope.manager.itemEnd(url);\n      }, false);\n      /*\n      image.addEventListener( 'progress', function ( event ) {\n      \t\tif ( onProgress ) onProgress( event );\n      \t}, false );\n      */\n\n      image.addEventListener('error', function (event) {\n        if (onError) onError(event);\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      }, false);\n\n      if (url.substr(0, 5) !== 'data:') {\n        if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n      }\n\n      scope.manager.itemStart(url);\n      image.src = url;\n      return image;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CubeTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(CubeTextureLoader.prototype, {\n    load: function (urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function TextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(TextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var texture = new Texture();\n      texture.image = loader.load(url, function () {\n        // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n        var isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? RGBFormat : RGBAFormat;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Light(color, intensity) {\n    Object3D.call(this);\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity !== undefined ? intensity : 1;\n    this.receiveShadow = undefined;\n  }\n\n  Light.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Light,\n    isLight: true,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n      if (this.distance !== undefined) data.object.distance = this.distance;\n      if (this.angle !== undefined) data.object.angle = this.angle;\n      if (this.decay !== undefined) data.object.decay = this.decay;\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n      if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n      return data;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function HemisphereLight(skyColor, groundColor, intensity) {\n    Light.call(this, skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.castShadow = undefined;\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n\n  HemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: HemisphereLight,\n    isHemisphereLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LightShadow(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.radius = 1;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.matrix = new Matrix4();\n  }\n\n  Object.assign(LightShadow.prototype, {\n    copy: function (source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function () {\n      var object = {};\n      if (this.bias !== 0) object.bias = this.bias;\n      if (this.radius !== 1) object.radius = this.radius;\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n      object.camera = this.camera.toJSON(false).object;\n      delete object.camera.matrix;\n      return object;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function SpotLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n  }\n\n  SpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: SpotLightShadow,\n    isSpotLightShadow: true,\n    update: function (light) {\n      var camera = this.camera;\n      var fov = _Math.RAD2DEG * 2 * light.angle;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || camera.far;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function SpotLight(color, intensity, distance, angle, penumbra, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        return this.intensity * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        this.intensity = power / Math.PI;\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.angle = angle !== undefined ? angle : Math.PI / 3;\n    this.penumbra = penumbra !== undefined ? penumbra : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new SpotLightShadow();\n  }\n\n  SpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: SpotLight,\n    isSpotLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PointLight(color, intensity, distance, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'PointLight';\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n        this.intensity = power / (4 * Math.PI);\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new LightShadow(new PerspectiveCamera(90, 1, 0.5, 500));\n  }\n\n  PointLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: PointLight,\n    isPointLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectionalLightShadow() {\n    LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  }\n\n  DirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: DirectionalLightShadow\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DirectionalLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.shadow = new DirectionalLightShadow();\n  }\n\n  DirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: DirectionalLight,\n    isDirectionalLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AmbientLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'AmbientLight';\n    this.castShadow = undefined;\n  }\n\n  AmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: AmbientLight,\n    isAmbientLight: true\n  });\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n\n  function RectAreaLight(color, intensity, width, height) {\n    Light.call(this, color, intensity);\n    this.type = 'RectAreaLight';\n    this.position.set(0, 1, 0);\n    this.updateMatrix();\n    this.width = width !== undefined ? width : 10;\n    this.height = height !== undefined ? height : 10; // TODO (abelnation): distance/decay\n    // TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n    // TODO (abelnation): shadows\n  } // TODO (abelnation): RectAreaLight update when light shape is changed\n\n\n  RectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: RectAreaLight,\n    isRectAreaLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.width = source.width;\n      this.height = source.height;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Light.prototype.toJSON.call(this, meta);\n      data.object.width = this.width;\n      data.object.height = this.height;\n      return data;\n    }\n  });\n  /**\n   * @author tschw\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  var AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function (array, from, to) {\n      if (AnimationUtils.isTypedArray(array)) {\n        // in ios9 array.subarray(from, undefined) will return empty array\n        // but array.subarray(from) or array.subarray(from, len) is correct\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function (array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) return array;\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function (object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function (times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var i = 0; i !== n; ++i) result[i] = i;\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function (values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n        var srcOffset = order[i] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) return; // no data\n\n      var value = key[valuePropertyName];\n      if (value === undefined) return; // no data\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    }\n  };\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   * @author tschw\n   */\n\n  function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  }\n\n  Object.assign(Interpolant.prototype, {\n    evaluate: function (t) {\n      var pp = this.parameterPositions,\n          i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) break forward_scan; // after end\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.afterEnd_(i1 - 1, t, t0);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.beforeStart_(0, t, t1);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.beforeStart_(0, t, t1);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.afterEnd_(i1 - 1, t0, t);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    },\n    settings: null,\n    // optional, subclass-specific settings structure\n    // Note: The indirection allows central control of many interpolants.\n    // --- Protected interface\n    DefaultSettings_: {},\n    getSettings_: function () {\n      return this.settings || this.DefaultSettings_;\n    },\n    copySampleValue_: function (index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    },\n    // Template methods for derived classes:\n    interpolate_: function (i1, t0, t, t1) {\n      throw new Error(\"call to abstract method\"); // implementations shall return this.resultBuffer\n    },\n    intervalChanged_: function (i1, t0, t1) {// empty\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(Interpolant.prototype, {\n    //( 0, t, t0 ), returns this.resultBuffer\n    beforeStart_: Interpolant.prototype.copySampleValue_,\n    //( N-1, tN-1, t ), returns this.resultBuffer\n    afterEnd_: Interpolant.prototype.copySampleValue_\n  });\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   *\n   * @author tschw\n   */\n\n  function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  }\n\n  CubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: CubicInterpolant,\n    DefaultSettings_: {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    },\n    intervalChanged_: function (i1, t0, t1) {\n      var pp = this.parameterPositions,\n          iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    },\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  });\n  /**\n   * @author tschw\n   */\n\n  function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  LinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: LinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   *\n   * @author tschw\n   */\n\n  function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  DiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: DiscreteInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  });\n  var KeyframeTrackPrototype;\n  KeyframeTrackPrototype = {\n    TimeBufferType: Float32Array,\n    ValueBufferType: Float32Array,\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodDiscrete: function (result) {\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodLinear: function (result) {\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: function (result) {\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    setInterpolation: function (interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn('THREE.KeyframeTrackPrototype:', message);\n        return;\n      }\n\n      this.createInterpolant = factoryMethod;\n    },\n    getInterpolation: function () {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return InterpolateSmooth;\n      }\n    },\n    getValueSize: function () {\n      return this.values.length / this.times.length;\n    },\n    // move all keyframes either forwards or backwards in time\n    shift: function (timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    },\n    // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    scale: function (timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    },\n    // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    trim: function (startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length,\n          from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) ++from;\n\n      while (to !== -1 && times[to] > endTime) --to;\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) to = Math.max(to, 1), from = to - 1;\n        var stride = this.getValueSize();\n        this.times = AnimationUtils.arraySlice(times, from, to);\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    },\n    // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    validate: function () {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error('THREE.KeyframeTrackPrototype: Invalid value size in track.', this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error('THREE.KeyframeTrackPrototype: Track is empty.', this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error('THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error('THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (AnimationUtils.isTypedArray(values)) {\n          for (var i = 0, n = values.length; i !== n; ++i) {\n            var value = values[i];\n\n            if (isNaN(value)) {\n              console.error('THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    },\n    // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    optimize: function () {\n      var times = this.times,\n          values = this.values,\n          stride = this.getValueSize(),\n          smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n          writeIndex = 1,\n          lastIndex = times.length - 1;\n\n      for (var i = 1; i < lastIndex; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== time[0])) {\n          if (!smoothInterpolation) {\n            // remove unnecessary keyframes same as their neighbors\n            var offset = i * stride,\n                offsetP = offset - stride,\n                offsetN = offset + stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              var value = values[offset + j];\n\n              if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n                keep = true;\n                break;\n              }\n            }\n          } else keep = true;\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var j = 0; j !== stride; ++j) values[writeOffset + j] = values[readOffset + j];\n          }\n\n          ++writeIndex;\n        }\n      } // flush last keyframe (compaction looks ahead)\n\n\n      if (lastIndex > 0) {\n        times[writeIndex] = times[lastIndex];\n\n        for (var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) values[writeOffset + j] = values[readOffset + j];\n\n        ++writeIndex;\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      }\n\n      return this;\n    }\n  };\n\n  function KeyframeTrackConstructor(name, times, values, interpolation) {\n    if (name === undefined) throw new Error(\"track name is undefined\");\n\n    if (times === undefined || times.length === 0) {\n      throw new Error(\"no keyframes in track named \" + name);\n    }\n\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n    this.validate();\n    this.optimize();\n  }\n  /**\n   *\n   * A Track of vectored keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n\n  function VectorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n  }\n\n  VectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n    constructor: VectorKeyframeTrack,\n    ValueTypeName: 'vector' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   * Spherical linear unit quaternion interpolant.\n   *\n   * @author tschw\n   */\n\n  function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  QuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: QuaternionLinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = i1 * stride,\n          alpha = (t - t0) / (t1 - t0);\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * A Track of quaternion keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function QuaternionKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n  }\n\n  QuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n    constructor: QuaternionKeyframeTrack,\n    ValueTypeName: 'quaternion',\n    // ValueBufferType is inherited\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodLinear: function (result) {\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n  });\n  /**\n   *\n   * A Track of numeric keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function NumberKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n  }\n\n  NumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n    constructor: NumberKeyframeTrack,\n    ValueTypeName: 'number' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   *\n   * A Track that interpolates Strings\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function StringKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n  }\n\n  StringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n    constructor: StringKeyframeTrack,\n    ValueTypeName: 'string',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined\n  });\n  /**\n   *\n   * A Track of Boolean keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function BooleanKeyframeTrack(name, times, values) {\n    KeyframeTrackConstructor.call(this, name, times, values);\n  }\n\n  BooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n    constructor: BooleanKeyframeTrack,\n    ValueTypeName: 'bool',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n    // representation of a single value and a custom interpolant that\n    // computes \"firstValue ^ isOdd( index )\".\n\n  });\n  /**\n   *\n   * A Track of keyframe values that represent color.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function ColorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrackConstructor.call(this, name, times, values, interpolation);\n  }\n\n  ColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrackPrototype), {\n    constructor: ColorKeyframeTrack,\n    ValueTypeName: 'color' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n    // Note: Very basic implementation and nothing special yet.\n    // However, this is the place for color space parameterization.\n\n  });\n  /**\n   *\n   * A timed sequence of keyframes for a specific property.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function KeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrackConstructor.apply(this, arguments);\n  }\n\n  KeyframeTrack.prototype = KeyframeTrackPrototype;\n  KeyframeTrackPrototype.constructor = KeyframeTrack; // Static methods:\n\n  Object.assign(KeyframeTrack, {\n    // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n    parse: function (json) {\n      if (json.type === undefined) {\n        throw new Error(\"track type undefined, can not parse\");\n      }\n\n      var trackType = KeyframeTrack._getTrackTypeForValueTypeName(json.type);\n\n      if (json.times === undefined) {\n        var times = [],\n            values = [];\n        AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n        json.times = times;\n        json.values = values;\n      } // derived classes can define a static parse method\n\n\n      if (trackType.parse !== undefined) {\n        return trackType.parse(json);\n      } else {\n        // by default, we asssume a constructor compatible with the base\n        return new trackType(json.name, json.times, json.values, json.interpolation);\n      }\n    },\n    toJSON: function (track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== undefined) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': AnimationUtils.convertArray(track.times, Array),\n          'values': AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    },\n    _getTrackTypeForValueTypeName: function (typeName) {\n      switch (typeName.toLowerCase()) {\n        case \"scalar\":\n        case \"double\":\n        case \"float\":\n        case \"number\":\n        case \"integer\":\n          return NumberKeyframeTrack;\n\n        case \"vector\":\n        case \"vector2\":\n        case \"vector3\":\n        case \"vector4\":\n          return VectorKeyframeTrack;\n\n        case \"color\":\n          return ColorKeyframeTrack;\n\n        case \"quaternion\":\n          return QuaternionKeyframeTrack;\n\n        case \"bool\":\n        case \"boolean\":\n          return BooleanKeyframeTrack;\n\n        case \"string\":\n          return StringKeyframeTrack;\n      }\n\n      throw new Error(\"Unsupported typeName: \" + typeName);\n    }\n  });\n  /**\n   *\n   * Reusable set of Tracks that represent an animation.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  function AnimationClip(name, duration, tracks) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration !== undefined ? duration : -1;\n    this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n\n    this.optimize();\n  }\n\n  Object.assign(AnimationClip, {\n    parse: function (json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.parse(jsonTracks[i]).scale(frameTime));\n      }\n\n      return new AnimationClip(json.name, json.duration, tracks);\n    },\n    toJSON: function (clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    },\n    CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = AnimationUtils.getKeyframeOrder(times);\n        times = AnimationUtils.sortedArray(times, 1, order);\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new AnimationClip(name, -1, tracks);\n    },\n    findByName: function (objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    },\n    CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var name in animationToMorphTargets) {\n        clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n      }\n\n      return clips;\n    },\n    // parse the animation.hierarchy format\n    parseAnimation: function (animation, bones) {\n      if (!animation) {\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n        return null;\n      }\n\n      var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var fps = animation.fps || 30;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n\n          for (var k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * (fps || 1.0);\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new AnimationClip(clipName, duration, tracks);\n      return clip;\n    }\n  });\n  Object.assign(AnimationClip.prototype, {\n    resetDuration: function () {\n      var tracks = this.tracks,\n          duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n    },\n    trim: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    },\n    optimize: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function MaterialLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.textures = {};\n  }\n\n  Object.assign(MaterialLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    setTextures: function (value) {\n      this.textures = value;\n    },\n    parse: function (json) {\n      var textures = this.textures;\n\n      function getTexture(name) {\n        if (textures[name] === undefined) {\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\n        }\n\n        return textures[name];\n      }\n\n      var material = new Materials[json.type]();\n      if (json.uuid !== undefined) material.uuid = json.uuid;\n      if (json.name !== undefined) material.name = json.name;\n      if (json.color !== undefined) material.color.setHex(json.color);\n      if (json.roughness !== undefined) material.roughness = json.roughness;\n      if (json.metalness !== undefined) material.metalness = json.metalness;\n      if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n      if (json.specular !== undefined) material.specular.setHex(json.specular);\n      if (json.shininess !== undefined) material.shininess = json.shininess;\n      if (json.clearCoat !== undefined) material.clearCoat = json.clearCoat;\n      if (json.clearCoatRoughness !== undefined) material.clearCoatRoughness = json.clearCoatRoughness;\n      if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n      if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n      if (json.fog !== undefined) material.fog = json.fog;\n      if (json.shading !== undefined) material.shading = json.shading;\n      if (json.blending !== undefined) material.blending = json.blending;\n      if (json.side !== undefined) material.side = json.side;\n      if (json.opacity !== undefined) material.opacity = json.opacity;\n      if (json.transparent !== undefined) material.transparent = json.transparent;\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n      if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n      if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n      if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n      if (json.skinning !== undefined) material.skinning = json.skinning;\n      if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets; // for PointsMaterial\n\n      if (json.size !== undefined) material.size = json.size;\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n      if (json.map !== undefined) material.map = getTexture(json.map);\n\n      if (json.alphaMap !== undefined) {\n        material.alphaMap = getTexture(json.alphaMap);\n        material.transparent = true;\n      }\n\n      if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n      if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n      if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n      if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n      if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n      if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n      if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n      if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n      if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n      if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n      return material;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferGeometryLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(BufferGeometryLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      var geometry = new BufferGeometry();\n      var index = json.data.index;\n\n      if (index !== undefined) {\n        var typedArray = new TYPED_ARRAYS[index.type](index.array);\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n        geometry.addAttribute(key, new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var i = 0, n = groups.length; i !== n; ++i) {\n          var group = groups[i];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n      }\n\n      return geometry;\n    }\n  });\n  var TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    // Workaround for IE11 pre KB2929437. See #11440\n    Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Loader() {\n    this.onLoadStart = function () {};\n\n    this.onLoadProgress = function () {};\n\n    this.onLoadComplete = function () {};\n  }\n\n  Loader.Handlers = {\n    handlers: [],\n    add: function (regex, loader) {\n      this.handlers.push(regex, loader);\n    },\n    get: function (file) {\n      var handlers = this.handlers;\n\n      for (var i = 0, l = handlers.length; i < l; i += 2) {\n        var regex = handlers[i];\n        var loader = handlers[i + 1];\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    }\n  };\n  Object.assign(Loader.prototype, {\n    crossOrigin: undefined,\n    extractUrlBase: function (url) {\n      var parts = url.split('/');\n      if (parts.length === 1) return './';\n      parts.pop();\n      return parts.join('/') + '/';\n    },\n    initMaterials: function (materials, texturePath, crossOrigin) {\n      var array = [];\n\n      for (var i = 0; i < materials.length; ++i) {\n        array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n      }\n\n      return array;\n    },\n    createMaterial: function () {\n      var BlendingMode = {\n        NoBlending: NoBlending,\n        NormalBlending: NormalBlending,\n        AdditiveBlending: AdditiveBlending,\n        SubtractiveBlending: SubtractiveBlending,\n        MultiplyBlending: MultiplyBlending,\n        CustomBlending: CustomBlending\n      };\n      var color = new Color();\n      var textureLoader = new TextureLoader();\n      var materialLoader = new MaterialLoader();\n      return function createMaterial(m, texturePath, crossOrigin) {\n        // convert from old material format\n        var textures = {};\n\n        function loadTexture(path, repeat, offset, wrap, anisotropy) {\n          var fullPath = texturePath + path;\n          var loader = Loader.Handlers.get(fullPath);\n          var texture;\n\n          if (loader !== null) {\n            texture = loader.load(fullPath);\n          } else {\n            textureLoader.setCrossOrigin(crossOrigin);\n            texture = textureLoader.load(fullPath);\n          }\n\n          if (repeat !== undefined) {\n            texture.repeat.fromArray(repeat);\n            if (repeat[0] !== 1) texture.wrapS = RepeatWrapping;\n            if (repeat[1] !== 1) texture.wrapT = RepeatWrapping;\n          }\n\n          if (offset !== undefined) {\n            texture.offset.fromArray(offset);\n          }\n\n          if (wrap !== undefined) {\n            if (wrap[0] === 'repeat') texture.wrapS = RepeatWrapping;\n            if (wrap[0] === 'mirror') texture.wrapS = MirroredRepeatWrapping;\n            if (wrap[1] === 'repeat') texture.wrapT = RepeatWrapping;\n            if (wrap[1] === 'mirror') texture.wrapT = MirroredRepeatWrapping;\n          }\n\n          if (anisotropy !== undefined) {\n            texture.anisotropy = anisotropy;\n          }\n\n          var uuid = _Math.generateUUID();\n\n          textures[uuid] = texture;\n          return uuid;\n        } //\n\n\n        var json = {\n          uuid: _Math.generateUUID(),\n          type: 'MeshLambertMaterial'\n        };\n\n        for (var name in m) {\n          var value = m[name];\n\n          switch (name) {\n            case 'DbgColor':\n            case 'DbgIndex':\n            case 'opticalDensity':\n            case 'illumination':\n              break;\n\n            case 'DbgName':\n              json.name = value;\n              break;\n\n            case 'blending':\n              json.blending = BlendingMode[value];\n              break;\n\n            case 'colorAmbient':\n            case 'mapAmbient':\n              console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n              break;\n\n            case 'colorDiffuse':\n              json.color = color.fromArray(value).getHex();\n              break;\n\n            case 'colorSpecular':\n              json.specular = color.fromArray(value).getHex();\n              break;\n\n            case 'colorEmissive':\n              json.emissive = color.fromArray(value).getHex();\n              break;\n\n            case 'specularCoef':\n              json.shininess = value;\n              break;\n\n            case 'shading':\n              if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n              if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n              if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n              break;\n\n            case 'mapDiffuse':\n              json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n              break;\n\n            case 'mapDiffuseRepeat':\n            case 'mapDiffuseOffset':\n            case 'mapDiffuseWrap':\n            case 'mapDiffuseAnisotropy':\n              break;\n\n            case 'mapEmissive':\n              json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n              break;\n\n            case 'mapEmissiveRepeat':\n            case 'mapEmissiveOffset':\n            case 'mapEmissiveWrap':\n            case 'mapEmissiveAnisotropy':\n              break;\n\n            case 'mapLight':\n              json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n              break;\n\n            case 'mapLightRepeat':\n            case 'mapLightOffset':\n            case 'mapLightWrap':\n            case 'mapLightAnisotropy':\n              break;\n\n            case 'mapAO':\n              json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n              break;\n\n            case 'mapAORepeat':\n            case 'mapAOOffset':\n            case 'mapAOWrap':\n            case 'mapAOAnisotropy':\n              break;\n\n            case 'mapBump':\n              json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n              break;\n\n            case 'mapBumpScale':\n              json.bumpScale = value;\n              break;\n\n            case 'mapBumpRepeat':\n            case 'mapBumpOffset':\n            case 'mapBumpWrap':\n            case 'mapBumpAnisotropy':\n              break;\n\n            case 'mapNormal':\n              json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n              break;\n\n            case 'mapNormalFactor':\n              json.normalScale = [value, value];\n              break;\n\n            case 'mapNormalRepeat':\n            case 'mapNormalOffset':\n            case 'mapNormalWrap':\n            case 'mapNormalAnisotropy':\n              break;\n\n            case 'mapSpecular':\n              json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n              break;\n\n            case 'mapSpecularRepeat':\n            case 'mapSpecularOffset':\n            case 'mapSpecularWrap':\n            case 'mapSpecularAnisotropy':\n              break;\n\n            case 'mapMetalness':\n              json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n              break;\n\n            case 'mapMetalnessRepeat':\n            case 'mapMetalnessOffset':\n            case 'mapMetalnessWrap':\n            case 'mapMetalnessAnisotropy':\n              break;\n\n            case 'mapRoughness':\n              json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n              break;\n\n            case 'mapRoughnessRepeat':\n            case 'mapRoughnessOffset':\n            case 'mapRoughnessWrap':\n            case 'mapRoughnessAnisotropy':\n              break;\n\n            case 'mapAlpha':\n              json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n              break;\n\n            case 'mapAlphaRepeat':\n            case 'mapAlphaOffset':\n            case 'mapAlphaWrap':\n            case 'mapAlphaAnisotropy':\n              break;\n\n            case 'flipSided':\n              json.side = BackSide;\n              break;\n\n            case 'doubleSided':\n              json.side = DoubleSide;\n              break;\n\n            case 'transparency':\n              console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n              json.opacity = value;\n              break;\n\n            case 'depthTest':\n            case 'depthWrite':\n            case 'colorWrite':\n            case 'opacity':\n            case 'reflectivity':\n            case 'transparent':\n            case 'visible':\n            case 'wireframe':\n              json[name] = value;\n              break;\n\n            case 'vertexColors':\n              if (value === true) json.vertexColors = VertexColors;\n              if (value === 'face') json.vertexColors = FaceColors;\n              break;\n\n            default:\n              console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n              break;\n          }\n        }\n\n        if (json.type === 'MeshBasicMaterial') delete json.emissive;\n        if (json.type !== 'MeshPhongMaterial') delete json.specular;\n        if (json.opacity < 1) json.transparent = true;\n        materialLoader.setTextures(textures);\n        return materialLoader.parse(json);\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function JSONLoader(manager) {\n    if (typeof manager === 'boolean') {\n      console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n      manager = undefined;\n    }\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.withCredentials = false;\n  }\n\n  Object.assign(JSONLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texturePath = this.texturePath && typeof this.texturePath === \"string\" ? this.texturePath : Loader.prototype.extractUrlBase(url);\n      var loader = new FileLoader(this.manager);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        var json = JSON.parse(text);\n        var metadata = json.metadata;\n\n        if (metadata !== undefined) {\n          var type = metadata.type;\n\n          if (type !== undefined) {\n            if (type.toLowerCase() === 'object') {\n              console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n              return;\n            }\n\n            if (type.toLowerCase() === 'scene') {\n              console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n              return;\n            }\n          }\n        }\n\n        var object = scope.parse(json, texturePath);\n        onLoad(object.geometry, object.materials);\n      }, onProgress, onError);\n    },\n    setTexturePath: function (value) {\n      this.texturePath = value;\n    },\n    parse: function () {\n      function parseModel(json, geometry) {\n        function isBitSet(value, position) {\n          return value & 1 << position;\n        }\n\n        var i,\n            j,\n            fi,\n            offset,\n            zLength,\n            colorIndex,\n            normalIndex,\n            uvIndex,\n            materialIndex,\n            type,\n            isQuad,\n            hasMaterial,\n            hasFaceVertexUv,\n            hasFaceNormal,\n            hasFaceVertexNormal,\n            hasFaceColor,\n            hasFaceVertexColor,\n            vertex,\n            face,\n            faceA,\n            faceB,\n            hex,\n            normal,\n            uvLayer,\n            uv,\n            u,\n            v,\n            faces = json.faces,\n            vertices = json.vertices,\n            normals = json.normals,\n            colors = json.colors,\n            scale = json.scale,\n            nUvLayers = 0;\n\n        if (json.uvs !== undefined) {\n          // disregard empty arrays\n          for (i = 0; i < json.uvs.length; i++) {\n            if (json.uvs[i].length) nUvLayers++;\n          }\n\n          for (i = 0; i < nUvLayers; i++) {\n            geometry.faceVertexUvs[i] = [];\n          }\n        }\n\n        offset = 0;\n        zLength = vertices.length;\n\n        while (offset < zLength) {\n          vertex = new Vector3();\n          vertex.x = vertices[offset++] * scale;\n          vertex.y = vertices[offset++] * scale;\n          vertex.z = vertices[offset++] * scale;\n          geometry.vertices.push(vertex);\n        }\n\n        offset = 0;\n        zLength = faces.length;\n\n        while (offset < zLength) {\n          type = faces[offset++];\n          isQuad = isBitSet(type, 0);\n          hasMaterial = isBitSet(type, 1);\n          hasFaceVertexUv = isBitSet(type, 3);\n          hasFaceNormal = isBitSet(type, 4);\n          hasFaceVertexNormal = isBitSet(type, 5);\n          hasFaceColor = isBitSet(type, 6);\n          hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n          if (isQuad) {\n            faceA = new Face3();\n            faceA.a = faces[offset];\n            faceA.b = faces[offset + 1];\n            faceA.c = faces[offset + 3];\n            faceB = new Face3();\n            faceB.a = faces[offset + 1];\n            faceB.b = faces[offset + 2];\n            faceB.c = faces[offset + 3];\n            offset += 4;\n\n            if (hasMaterial) {\n              materialIndex = faces[offset++];\n              faceA.materialIndex = materialIndex;\n              faceB.materialIndex = materialIndex;\n            } // to get face <=> uv index correspondence\n\n\n            fi = geometry.faces.length;\n\n            if (hasFaceVertexUv) {\n              for (i = 0; i < nUvLayers; i++) {\n                uvLayer = json.uvs[i];\n                geometry.faceVertexUvs[i][fi] = [];\n                geometry.faceVertexUvs[i][fi + 1] = [];\n\n                for (j = 0; j < 4; j++) {\n                  uvIndex = faces[offset++];\n                  u = uvLayer[uvIndex * 2];\n                  v = uvLayer[uvIndex * 2 + 1];\n                  uv = new Vector2(u, v);\n                  if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                  if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n                }\n              }\n            }\n\n            if (hasFaceNormal) {\n              normalIndex = faces[offset++] * 3;\n              faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              faceB.normal.copy(faceA.normal);\n            }\n\n            if (hasFaceVertexNormal) {\n              for (i = 0; i < 4; i++) {\n                normalIndex = faces[offset++] * 3;\n                normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n                if (i !== 2) faceA.vertexNormals.push(normal);\n                if (i !== 0) faceB.vertexNormals.push(normal);\n              }\n            }\n\n            if (hasFaceColor) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              faceA.color.setHex(hex);\n              faceB.color.setHex(hex);\n            }\n\n            if (hasFaceVertexColor) {\n              for (i = 0; i < 4; i++) {\n                colorIndex = faces[offset++];\n                hex = colors[colorIndex];\n                if (i !== 2) faceA.vertexColors.push(new Color(hex));\n                if (i !== 0) faceB.vertexColors.push(new Color(hex));\n              }\n            }\n\n            geometry.faces.push(faceA);\n            geometry.faces.push(faceB);\n          } else {\n            face = new Face3();\n            face.a = faces[offset++];\n            face.b = faces[offset++];\n            face.c = faces[offset++];\n\n            if (hasMaterial) {\n              materialIndex = faces[offset++];\n              face.materialIndex = materialIndex;\n            } // to get face <=> uv index correspondence\n\n\n            fi = geometry.faces.length;\n\n            if (hasFaceVertexUv) {\n              for (i = 0; i < nUvLayers; i++) {\n                uvLayer = json.uvs[i];\n                geometry.faceVertexUvs[i][fi] = [];\n\n                for (j = 0; j < 3; j++) {\n                  uvIndex = faces[offset++];\n                  u = uvLayer[uvIndex * 2];\n                  v = uvLayer[uvIndex * 2 + 1];\n                  uv = new Vector2(u, v);\n                  geometry.faceVertexUvs[i][fi].push(uv);\n                }\n              }\n            }\n\n            if (hasFaceNormal) {\n              normalIndex = faces[offset++] * 3;\n              face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            }\n\n            if (hasFaceVertexNormal) {\n              for (i = 0; i < 3; i++) {\n                normalIndex = faces[offset++] * 3;\n                normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n                face.vertexNormals.push(normal);\n              }\n            }\n\n            if (hasFaceColor) {\n              colorIndex = faces[offset++];\n              face.color.setHex(colors[colorIndex]);\n            }\n\n            if (hasFaceVertexColor) {\n              for (i = 0; i < 3; i++) {\n                colorIndex = faces[offset++];\n                face.vertexColors.push(new Color(colors[colorIndex]));\n              }\n            }\n\n            geometry.faces.push(face);\n          }\n        }\n      }\n\n      function parseSkin(json, geometry) {\n        var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n        if (json.skinWeights) {\n          for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n            var x = json.skinWeights[i];\n            var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n            var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n            var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n            geometry.skinWeights.push(new Vector4(x, y, z, w));\n          }\n        }\n\n        if (json.skinIndices) {\n          for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n            var a = json.skinIndices[i];\n            var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n            var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n            var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n            geometry.skinIndices.push(new Vector4(a, b, c, d));\n          }\n        }\n\n        geometry.bones = json.bones;\n\n        if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n          console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n        }\n      }\n\n      function parseMorphing(json, geometry) {\n        var scale = json.scale;\n\n        if (json.morphTargets !== undefined) {\n          for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n            geometry.morphTargets[i] = {};\n            geometry.morphTargets[i].name = json.morphTargets[i].name;\n            geometry.morphTargets[i].vertices = [];\n            var dstVertices = geometry.morphTargets[i].vertices;\n            var srcVertices = json.morphTargets[i].vertices;\n\n            for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n              var vertex = new Vector3();\n              vertex.x = srcVertices[v] * scale;\n              vertex.y = srcVertices[v + 1] * scale;\n              vertex.z = srcVertices[v + 2] * scale;\n              dstVertices.push(vertex);\n            }\n          }\n        }\n\n        if (json.morphColors !== undefined && json.morphColors.length > 0) {\n          console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n          var faces = geometry.faces;\n          var morphColors = json.morphColors[0].colors;\n\n          for (var i = 0, l = faces.length; i < l; i++) {\n            faces[i].color.fromArray(morphColors, i * 3);\n          }\n        }\n      }\n\n      function parseAnimations(json, geometry) {\n        var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n        var animations = [];\n\n        if (json.animation !== undefined) {\n          animations.push(json.animation);\n        }\n\n        if (json.animations !== undefined) {\n          if (json.animations.length) {\n            animations = animations.concat(json.animations);\n          } else {\n            animations.push(json.animations);\n          }\n        }\n\n        for (var i = 0; i < animations.length; i++) {\n          var clip = AnimationClip.parseAnimation(animations[i], geometry.bones);\n          if (clip) outputAnimations.push(clip);\n        } // parse implicit morph animations\n\n\n        if (geometry.morphTargets) {\n          // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n          var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n          outputAnimations = outputAnimations.concat(morphAnimationClips);\n        }\n\n        if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n      }\n\n      return function (json, texturePath) {\n        if (json.data !== undefined) {\n          // Geometry 4.0 spec\n          json = json.data;\n        }\n\n        if (json.scale !== undefined) {\n          json.scale = 1.0 / json.scale;\n        } else {\n          json.scale = 1.0;\n        }\n\n        var geometry = new Geometry();\n        parseModel(json, geometry);\n        parseSkin(json, geometry);\n        parseMorphing(json, geometry);\n        parseAnimations(json, geometry);\n        geometry.computeFaceNormals();\n        geometry.computeBoundingSphere();\n\n        if (json.materials === undefined || json.materials.length === 0) {\n          return {\n            geometry: geometry\n          };\n        } else {\n          var materials = Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n          return {\n            geometry: geometry,\n            materials: materials\n          };\n        }\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ObjectLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.texturePath = '';\n  }\n\n  Object.assign(ObjectLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      if (this.texturePath === '') {\n        this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n      }\n\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.');\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    },\n    setTexturePath: function (value) {\n      this.texturePath = value;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n    },\n    parse: function (json, onLoad) {\n      var geometries = this.parseGeometries(json.geometries);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials);\n\n      if (json.animations) {\n        object.animations = this.parseAnimations(json.animations);\n      }\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    },\n    parseGeometries: function (json) {\n      var geometries = {};\n\n      if (json !== undefined) {\n        var geometryLoader = new JSONLoader();\n        var bufferGeometryLoader = new BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'PlaneGeometry':\n            case 'PlaneBufferGeometry':\n              geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n              break;\n\n            case 'BoxGeometry':\n            case 'BoxBufferGeometry':\n            case 'CubeGeometry':\n              // backwards compatible\n              geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n              break;\n\n            case 'CircleGeometry':\n            case 'CircleBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'CylinderGeometry':\n            case 'CylinderBufferGeometry':\n              geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'ConeGeometry':\n            case 'ConeBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'SphereGeometry':\n            case 'SphereBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'DodecahedronGeometry':\n            case 'IcosahedronGeometry':\n            case 'OctahedronGeometry':\n            case 'TetrahedronGeometry':\n              geometry = new Geometries[data.type](data.radius, data.detail);\n              break;\n\n            case 'RingGeometry':\n            case 'RingBufferGeometry':\n              geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'TorusGeometry':\n            case 'TorusBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n              break;\n\n            case 'TorusKnotGeometry':\n            case 'TorusKnotBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n              break;\n\n            case 'LatheGeometry':\n            case 'LatheBufferGeometry':\n              geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n              break;\n\n            case 'BufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              geometry = geometryLoader.parse(data, this.texturePath).geometry;\n              break;\n\n            default:\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n              continue;\n          }\n\n          geometry.uuid = data.uuid;\n          if (data.name !== undefined) geometry.name = data.name;\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    },\n    parseMaterials: function (json, textures) {\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.type === 'MultiMaterial') {\n            // Deprecated\n            var array = [];\n\n            for (var j = 0; j < data.materials.length; j++) {\n              array.push(loader.parse(data.materials[j]));\n            }\n\n            materials[data.uuid] = array;\n          } else {\n            materials[data.uuid] = loader.parse(data);\n          }\n        }\n      }\n\n      return materials;\n    },\n    parseAnimations: function (json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var clip = AnimationClip.parse(json[i]);\n        animations.push(clip);\n      }\n\n      return animations;\n    },\n    parseImages: function (json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        }, undefined, function () {\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        });\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var image = json[i];\n          var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n          images[image.uuid] = loadImage(path);\n        }\n      }\n\n      return images;\n    },\n    parseTextures: function (json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture = new Texture(images[data.image]);\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    },\n    parseObject: function () {\n      var matrix = new Matrix4();\n      return function parseObject(data, geometries, materials) {\n        var object;\n\n        function getGeometry(name) {\n          if (geometries[name] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined geometry', name);\n          }\n\n          return geometries[name];\n        }\n\n        function getMaterial(name) {\n          if (name === undefined) return undefined;\n\n          if (Array.isArray(name)) {\n            var array = [];\n\n            for (var i = 0, l = name.length; i < l; i++) {\n              var uuid = name[i];\n\n              if (materials[uuid] === undefined) {\n                console.warn('THREE.ObjectLoader: Undefined material', uuid);\n              }\n\n              array.push(materials[uuid]);\n            }\n\n            return array;\n          }\n\n          if (materials[name] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', name);\n          }\n\n          return materials[name];\n        }\n\n        switch (data.type) {\n          case 'Scene':\n            object = new Scene();\n\n            if (data.background !== undefined) {\n              if (Number.isInteger(data.background)) {\n                object.background = new Color(data.background);\n              }\n            }\n\n            if (data.fog !== undefined) {\n              if (data.fog.type === 'Fog') {\n                object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n              } else if (data.fog.type === 'FogExp2') {\n                object.fog = new FogExp2(data.fog.color, data.fog.density);\n              }\n            }\n\n            break;\n\n          case 'PerspectiveCamera':\n            object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n            if (data.focus !== undefined) object.focus = data.focus;\n            if (data.zoom !== undefined) object.zoom = data.zoom;\n            if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n            if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n            if (data.view !== undefined) object.view = Object.assign({}, data.view);\n            break;\n\n          case 'OrthographicCamera':\n            object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n            break;\n\n          case 'AmbientLight':\n            object = new AmbientLight(data.color, data.intensity);\n            break;\n\n          case 'DirectionalLight':\n            object = new DirectionalLight(data.color, data.intensity);\n            break;\n\n          case 'PointLight':\n            object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n            break;\n\n          case 'RectAreaLight':\n            object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n            break;\n\n          case 'SpotLight':\n            object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n            break;\n\n          case 'HemisphereLight':\n            object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n            break;\n\n          case 'SkinnedMesh':\n            console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n          case 'Mesh':\n            var geometry = getGeometry(data.geometry);\n            var material = getMaterial(data.material);\n\n            if (geometry.bones && geometry.bones.length > 0) {\n              object = new SkinnedMesh(geometry, material);\n            } else {\n              object = new Mesh(geometry, material);\n            }\n\n            break;\n\n          case 'LOD':\n            object = new LOD();\n            break;\n\n          case 'Line':\n            object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n            break;\n\n          case 'LineLoop':\n            object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'LineSegments':\n            object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'PointCloud':\n          case 'Points':\n            object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n            break;\n\n          case 'Sprite':\n            object = new Sprite(getMaterial(data.material));\n            break;\n\n          case 'Group':\n            object = new Group();\n            break;\n\n          default:\n            object = new Object3D();\n        }\n\n        object.uuid = data.uuid;\n        if (data.name !== undefined) object.name = data.name;\n\n        if (data.matrix !== undefined) {\n          matrix.fromArray(data.matrix);\n          matrix.decompose(object.position, object.quaternion, object.scale);\n        } else {\n          if (data.position !== undefined) object.position.fromArray(data.position);\n          if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n          if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n          if (data.scale !== undefined) object.scale.fromArray(data.scale);\n        }\n\n        if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n        if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n        if (data.shadow) {\n          if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n          if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n          if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n          if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n        }\n\n        if (data.visible !== undefined) object.visible = data.visible;\n        if (data.userData !== undefined) object.userData = data.userData;\n\n        if (data.children !== undefined) {\n          for (var child in data.children) {\n            object.add(this.parseObject(data.children[child], geometries, materials));\n          }\n        }\n\n        if (data.type === 'LOD') {\n          var levels = data.levels;\n\n          for (var l = 0; l < levels.length; l++) {\n            var level = levels[l];\n            var child = object.getObjectByProperty('uuid', level.object);\n\n            if (child !== undefined) {\n              object.addLevel(child, level.distance);\n            }\n          }\n        }\n\n        return object;\n      };\n    }()\n  });\n  var TEXTURE_MAPPING = {\n    UVMapping: UVMapping,\n    CubeReflectionMapping: CubeReflectionMapping,\n    CubeRefractionMapping: CubeRefractionMapping,\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n    SphericalReflectionMapping: SphericalReflectionMapping,\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\n    CubeUVRefractionMapping: CubeUVRefractionMapping\n  };\n  var TEXTURE_WRAPPING = {\n    RepeatWrapping: RepeatWrapping,\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\n    MirroredRepeatWrapping: MirroredRepeatWrapping\n  };\n  var TEXTURE_FILTER = {\n    NearestFilter: NearestFilter,\n    NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n    NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n    LinearFilter: LinearFilter,\n    LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n    LinearMipMapLinearFilter: LinearMipMapLinearFilter\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Bezier Curves formulas obtained from\n   * http://en.wikipedia.org/wiki/Bézier_curve\n   */\n\n  function CatmullRom(t, p0, p1, p2, p3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  } //\n\n\n  function QuadraticBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  }\n\n  function QuadraticBezierP1(t, p) {\n    return 2 * (1 - t) * t * p;\n  }\n\n  function QuadraticBezierP2(t, p) {\n    return t * t * p;\n  }\n\n  function QuadraticBezier(t, p0, p1, p2) {\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n  } //\n\n\n  function CubicBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  }\n\n  function CubicBezierP1(t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  }\n\n  function CubicBezierP2(t, p) {\n    return 3 * (1 - t) * t * t * p;\n  }\n\n  function CubicBezierP3(t, p) {\n    return t * t * t * p;\n  }\n\n  function CubicBezier(t, p0, p1, p2, p3) {\n    return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Extensible curve object\n   *\n   * Some common of curve methods:\n   * .getPoint(t), getTangent(t)\n   * .getPointAt(u), getTangentAt(u)\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following curves inherit from THREE.Curve:\n   *\n   * -- 2D curves --\n   * THREE.ArcCurve\n   * THREE.CubicBezierCurve\n   * THREE.EllipseCurve\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.SplineCurve\n   *\n   * -- 3D curves --\n   * THREE.CatmullRomCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath.\n   *\n   **/\n\n  /**************************************************************\n   *\tAbstract Curve base class\n   **************************************************************/\n\n\n  function Curve() {\n    this.arcLengthDivisions = 200;\n  }\n\n  Object.assign(Curve.prototype, {\n    // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n    getPoint: function () {\n      console.warn('THREE.Curve: .getPoint() not implemented.');\n      return null;\n    },\n    // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n    getPointAt: function (u) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t);\n    },\n    // Get sequence of points using getPoint( t )\n    getPoints: function (divisions) {\n      if (divisions === undefined) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    },\n    // Get sequence of points using getPointAt( u )\n    getSpacedPoints: function (divisions) {\n      if (divisions === undefined) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    },\n    // Get total curve arc length\n    getLength: function () {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    },\n    // Get list of cumulative segment lengths\n    getLengths: function (divisions) {\n      if (divisions === undefined) divisions = this.arcLengthDivisions;\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var p,\n          sum = 0;\n      cache.push(0);\n\n      for (p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n    },\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.getLengths();\n    },\n    // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n    getUtoTmapping: function (u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0,\n          il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high;\n\n      if (arcLengths[i] === targetArcLength) {\n        return i / (il - 1);\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    },\n    // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n    getTangent: function (t) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) t1 = 0;\n      if (t2 > 1) t2 = 1;\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var vec = pt2.clone().sub(pt1);\n      return vec.normalize();\n    },\n    getTangentAt: function (u) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t);\n    },\n    computeFrenetFrames: function (segments, closed) {\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n      var normal = new Vector3();\n      var tangents = [];\n      var normals = [];\n      var binormals = [];\n      var vec = new Vector3();\n      var mat = new Matrix4();\n      var i, u, theta; // compute the tangent vectors for each segment on the curve\n\n      for (i = 0; i <= segments; i++) {\n        u = i / segments;\n        tangents[i] = this.getTangentAt(u);\n        tangents[i].normalize();\n      } // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the minimum tangent xyz component\n\n\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      var min = Number.MAX_VALUE;\n      var tx = Math.abs(tangents[0].x);\n      var ty = Math.abs(tangents[0].y);\n      var tz = Math.abs(tangents[0].z);\n\n      if (tx <= min) {\n        min = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= min) {\n        min = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= min) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n      for (i = 1; i <= segments; i++) {\n        normals[i] = normals[i - 1].clone();\n        binormals[i] = binormals[i - 1].clone();\n        vec.crossVectors(tangents[i - 1], tangents[i]);\n\n        if (vec.length() > Number.EPSILON) {\n          vec.normalize();\n          theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n          normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n        }\n\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n      if (closed === true) {\n        theta = Math.acos(_Math.clamp(normals[0].dot(normals[segments]), -1, 1));\n        theta /= segments;\n\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n          theta = -theta;\n        }\n\n        for (i = 1; i <= segments; i++) {\n          // twist a little...\n          normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n          binormals[i].crossVectors(tangents[i], normals[i]);\n        }\n      }\n\n      return {\n        tangents: tangents,\n        normals: normals,\n        binormals: binormals\n      };\n    }\n  });\n\n  function LineCurve(v1, v2) {\n    Curve.call(this);\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  LineCurve.prototype = Object.create(Curve.prototype);\n  LineCurve.prototype.constructor = LineCurve;\n  LineCurve.prototype.isLineCurve = true;\n\n  LineCurve.prototype.getPoint = function (t) {\n    if (t === 1) {\n      return this.v2.clone();\n    }\n\n    var point = this.v2.clone().sub(this.v1);\n    point.multiplyScalar(t).add(this.v1);\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve.prototype.getPointAt = function (u) {\n    return this.getPoint(u);\n  };\n\n  LineCurve.prototype.getTangent = function (t) {\n    var tangent = this.v2.clone().sub(this.v1);\n    return tangent.normalize();\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   **/\n\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *  curves, but retains the api of a curve\n   **************************************************************/\n\n\n  function CurvePath() {\n    Curve.call(this);\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n\n  CurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n    constructor: CurvePath,\n    add: function (curve) {\n      this.curves.push(curve);\n    },\n    closePath: function () {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new LineCurve(endPoint, startPoint));\n      }\n    },\n    // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n    getPoint: function (t) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    },\n    // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n    getLength: function () {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    },\n    // cacheLengths must be recalculated.\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getCurveLengths();\n    },\n    // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n    getCurveLengths: function () {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [],\n          sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    },\n    getSpacedPoints: function (divisions) {\n      if (divisions === undefined) divisions = 40;\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    getPoints: function (divisions) {\n      divisions = divisions || 12;\n      var points = [],\n          last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && curve.isLineCurve ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n\n    /**************************************************************\n     *\tCreate Geometries Helpers\n     **************************************************************/\n    /// Generate geometry from path points (for Line or Points objects)\n    createPointsGeometry: function (divisions) {\n      var pts = this.getPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    // Generate geometry from equidistant sampling along the path\n    createSpacedPointsGeometry: function (divisions) {\n      var pts = this.getSpacedPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createGeometry: function (points) {\n      var geometry = new Geometry();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        geometry.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return geometry;\n    }\n  });\n\n  function EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    Curve.call(this);\n    this.aX = aX;\n    this.aY = aY;\n    this.xRadius = xRadius;\n    this.yRadius = yRadius;\n    this.aStartAngle = aStartAngle;\n    this.aEndAngle = aEndAngle;\n    this.aClockwise = aClockwise;\n    this.aRotation = aRotation || 0;\n  }\n\n  EllipseCurve.prototype = Object.create(Curve.prototype);\n  EllipseCurve.prototype.constructor = EllipseCurve;\n  EllipseCurve.prototype.isEllipseCurve = true;\n\n  EllipseCurve.prototype.getPoint = function (t) {\n    var twoPi = Math.PI * 2;\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\n    var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n    while (deltaAngle < 0) deltaAngle += twoPi;\n\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    var angle = this.aStartAngle + t * deltaAngle;\n    var x = this.aX + this.xRadius * Math.cos(angle);\n    var y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      var cos = Math.cos(this.aRotation);\n      var sin = Math.sin(this.aRotation);\n      var tx = x - this.aX;\n      var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return new Vector2(x, y);\n  };\n\n  function SplineCurve(points\n  /* array of Vector2 */\n  ) {\n    Curve.call(this);\n    this.points = points === undefined ? [] : points;\n  }\n\n  SplineCurve.prototype = Object.create(Curve.prototype);\n  SplineCurve.prototype.constructor = SplineCurve;\n  SplineCurve.prototype.isSplineCurve = true;\n\n  SplineCurve.prototype.getPoint = function (t) {\n    var points = this.points;\n    var point = (points.length - 1) * t;\n    var intPoint = Math.floor(point);\n    var weight = point - intPoint;\n    var point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    var point1 = points[intPoint];\n    var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    return new Vector2(CatmullRom(weight, point0.x, point1.x, point2.x, point3.x), CatmullRom(weight, point0.y, point1.y, point2.y, point3.y));\n  };\n\n  function CubicBezierCurve(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n\n  CubicBezierCurve.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n  CubicBezierCurve.prototype.getPoint = function (t) {\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    return new Vector2(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n  };\n\n  function QuadraticBezierCurve(v0, v1, v2) {\n    Curve.call(this);\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  QuadraticBezierCurve.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n  QuadraticBezierCurve.prototype.getPoint = function (t) {\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    return new Vector2(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n  };\n\n  var PathPrototype = Object.assign(Object.create(CurvePath.prototype), {\n    fromPoints: function (vectors) {\n      this.moveTo(vectors[0].x, vectors[0].y);\n\n      for (var i = 1, l = vectors.length; i < l; i++) {\n        this.lineTo(vectors[i].x, vectors[i].y);\n      }\n    },\n    moveTo: function (x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n    },\n    lineTo: function (x, y) {\n      var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    splineThru: function (pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n    },\n    arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    },\n    absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Creates free form 2d path using series of points, lines or curves.\n   **/\n\n  function Path(points) {\n    CurvePath.call(this);\n    this.currentPoint = new Vector2();\n\n    if (points) {\n      this.fromPoints(points);\n    }\n  }\n\n  Path.prototype = PathPrototype;\n  PathPrototype.constructor = Path;\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Defines a 2d shape plane using paths.\n   **/\n  // STEP 1 Create a path.\n  // STEP 2 Turn path into shape.\n  // STEP 3 ExtrudeGeometry takes in Shape/Shapes\n  // STEP 3a - Extract points from each shape, turn to vertices\n  // STEP 3b - Triangulate each shape, add faces.\n\n  function Shape() {\n    Path.apply(this, arguments);\n    this.holes = [];\n  }\n\n  Shape.prototype = Object.assign(Object.create(PathPrototype), {\n    constructor: Shape,\n    getPointsHoles: function (divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    },\n    // Get points of shape and holes (keypoints based on segments parameter)\n    extractAllPoints: function (divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    },\n    extractPoints: function (divisions) {\n      return this.extractAllPoints(divisions);\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n   **/\n\n  function ShapePath() {\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  Object.assign(ShapePath.prototype, {\n    moveTo: function (x, y) {\n      this.currentPath = new Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n    },\n    lineTo: function (x, y) {\n      this.currentPath.lineTo(x, y);\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n    },\n    splineThru: function (pts) {\n      this.currentPath.splineThru(pts);\n    },\n    toShapes: function (isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var tmpPath = inSubpaths[i];\n          var tmpShape = new Shape();\n          tmpShape.curves = tmpPath.curves;\n          shapes.push(tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n        // toggling of inside/outside at every single! intersection point of an edge\n        //  with the horizontal line through inPt, left of inPt\n        //  not counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n              if (perpEdge === 0) return true; // inPt is on contour ?\n\n              if (perpEdge < 0) continue;\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\n            // edge lies on the same horizontal line as inPt\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n            // continue;\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n      if (subPaths.length === 0) return [];\n      if (noHoles === true) return toShapesNoHoles(subPaths);\n      var solid,\n          tmpPath,\n          tmpShape,\n          shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n          newShapes[mainIdx] = {\n            s: new Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n          if (holesFirst) mainIdx++;\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = [];\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          var sho = newShapeHoles[sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (sIdx !== s2Idx) toChange.push({\n                  froms: sIdx,\n                  tos: s2Idx,\n                  hole: hIdx\n                });\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[sIdx].push(ho);\n            }\n          }\n        } // console.log(\"ambiguous: \", ambiguous);\n\n\n        if (toChange.length > 0) {\n          // console.log(\"to change: \", toChange);\n          if (!ambiguous) newShapeHoles = betterShapeHoles;\n        }\n      }\n\n      var tmpHoles;\n\n      for (var i = 0, il = newShapes.length; i < il; i++) {\n        tmpShape = newShapes[i].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[i];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Font(data) {\n    this.data = data;\n  }\n\n  Object.assign(Font.prototype, {\n    isFont: true,\n    generateShapes: function (text, size, divisions) {\n      function createPaths(text) {\n        var chars = String(text).split('');\n        var scale = size / data.resolution;\n        var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n        var offsetX = 0,\n            offsetY = 0;\n        var paths = [];\n\n        for (var i = 0; i < chars.length; i++) {\n          var char = chars[i];\n\n          if (char === '\\n') {\n            offsetX = 0;\n            offsetY -= line_height;\n          } else {\n            var ret = createPath(char, scale, offsetX, offsetY);\n            offsetX += ret.offsetX;\n            paths.push(ret.path);\n          }\n        }\n\n        return paths;\n      }\n\n      function createPath(c, scale, offsetX, offsetY) {\n        var glyph = data.glyphs[c] || data.glyphs['?'];\n        if (!glyph) return;\n        var path = new ShapePath();\n        var pts = [];\n        var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n        if (glyph.o) {\n          var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n          for (var i = 0, l = outline.length; i < l;) {\n            var action = outline[i++];\n\n            switch (action) {\n              case 'm':\n                // moveTo\n                x = outline[i++] * scale + offsetX;\n                y = outline[i++] * scale + offsetY;\n                path.moveTo(x, y);\n                break;\n\n              case 'l':\n                // lineTo\n                x = outline[i++] * scale + offsetX;\n                y = outline[i++] * scale + offsetY;\n                path.lineTo(x, y);\n                break;\n\n              case 'q':\n                // quadraticCurveTo\n                cpx = outline[i++] * scale + offsetX;\n                cpy = outline[i++] * scale + offsetY;\n                cpx1 = outline[i++] * scale + offsetX;\n                cpy1 = outline[i++] * scale + offsetY;\n                path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n                laste = pts[pts.length - 1];\n\n                if (laste) {\n                  cpx0 = laste.x;\n                  cpy0 = laste.y;\n\n                  for (var i2 = 1; i2 <= divisions; i2++) {\n                    var t = i2 / divisions;\n                    QuadraticBezier(t, cpx0, cpx1, cpx);\n                    QuadraticBezier(t, cpy0, cpy1, cpy);\n                  }\n                }\n\n                break;\n\n              case 'b':\n                // bezierCurveTo\n                cpx = outline[i++] * scale + offsetX;\n                cpy = outline[i++] * scale + offsetY;\n                cpx1 = outline[i++] * scale + offsetX;\n                cpy1 = outline[i++] * scale + offsetY;\n                cpx2 = outline[i++] * scale + offsetX;\n                cpy2 = outline[i++] * scale + offsetY;\n                path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n                laste = pts[pts.length - 1];\n\n                if (laste) {\n                  cpx0 = laste.x;\n                  cpy0 = laste.y;\n\n                  for (var i2 = 1; i2 <= divisions; i2++) {\n                    var t = i2 / divisions;\n                    CubicBezier(t, cpx0, cpx1, cpx2, cpx);\n                    CubicBezier(t, cpy0, cpy1, cpy2, cpy);\n                  }\n                }\n\n                break;\n            }\n          }\n        }\n\n        return {\n          offsetX: glyph.ha * scale,\n          path: path\n        };\n      } //\n\n\n      if (size === undefined) size = 100;\n      if (divisions === undefined) divisions = 4;\n      var data = this.data;\n      var paths = createPaths(text);\n      var shapes = [];\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function FontLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(FontLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      return new Font(json);\n    }\n  });\n  var context;\n  var AudioContext = {\n    getContext: function () {\n      if (context === undefined) {\n        context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return context;\n    },\n    setContext: function (value) {\n      context = value;\n    }\n  };\n  /**\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function AudioLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(AudioLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        var context = AudioContext.getContext();\n        context.decodeAudioData(buffer, function (audioBuffer) {\n          onLoad(audioBuffer);\n        });\n      }, onProgress, onError);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function StereoCamera() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n  }\n\n  Object.assign(StereoCamera.prototype, {\n    update: function () {\n      var instance, focus, fov, aspect, near, far, zoom, eyeSep;\n      var eyeRight = new Matrix4();\n      var eyeLeft = new Matrix4();\n      return function update(camera) {\n        var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n        if (needsUpdate) {\n          instance = this;\n          focus = camera.focus;\n          fov = camera.fov;\n          aspect = camera.aspect * this.aspect;\n          near = camera.near;\n          far = camera.far;\n          zoom = camera.zoom; // Off-axis stereoscopic effect based on\n          // http://paulbourke.net/stereographics/stereorender/\n\n          var projectionMatrix = camera.projectionMatrix.clone();\n          eyeSep = this.eyeSep / 2;\n          var eyeSepOnProjection = eyeSep * near / focus;\n          var ymax = near * Math.tan(_Math.DEG2RAD * fov * 0.5) / zoom;\n          var xmin, xmax; // translate xOffset\n\n          eyeLeft.elements[12] = -eyeSep;\n          eyeRight.elements[12] = eyeSep; // for left eye\n\n          xmin = -ymax * aspect + eyeSepOnProjection;\n          xmax = ymax * aspect + eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n          xmin = -ymax * aspect - eyeSepOnProjection;\n          xmax = ymax * aspect - eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraR.projectionMatrix.copy(projectionMatrix);\n        }\n\n        this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n        this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n      };\n    }()\n  });\n  /**\n   * Camera for rendering cube maps\n   *\t- renders scene into axis-aligned cube\n   *\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CubeCamera(near, far, cubeResolution) {\n    Object3D.call(this);\n    this.type = 'CubeCamera';\n    var fov = 90,\n        aspect = 1;\n    var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(cameraPX);\n    var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n    this.add(cameraNX);\n    var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(cameraPY);\n    var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n    this.add(cameraNY);\n    var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(cameraPZ);\n    var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n    this.add(cameraNZ);\n    var options = {\n      format: RGBFormat,\n      magFilter: LinearFilter,\n      minFilter: LinearFilter\n    };\n    this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n    this.renderTarget.texture.name = \"CubeCamera\";\n\n    this.updateCubeMap = function (renderer, scene) {\n      if (this.parent === null) this.updateMatrixWorld();\n      var renderTarget = this.renderTarget;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderTarget.activeCubeFace = 0;\n      renderer.render(scene, cameraPX, renderTarget);\n      renderTarget.activeCubeFace = 1;\n      renderer.render(scene, cameraNX, renderTarget);\n      renderTarget.activeCubeFace = 2;\n      renderer.render(scene, cameraPY, renderTarget);\n      renderTarget.activeCubeFace = 3;\n      renderer.render(scene, cameraNY, renderTarget);\n      renderTarget.activeCubeFace = 4;\n      renderer.render(scene, cameraPZ, renderTarget);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderTarget.activeCubeFace = 5;\n      renderer.render(scene, cameraNZ, renderTarget);\n      renderer.setRenderTarget(null);\n    };\n  }\n\n  CubeCamera.prototype = Object.create(Object3D.prototype);\n  CubeCamera.prototype.constructor = CubeCamera;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioListener() {\n    Object3D.call(this);\n    this.type = 'AudioListener';\n    this.context = AudioContext.getContext();\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n  }\n\n  AudioListener.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: AudioListener,\n    getInput: function () {\n      return this.gain;\n    },\n    removeFilter: function () {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n    },\n    getFilter: function () {\n      return this.filter;\n    },\n    setFilter: function (value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n    },\n    getMasterVolume: function () {\n      return this.gain.gain.value;\n    },\n    setMasterVolume: function (value) {\n      this.gain.gain.value = value;\n    },\n    updateMatrixWorld: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      var scale = new Vector3();\n      var orientation = new Vector3();\n      return function updateMatrixWorld(force) {\n        Object3D.prototype.updateMatrixWorld.call(this, force);\n        var listener = this.context.listener;\n        var up = this.up;\n        this.matrixWorld.decompose(position, quaternion, scale);\n        orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n        if (listener.positionX) {\n          listener.positionX.setValueAtTime(position.x, this.context.currentTime);\n          listener.positionY.setValueAtTime(position.y, this.context.currentTime);\n          listener.positionZ.setValueAtTime(position.z, this.context.currentTime);\n          listener.forwardX.setValueAtTime(orientation.x, this.context.currentTime);\n          listener.forwardY.setValueAtTime(orientation.y, this.context.currentTime);\n          listener.forwardZ.setValueAtTime(orientation.z, this.context.currentTime);\n          listener.upX.setValueAtTime(up.x, this.context.currentTime);\n          listener.upY.setValueAtTime(up.y, this.context.currentTime);\n          listener.upZ.setValueAtTime(up.z, this.context.currentTime);\n        } else {\n          listener.setPosition(position.x, position.y, position.z);\n          listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n        }\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function Audio(listener) {\n    Object3D.call(this);\n    this.type = 'Audio';\n    this.context = listener.context;\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n    this.autoplay = false;\n    this.buffer = null;\n    this.loop = false;\n    this.startTime = 0;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.sourceType = 'empty';\n    this.filters = [];\n  }\n\n  Audio.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Audio,\n    getOutput: function () {\n      return this.gain;\n    },\n    setNodeSource: function (audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    },\n    setBuffer: function (audioBuffer) {\n      this.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n      if (this.autoplay) this.play();\n      return this;\n    },\n    play: function () {\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      var source = this.context.createBufferSource();\n      source.buffer = this.buffer;\n      source.loop = this.loop;\n      source.onended = this.onEnded.bind(this);\n      source.playbackRate.setValueAtTime(this.playbackRate, this.startTime);\n      source.start(0, this.startTime);\n      this.isPlaying = true;\n      this.source = source;\n      return this.connect();\n    },\n    pause: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.stop();\n      this.startTime = this.context.currentTime;\n      this.isPlaying = false;\n      return this;\n    },\n    stop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.stop();\n      this.startTime = 0;\n      this.isPlaying = false;\n      return this;\n    },\n    connect: function () {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      return this;\n    },\n    disconnect: function () {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      return this;\n    },\n    getFilters: function () {\n      return this.filters;\n    },\n    setFilters: function (value) {\n      if (!value) value = [];\n\n      if (this.isPlaying === true) {\n        this.disconnect();\n        this.filters = value;\n        this.connect();\n      } else {\n        this.filters = value;\n      }\n\n      return this;\n    },\n    getFilter: function () {\n      return this.getFilters()[0];\n    },\n    setFilter: function (filter) {\n      return this.setFilters(filter ? [filter] : []);\n    },\n    setPlaybackRate: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime);\n      }\n\n      return this;\n    },\n    getPlaybackRate: function () {\n      return this.playbackRate;\n    },\n    onEnded: function () {\n      this.isPlaying = false;\n    },\n    getLoop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.loop;\n    },\n    setLoop: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.loop = value;\n\n      if (this.isPlaying === true) {\n        this.source.loop = this.loop;\n      }\n\n      return this;\n    },\n    getVolume: function () {\n      return this.gain.gain.value;\n    },\n    setVolume: function (value) {\n      this.gain.gain.value = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PositionalAudio(listener) {\n    Audio.call(this, listener);\n    this.panner = this.context.createPanner();\n    this.panner.connect(this.gain);\n  }\n\n  PositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n    constructor: PositionalAudio,\n    getOutput: function () {\n      return this.panner;\n    },\n    getRefDistance: function () {\n      return this.panner.refDistance;\n    },\n    setRefDistance: function (value) {\n      this.panner.refDistance = value;\n    },\n    getRolloffFactor: function () {\n      return this.panner.rolloffFactor;\n    },\n    setRolloffFactor: function (value) {\n      this.panner.rolloffFactor = value;\n    },\n    getDistanceModel: function () {\n      return this.panner.distanceModel;\n    },\n    setDistanceModel: function (value) {\n      this.panner.distanceModel = value;\n    },\n    getMaxDistance: function () {\n      return this.panner.maxDistance;\n    },\n    setMaxDistance: function (value) {\n      this.panner.maxDistance = value;\n    },\n    updateMatrixWorld: function () {\n      var position = new Vector3();\n      return function updateMatrixWorld(force) {\n        Object3D.prototype.updateMatrixWorld.call(this, force);\n        position.setFromMatrixPosition(this.matrixWorld);\n        this.panner.setPosition(position.x, position.y, position.z);\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioAnalyser(audio, fftSize) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n\n  Object.assign(AudioAnalyser.prototype, {\n    getFrequencyData: function () {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    },\n    getAverageFrequency: function () {\n      var value = 0,\n          data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    }\n  });\n  /**\n   *\n   * Buffered scene graph property that allows weighted accumulation.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function PropertyMixer(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var bufferType = Float64Array,\n        mixFunction;\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        break;\n\n      case 'string':\n      case 'bool':\n        bufferType = Array;\n        mixFunction = this._select;\n        break;\n\n      default:\n        mixFunction = this._lerp;\n    }\n\n    this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n\n    this._mixBufferRegion = mixFunction;\n    this.cumulativeWeight = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  Object.assign(PropertyMixer.prototype, {\n    // accumulate data in the 'incoming' region into 'accu<i>'\n    accumulate: function (accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride,\n          currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    },\n    // apply the state of 'accu<i>' to the binding when accus differ\n    apply: function (accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * 3;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    },\n    // remember the state of the bound property and copy it to both accus\n    saveOriginalState: function () {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * 3;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      }\n\n      this.cumulativeWeight = 0;\n    },\n    // apply the state previously taken via 'saveOriginalState' to the binding\n    restoreOriginalState: function () {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    },\n    // mix functions\n    _select: function (buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    },\n    _slerp: function (buffer, dstOffset, srcOffset, t) {\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    },\n    _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    }\n  });\n  /**\n   *\n   * A reference to a real property in the scene graph.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function Composite(targetGroup, path, optionalParsedPath) {\n    var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  Object.assign(Composite.prototype, {\n    getValue: function (array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) binding.getValue(array, offset);\n    },\n    setValue: function (array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    },\n    bind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    },\n    unbind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  });\n\n  function PropertyBinding(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  }\n\n  Object.assign(PropertyBinding, {\n    Composite: Composite,\n    create: function (root, path, parsedPath) {\n      if (!(root && root.isAnimationObjectGroup)) {\n        return new PropertyBinding(root, path, parsedPath);\n      } else {\n        return new PropertyBinding.Composite(root, path, parsedPath);\n      }\n    },\n\n    /**\n     * Replaces spaces with underscores and removes unsupported characters from\n     * node names, to ensure compatibility with parseTrackName().\n     *\n     * @param  {string} name Node name to be sanitized.\n     * @return {string}\n     */\n    sanitizeNodeName: function (name) {\n      return name.replace(/\\s/g, '_').replace(/[^\\w-]/g, '');\n    },\n    parseTrackName: function () {\n      // Parent directories, delimited by '/' or ':'. Currently unused, but must\n      // be matched to parse the rest of the track name.\n      var directoryRe = /((?:[\\w-]+[\\/:])*)/; // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n      var nodeRe = /([\\w-\\.]+)?/; // Object on target node, and accessor. Name may contain only word\n      // characters. Accessor may contain any character except closing bracket.\n\n      var objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/; // Property and accessor. May contain only word characters. Accessor may\n      // contain any non-bracket characters.\n\n      var propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n      var trackRe = new RegExp('' + '^' + directoryRe.source + nodeRe.source + objectRe.source + propertyRe.source + '$');\n      var supportedObjectNames = ['material', 'materials', 'bones'];\n      return function (trackName) {\n        var matches = trackRe.exec(trackName);\n\n        if (!matches) {\n          throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n        }\n\n        var results = {\n          // directoryName: matches[ 1 ], // (tschw) currently unused\n          nodeName: matches[2],\n          objectName: matches[3],\n          objectIndex: matches[4],\n          propertyName: matches[5],\n          // required\n          propertyIndex: matches[6]\n        };\n        var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n        if (lastDot !== undefined && lastDot !== -1) {\n          var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against a whitelist. Otherwise, there\n          // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n          // 'bar' could be the objectName, or part of a nodeName (which can\n          // include '.' characters).\n\n          if (supportedObjectNames.indexOf(objectName) !== -1) {\n            results.nodeName = results.nodeName.substring(0, lastDot);\n            results.objectName = objectName;\n          }\n        }\n\n        if (results.propertyName === null || results.propertyName.length === 0) {\n          throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n        }\n\n        return results;\n      };\n    }(),\n    findNode: function (root, nodeName) {\n      if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n        return root;\n      } // search into skeleton bones.\n\n\n      if (root.skeleton) {\n        var searchSkeleton = function (skeleton) {\n          for (var i = 0; i < skeleton.bones.length; i++) {\n            var bone = skeleton.bones[i];\n\n            if (bone.name === nodeName) {\n              return bone;\n            }\n          }\n\n          return null;\n        };\n\n        var bone = searchSkeleton(root.skeleton);\n\n        if (bone) {\n          return bone;\n        }\n      } // search into node subtree.\n\n\n      if (root.children) {\n        var searchNodeSubtree = function (children) {\n          for (var i = 0; i < children.length; i++) {\n            var childNode = children[i];\n\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\n              return childNode;\n            }\n\n            var result = searchNodeSubtree(childNode.children);\n            if (result) return result;\n          }\n\n          return null;\n        };\n\n        var subTreeNode = searchNodeSubtree(root.children);\n\n        if (subTreeNode) {\n          return subTreeNode;\n        }\n      }\n\n      return null;\n    }\n  });\n  Object.assign(PropertyBinding.prototype, {\n    // prototype, continued\n    // these are used to \"bind\" a nonexistent property\n    _getValue_unavailable: function () {},\n    _setValue_unavailable: function () {},\n    BindingType: {\n      Direct: 0,\n      EntireArray: 1,\n      ArrayElement: 2,\n      HasFromToArray: 3\n    },\n    Versioning: {\n      None: 0,\n      NeedsUpdate: 1,\n      MatrixWorldNeedsUpdate: 2\n    },\n    GetterByBindingType: [function getValue_direct(buffer, offset) {\n      buffer[offset] = this.node[this.propertyName];\n    }, function getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }, function getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }, function getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    }],\n    SetterByBindingTypeAndVersioning: [[// Direct\n    function setValue_direct(buffer, offset) {\n      this.node[this.propertyName] = buffer[offset];\n    }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.node[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.node[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// EntireArray\n    function setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }, function setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// ArrayElement\n    function setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// HasToFromArray\n    function setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }]],\n    getValue: function getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n      // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n      // prototype version of these methods with one that represents\n      // the bound state. When the property is not found, the methods\n      // become no-ops.\n    },\n    setValue: function getValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    },\n    // create getter / setter pair for a property in the scene graph\n    bind: function () {\n      var targetObject = this.node,\n          parsedPath = this.parsedPath,\n          objectName = parsedPath.objectName,\n          propertyName = parsedPath.propertyName,\n          propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n        this.targetObject = targetObject;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n        this.targetObject = targetObject;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === \"morphTargetInfluences\") {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n            return;\n          }\n\n          if (targetObject.geometry.isBufferGeometry) {\n            if (!targetObject.geometry.morphAttributes) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphAttributes.position.length; i++) {\n              if (targetObject.geometry.morphAttributes.position[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          } else {\n            if (!targetObject.geometry.morphTargets) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n              if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (Array.isArray(nodeProperty)) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    },\n    unbind: function () {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(PropertyBinding.prototype, {\n    // initial state of these methods that calls 'bind'\n    _getValue_unbound: PropertyBinding.prototype.getValue,\n    _setValue_unbound: PropertyBinding.prototype.setValue\n  });\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   * \t-\tAdd objects you would otherwise pass as 'root' to the\n   * \t\tconstructor or the .clipAction method of AnimationMixer.\n   *\n   * \t-\tInstead pass this object as 'root'.\n   *\n   * \t-\tYou can also add and remove objects later when the mixer\n   * \t\tis running.\n   *\n   * Note:\n   *\n   *  \tObjects of this class appear as one object to the mixer,\n   *  \tso cache control of the individual objects must be done\n   *  \ton the group.\n   *\n   * Limitation:\n   *\n   * \t- \tThe animated properties must be compatible among the\n   * \t\tall objects in the group.\n   *\n   *  -\tA single property can either be controlled through a\n   *  \ttarget group or directly, but not both.\n   *\n   * @author tschw\n   */\n\n  function AnimationObjectGroup(var_args) {\n    this.uuid = _Math.generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  }\n\n  Object.assign(AnimationObjectGroup.prototype, {\n    isAnimationObjectGroup: true,\n    add: function (var_args) {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid],\n            knownObject = undefined;\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    remove: function (var_args) {\n      var objects = this._objects,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // remove & forget\n    uncache: function (var_args) {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var lastIndex = --nObjects,\n                lastObject = objects[lastIndex];\n            indicesByUUID[lastObject.uuid] = index;\n            objects[index] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j];\n              bindingsForPath[index] = bindingsForPath[lastIndex];\n              bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // Internal interface used by befriended PropertyBinding.Composite:\n    subscribe_: function (path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path],\n          bindings = this._bindings;\n      if (index !== undefined) return bindings[index];\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    },\n    unsubscribe_: function (path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  });\n  /**\n   *\n   * Action provided by AnimationMixer for scheduling clip playback on specific\n   * objects.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   *\n   */\n\n  function AnimationAction(mixer, clip, localRoot) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot || null;\n    var tracks = clip.tracks,\n        nTracks = tracks.length,\n        interpolants = new Array(nTracks);\n    var interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopRepeat;\n    this._loopCount = -1; // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n\n    this._startTime = null; // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  }\n\n  Object.assign(AnimationAction.prototype, {\n    // State & Scheduling\n    play: function () {\n      this._mixer._activateAction(this);\n\n      return this;\n    },\n    stop: function () {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    },\n    reset: function () {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    },\n    isRunning: function () {\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    },\n    // return true when play has been called\n    isScheduled: function () {\n      return this._mixer._isActiveAction(this);\n    },\n    startAt: function (time) {\n      this._startTime = time;\n      return this;\n    },\n    setLoop: function (mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    },\n    // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n    setEffectiveWeight: function (weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    },\n    // return the weight considering fading and .enabled\n    getEffectiveWeight: function () {\n      return this._effectiveWeight;\n    },\n    fadeIn: function (duration) {\n      return this._scheduleFading(duration, 0, 1);\n    },\n    fadeOut: function (duration) {\n      return this._scheduleFading(duration, 1, 0);\n    },\n    crossFadeFrom: function (fadeOutAction, duration, warp) {\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    },\n    crossFadeTo: function (fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    },\n    stopFading: function () {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    },\n    // Time Scale Control\n    // set the time scale stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n    setEffectiveTimeScale: function (timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    },\n    // return the time scale considering warping and .paused\n    getEffectiveTimeScale: function () {\n      return this._effectiveTimeScale;\n    },\n    setDuration: function (duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    },\n    syncWith: function (action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    },\n    halt: function (duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    },\n    warp: function (startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._timeScaleInterpolant,\n          timeScale = this.timeScale;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    },\n    stopWarping: function () {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    },\n    // Object Accessors\n    getMixer: function () {\n      return this._mixer;\n    },\n    getClip: function () {\n      return this._clip;\n    },\n    getRoot: function () {\n      return this._localRoot || this._mixer._root;\n    },\n    // Interna\n    _update: function (time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      if (!this.enabled) {\n        // call ._updateWeight() to update ._effectiveWeight\n        this._updateWeight(time);\n\n        return;\n      }\n\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        for (var j = 0, m = interpolants.length; j !== m; ++j) {\n          interpolants[j].evaluate(clipTime);\n          propertyMixers[j].accumulate(accuIndex, weight);\n        }\n      }\n    },\n    _updateWeight: function (time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    },\n    _updateTimeScale: function (time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    },\n    _updateTime: function (deltaTime) {\n      var time = this.time + deltaTime;\n      if (deltaTime === 0) return time;\n      var duration = this._clip.duration,\n          loop = this.loop,\n          loopCount = this._loopCount;\n\n      if (loop === LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this._loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else break handle_stop;\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        var pingPong = loop === LoopPingPong;\n\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending < 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            time = deltaTime > 0 ? duration : 0;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 0) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          this.time = time;\n          return duration - time;\n        }\n      }\n\n      this.time = time;\n      return time;\n    },\n    _setEndings: function (atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = ZeroSlopeEnding;\n        settings.endingEnd = ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = WrapAroundEnding;\n        }\n      }\n    },\n    _scheduleFading: function (duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    }\n  });\n  /**\n   *\n   * Player for AnimationClips.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function AnimationMixer(root) {\n    this._root = root;\n\n    this._initMemoryManager();\n\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n\n  Object.assign(AnimationMixer.prototype, EventDispatcher.prototype, {\n    _bindAction: function (action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name,\n            binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    },\n    _activateAction: function (action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    },\n    _deactivateAction: function (action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    },\n    // Memory manager\n    _initMemoryManager: function () {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n      // \t\tactionByRoot: AnimationAction\t\t\t- lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    },\n    // Memory management for AnimationAction objects\n    _isActiveAction: function (action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    },\n    _addInactiveAction: function (action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    },\n    _removeInactiveAction: function (action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (action._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    },\n    _removeInactiveBindingsForAction: function (action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    _lendAction: function (action) {\n      // [ active actions |  inactive actions  ]\n      // [  active actions >| inactive actions ]\n      //                 s        a\n      //                  <-swap->\n      //                 a        s\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    },\n    _takeBackAction: function (action) {\n      // [  active actions  | inactive actions ]\n      // [ active actions |< inactive actions  ]\n      //        a        s\n      //         <-swap->\n      //        s        a\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    },\n    // Memory management for PropertyMixer objects\n    _addInactiveBinding: function (binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          bindings = this._bindings;\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    },\n    _removeInactiveBinding: function (binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      remove_empty_map: {\n        for (var _ in bindingByName) break remove_empty_map;\n\n        delete bindingsByRoot[rootUuid];\n      }\n    },\n    _lendBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    },\n    _takeBackBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    },\n    // Memory management of Interpolants for weight and time scale\n    _lendControlInterpolant: function () {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++,\n          interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    },\n    _takeBackControlInterpolant: function (interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    },\n    _controlInterpolantsResultBuffer: new Float32Array(1),\n    // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n    clipAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject !== null ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid],\n          prototypeAction = null;\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) clipObject = prototypeAction._clip;\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) return null; // allocate all resources required to run it\n\n      var newAction = new AnimationAction(this, clipObject, optionalRoot);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    },\n    // get an existing action\n    existingAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    },\n    // deactivates all previously scheduled actions\n    stopAllAction: function () {\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n      this._nActiveActions = 0;\n      this._nActiveBindings = 0;\n\n      for (var i = 0; i !== nActions; ++i) {\n        actions[i].reset();\n      }\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].useCount = 0;\n      }\n\n      return this;\n    },\n    // advance the time and update apply the animation\n    update: function (deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].apply(accuIndex);\n      }\n\n      return this;\n    },\n    // return this mixer's root target object\n    getRoot: function () {\n      return this._root;\n    },\n    // free all resources specific to a particular clip\n    uncacheClip: function (clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    },\n    // free all resources specific to a particular root target object\n    uncacheRoot: function (root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    // remove a targeted clip from the cache\n    uncacheAction: function (clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Uniform(value) {\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n\n    this.value = value;\n  }\n\n  Uniform.prototype.clone = function () {\n    return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n  };\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  function InstancedBufferGeometry() {\n    BufferGeometry.call(this);\n    this.type = 'InstancedBufferGeometry';\n    this.maxInstancedCount = undefined;\n  }\n\n  InstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n    constructor: InstancedBufferGeometry,\n    isInstancedBufferGeometry: true,\n    addGroup: function (start, count, materialIndex) {\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex\n      });\n    },\n    copy: function (source) {\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone());\n      }\n\n      var attributes = source.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        this.addAttribute(name, attribute.clone());\n      }\n\n      var groups = source.groups;\n\n      for (var i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n    this.uuid = _Math.generateUUID();\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n\n  Object.defineProperties(InterleavedBufferAttribute.prototype, {\n    count: {\n      get: function () {\n        return this.data.count;\n      }\n    },\n    array: {\n      get: function () {\n        return this.data.array;\n      }\n    }\n  });\n  Object.assign(InterleavedBufferAttribute.prototype, {\n    isInterleavedBufferAttribute: true,\n    setX: function (index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    },\n    setY: function (index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    },\n    setZ: function (index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    },\n    setW: function (index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    },\n    getX: function (index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    },\n    getY: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    },\n    getZ: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    },\n    getW: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    },\n    setXY: function (index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBuffer(array, stride) {\n    this.uuid = _Math.generateUUID();\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n\n    this.onUploadCallback = function () {};\n\n    this.version = 0;\n  }\n\n  Object.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n    set: function (value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    isInterleavedBuffer: true,\n    setArray: function (array) {\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.count = array !== undefined ? array.length / this.stride : 0;\n      this.array = array;\n    },\n    setDynamic: function (value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function (source) {\n      this.array = new source.array.constructor(source.array);\n      this.count = source.count;\n      this.stride = source.stride;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    onUpload: function (callback) {\n      this.onUploadCallback = callback;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n    InterleavedBuffer.call(this, array, stride);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n    constructor: InstancedInterleavedBuffer,\n    isInstancedInterleavedBuffer: true,\n    copy: function (source) {\n      InterleavedBuffer.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedBufferAttribute(array, itemSize, meshPerAttribute) {\n    BufferAttribute.call(this, array, itemSize);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n    constructor: InstancedBufferAttribute,\n    isInstancedBufferAttribute: true,\n    copy: function (source) {\n      BufferAttribute.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author bhouston / http://clara.io/\n   * @author stephomi / http://stephaneginier.com/\n   */\n\n  function Raycaster(origin, direction, near, far) {\n    this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function () {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  }\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function intersectObject(object, raycaster, intersects, recursive) {\n    if (object.visible === false) return;\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }\n\n  Object.assign(Raycaster.prototype, {\n    linePrecision: 1,\n    set: function (origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function (coords, camera) {\n      if (camera && camera.isPerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      } else if (camera && camera.isOrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function (object, recursive) {\n      var intersects = [];\n      intersectObject(object, this, intersects, recursive);\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function (objects, recursive) {\n      var intersects = [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Clock(autoStart) {\n    this.autoStart = autoStart !== undefined ? autoStart : true;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n\n  Object.assign(Clock.prototype, {\n    start: function () {\n      this.startTime = (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\n      this.oldTime = this.startTime;\n      this.elapsedTime = 0;\n      this.running = true;\n    },\n    stop: function () {\n      this.getElapsedTime();\n      this.running = false;\n      this.autoStart = false;\n    },\n    getElapsedTime: function () {\n      this.getDelta();\n      return this.elapsedTime;\n    },\n    getDelta: function () {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n        return 0;\n      }\n\n      if (this.running) {\n        var newTime = (typeof performance === 'undefined' ? Date : performance).now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The poles (phi) are at the positive and negative y axis.\n   * The equator starts at positive z.\n   */\n\n  function Spherical(radius, phi, theta) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0; // up / down towards top and bottom pole\n\n    this.theta = theta !== undefined ? theta : 0; // around the equator of the sphere\n\n    return this;\n  }\n\n  Object.assign(Spherical.prototype, {\n    set: function (radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius = other.radius;\n      this.phi = other.phi;\n      this.theta = other.theta;\n      return this;\n    },\n    // restrict phi to be betwee EPS and PI-EPS\n    makeSafe: function () {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    },\n    setFromVector3: function (vec3) {\n      this.radius = vec3.length();\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n\n        this.phi = Math.acos(_Math.clamp(vec3.y / this.radius, -1, 1)); // polar angle\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n   *\n   */\n\n  function Cylindrical(radius, theta, y) {\n    this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n    this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n    this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n    return this;\n  }\n\n  Object.assign(Cylindrical.prototype, {\n    set: function (radius, theta, y) {\n      this.radius = radius;\n      this.theta = theta;\n      this.y = y;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius = other.radius;\n      this.theta = other.theta;\n      this.y = other.y;\n      return this;\n    },\n    setFromVector3: function (vec3) {\n      this.radius = Math.sqrt(vec3.x * vec3.x + vec3.z * vec3.z);\n      this.theta = Math.atan2(vec3.x, vec3.z);\n      this.y = vec3.y;\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function MorphBlendMesh(geometry, material) {\n    Mesh.call(this, geometry, material);\n    this.animationsMap = {};\n    this.animationsList = []; // prepare default animation\n    // (all frames played together in 1 second)\n\n    var numFrames = this.geometry.morphTargets.length;\n    var name = \"__default\";\n    var startFrame = 0;\n    var endFrame = numFrames - 1;\n    var fps = numFrames / 1;\n    this.createAnimation(name, startFrame, endFrame, fps);\n    this.setAnimationWeight(name, 1);\n  }\n\n  MorphBlendMesh.prototype = Object.create(Mesh.prototype);\n  MorphBlendMesh.prototype.constructor = MorphBlendMesh;\n\n  MorphBlendMesh.prototype.createAnimation = function (name, start, end, fps) {\n    var animation = {\n      start: start,\n      end: end,\n      length: end - start + 1,\n      fps: fps,\n      duration: (end - start) / fps,\n      lastFrame: 0,\n      currentFrame: 0,\n      active: false,\n      time: 0,\n      direction: 1,\n      weight: 1,\n      directionBackwards: false,\n      mirroredLoop: false\n    };\n    this.animationsMap[name] = animation;\n    this.animationsList.push(animation);\n  };\n\n  MorphBlendMesh.prototype.autoCreateAnimations = function (fps) {\n    var pattern = /([a-z]+)_?(\\d+)/i;\n    var firstAnimation,\n        frameRanges = {};\n    var geometry = this.geometry;\n\n    for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n      var morph = geometry.morphTargets[i];\n      var chunks = morph.name.match(pattern);\n\n      if (chunks && chunks.length > 1) {\n        var name = chunks[1];\n        if (!frameRanges[name]) frameRanges[name] = {\n          start: Infinity,\n          end: -Infinity\n        };\n        var range = frameRanges[name];\n        if (i < range.start) range.start = i;\n        if (i > range.end) range.end = i;\n        if (!firstAnimation) firstAnimation = name;\n      }\n    }\n\n    for (var name in frameRanges) {\n      var range = frameRanges[name];\n      this.createAnimation(name, range.start, range.end, fps);\n    }\n\n    this.firstAnimation = firstAnimation;\n  };\n\n  MorphBlendMesh.prototype.setAnimationDirectionForward = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.direction = 1;\n      animation.directionBackwards = false;\n    }\n  };\n\n  MorphBlendMesh.prototype.setAnimationDirectionBackward = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.direction = -1;\n      animation.directionBackwards = true;\n    }\n  };\n\n  MorphBlendMesh.prototype.setAnimationFPS = function (name, fps) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.fps = fps;\n      animation.duration = (animation.end - animation.start) / animation.fps;\n    }\n  };\n\n  MorphBlendMesh.prototype.setAnimationDuration = function (name, duration) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.duration = duration;\n      animation.fps = (animation.end - animation.start) / animation.duration;\n    }\n  };\n\n  MorphBlendMesh.prototype.setAnimationWeight = function (name, weight) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.weight = weight;\n    }\n  };\n\n  MorphBlendMesh.prototype.setAnimationTime = function (name, time) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.time = time;\n    }\n  };\n\n  MorphBlendMesh.prototype.getAnimationTime = function (name) {\n    var time = 0;\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      time = animation.time;\n    }\n\n    return time;\n  };\n\n  MorphBlendMesh.prototype.getAnimationDuration = function (name) {\n    var duration = -1;\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      duration = animation.duration;\n    }\n\n    return duration;\n  };\n\n  MorphBlendMesh.prototype.playAnimation = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.time = 0;\n      animation.active = true;\n    } else {\n      console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\n    }\n  };\n\n  MorphBlendMesh.prototype.stopAnimation = function (name) {\n    var animation = this.animationsMap[name];\n\n    if (animation) {\n      animation.active = false;\n    }\n  };\n\n  MorphBlendMesh.prototype.update = function (delta) {\n    for (var i = 0, il = this.animationsList.length; i < il; i++) {\n      var animation = this.animationsList[i];\n      if (!animation.active) continue;\n      var frameTime = animation.duration / animation.length;\n      animation.time += animation.direction * delta;\n\n      if (animation.mirroredLoop) {\n        if (animation.time > animation.duration || animation.time < 0) {\n          animation.direction *= -1;\n\n          if (animation.time > animation.duration) {\n            animation.time = animation.duration;\n            animation.directionBackwards = true;\n          }\n\n          if (animation.time < 0) {\n            animation.time = 0;\n            animation.directionBackwards = false;\n          }\n        }\n      } else {\n        animation.time = animation.time % animation.duration;\n        if (animation.time < 0) animation.time += animation.duration;\n      }\n\n      var keyframe = animation.start + _Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n\n      var weight = animation.weight;\n\n      if (keyframe !== animation.currentFrame) {\n        this.morphTargetInfluences[animation.lastFrame] = 0;\n        this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n        this.morphTargetInfluences[keyframe] = 0;\n        animation.lastFrame = animation.currentFrame;\n        animation.currentFrame = keyframe;\n      }\n\n      var mix = animation.time % frameTime / frameTime;\n      if (animation.directionBackwards) mix = 1 - mix;\n\n      if (animation.currentFrame !== animation.lastFrame) {\n        this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n        this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n      } else {\n        this.morphTargetInfluences[animation.currentFrame] = weight;\n      }\n    }\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function ImmediateRenderObject(material) {\n    Object3D.call(this);\n    this.material = material;\n\n    this.render = function (renderCallback) {};\n  }\n\n  ImmediateRenderObject.prototype = Object.create(Object3D.prototype);\n  ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n  ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  function VertexNormalsHelper(object, size, hex, linewidth) {\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xff0000;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  VertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n  VertexNormalsHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var normalMatrix = new Matrix3();\n    return function update() {\n      var keys = ['a', 'b', 'c'];\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n\n      if (objGeometry && objGeometry.isGeometry) {\n        var vertices = objGeometry.vertices;\n        var faces = objGeometry.faces;\n        var idx = 0;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          var face = faces[i];\n\n          for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n            var vertex = vertices[face[keys[j]]];\n            var normal = face.vertexNormals[j];\n            v1.copy(vertex).applyMatrix4(matrixWorld);\n            v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n            position.setXYZ(idx, v1.x, v1.y, v1.z);\n            idx = idx + 1;\n            position.setXYZ(idx, v2.x, v2.y, v2.z);\n            idx = idx + 1;\n          }\n        }\n      } else if (objGeometry && objGeometry.isBufferGeometry) {\n        var objPos = objGeometry.attributes.position;\n        var objNorm = objGeometry.attributes.normal;\n        var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n          v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n          v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n          v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n\n      position.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n\n  function SpotLightHelper(light) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    var geometry = new BufferGeometry();\n    var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n    for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n      var p1 = i / l * Math.PI * 2;\n      var p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n\n  SpotLightHelper.prototype = Object.create(Object3D.prototype);\n  SpotLightHelper.prototype.constructor = SpotLightHelper;\n\n  SpotLightHelper.prototype.dispose = function () {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  };\n\n  SpotLightHelper.prototype.update = function () {\n    var vector = new Vector3();\n    var vector2 = new Vector3();\n    return function update() {\n      this.light.updateMatrixWorld();\n      var coneLength = this.light.distance ? this.light.distance : 1000;\n      var coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n      vector.setFromMatrixPosition(this.light.matrixWorld);\n      vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n      this.cone.lookAt(vector2.sub(vector));\n      this.cone.material.color.copy(this.light.color);\n    };\n  }();\n  /**\n   * @author Sean Griffin / http://twitter.com/sgrif\n   * @author Michael Guerrero / http://realitymeltdown.com\n   * @author mrdoob / http://mrdoob.com/\n   * @author ikerr / http://verold.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function getBoneList(object) {\n    var boneList = [];\n\n    if (object && object.isBone) {\n      boneList.push(object);\n    }\n\n    for (var i = 0; i < object.children.length; i++) {\n      boneList.push.apply(boneList, getBoneList(object.children[i]));\n    }\n\n    return boneList;\n  }\n\n  function SkeletonHelper(object) {\n    var bones = getBoneList(object);\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    var colors = [];\n    var color1 = new Color(0, 0, 1);\n    var color2 = new Color(0, 1, 0);\n\n    for (var i = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    LineSegments.call(this, geometry, material);\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.onBeforeRender();\n  }\n\n  SkeletonHelper.prototype = Object.create(LineSegments.prototype);\n  SkeletonHelper.prototype.constructor = SkeletonHelper;\n\n  SkeletonHelper.prototype.onBeforeRender = function () {\n    var vector = new Vector3();\n    var boneMatrix = new Matrix4();\n    var matrixWorldInv = new Matrix4();\n    return function onBeforeRender() {\n      var bones = this.bones;\n      var geometry = this.geometry;\n      var position = geometry.getAttribute('position');\n      matrixWorldInv.getInverse(this.root.matrixWorld);\n\n      for (var i = 0, j = 0; i < bones.length; i++) {\n        var bone = bones[i];\n\n        if (bone.parent && bone.parent.isBone) {\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n          vector.setFromMatrixPosition(boneMatrix);\n          position.setXYZ(j, vector.x, vector.y, vector.z);\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n          vector.setFromMatrixPosition(boneMatrix);\n          position.setXYZ(j + 1, vector.x, vector.y, vector.z);\n          j += 2;\n        }\n      }\n\n      geometry.getAttribute('position').needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function PointLightHelper(light, sphereSize) {\n    this.light = light;\n    this.light.updateMatrixWorld();\n    var geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n    var material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    material.color.copy(this.light.color);\n    Mesh.call(this, geometry, material);\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    /*\n    var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n    var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    \tvar d = light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    \tthis.add( this.lightDistance );\n    */\n  }\n\n  PointLightHelper.prototype = Object.create(Mesh.prototype);\n  PointLightHelper.prototype.constructor = PointLightHelper;\n\n  PointLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n  };\n\n  PointLightHelper.prototype.update = function () {\n    this.material.color.copy(this.light.color);\n    /*\n    var d = this.light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.visible = true;\n    \tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    */\n  };\n  /**\n   * @author abelnation / http://github.com/abelnation\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function RectAreaLightHelper(light) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    var material = new LineBasicMaterial({\n      color: light.color\n    });\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new BufferAttribute(new Float32Array(5 * 3), 3));\n    this.add(new Line(geometry, material));\n    this.update();\n  }\n\n  RectAreaLightHelper.prototype = Object.create(Object3D.prototype);\n  RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n  RectAreaLightHelper.prototype.dispose = function () {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n\n  RectAreaLightHelper.prototype.update = function () {\n    var line = this.children[0]; // update material\n\n    line.material.color.copy(this.light.color); // calculate new dimensions of the helper\n\n    var hx = this.light.width * 0.5;\n    var hy = this.light.height * 0.5;\n    var position = line.geometry.attributes.position;\n    var array = position.array; // update vertices\n\n    array[0] = hx;\n    array[1] = -hy;\n    array[2] = 0;\n    array[3] = hx;\n    array[4] = hy;\n    array[5] = 0;\n    array[6] = -hx;\n    array[7] = hy;\n    array[8] = 0;\n    array[9] = -hx;\n    array[10] = -hy;\n    array[11] = 0;\n    array[12] = hx;\n    array[13] = -hy;\n    array[14] = 0;\n    position.needsUpdate = true;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function HemisphereLightHelper(light, size) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    var geometry = new OctahedronBufferGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    var material = new MeshBasicMaterial({\n      vertexColors: VertexColors,\n      wireframe: true\n    });\n    var position = geometry.getAttribute('position');\n    var colors = new Float32Array(position.count * 3);\n    geometry.addAttribute('color', new BufferAttribute(colors, 3));\n    this.add(new Mesh(geometry, material));\n    this.update();\n  }\n\n  HemisphereLightHelper.prototype = Object.create(Object3D.prototype);\n  HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n  HemisphereLightHelper.prototype.dispose = function () {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n\n  HemisphereLightHelper.prototype.update = function () {\n    var vector = new Vector3();\n    var color1 = new Color();\n    var color2 = new Color();\n    return function update() {\n      var mesh = this.children[0];\n      var colors = mesh.geometry.getAttribute('color');\n      color1.copy(this.light.color);\n      color2.copy(this.light.groundColor);\n\n      for (var i = 0, l = colors.count; i < l; i++) {\n        var color = i < l / 2 ? color1 : color2;\n        colors.setXYZ(i, color.r, color.g, color.b);\n      }\n\n      mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n      colors.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function GridHelper(size, divisions, color1, color2) {\n    size = size || 10;\n    divisions = divisions || 10;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var center = divisions / 2;\n    var step = size / divisions;\n    var halfSize = size / 2;\n    var vertices = [],\n        colors = [];\n\n    for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      var color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  GridHelper.prototype = Object.create(LineSegments.prototype);\n  GridHelper.prototype.constructor = GridHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author Hectate / http://www.github.com/Hectate\n   */\n\n  function PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n    radius = radius || 10;\n    radials = radials || 16;\n    circles = circles || 8;\n    divisions = divisions || 64;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var vertices = [];\n    var colors = [];\n    var x, z;\n    var v, i, j, r, color; // create the radials\n\n    for (i = 0; i <= radials; i++) {\n      v = i / radials * (Math.PI * 2);\n      x = Math.sin(v) * radius;\n      z = Math.cos(v) * radius;\n      vertices.push(0, 0, 0);\n      vertices.push(x, 0, z);\n      color = i & 1 ? color1 : color2;\n      colors.push(color.r, color.g, color.b);\n      colors.push(color.r, color.g, color.b);\n    } // create the circles\n\n\n    for (i = 0; i <= circles; i++) {\n      color = i & 1 ? color1 : color2;\n      r = radius - radius / circles * i;\n\n      for (j = 0; j < divisions; j++) {\n        // first vertex\n        v = j / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b); // second vertex\n\n        v = (j + 1) / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  PolarGridHelper.prototype = Object.create(LineSegments.prototype);\n  PolarGridHelper.prototype.constructor = PolarGridHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  function FaceNormalsHelper(object, size, hex, linewidth) {\n    // FaceNormalsHelper only supports THREE.Geometry\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length;\n    } else {\n      console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  FaceNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n  FaceNormalsHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var normalMatrix = new Matrix3();\n    return function update() {\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var normal = face.normal;\n        v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n        v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n\n      position.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function DirectionalLightHelper(light, size) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    if (size === undefined) size = 1;\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.add(new Line(geometry, material));\n    geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.add(new Line(geometry, material));\n    this.update();\n  }\n\n  DirectionalLightHelper.prototype = Object.create(Object3D.prototype);\n  DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n  DirectionalLightHelper.prototype.dispose = function () {\n    var lightPlane = this.children[0];\n    var targetLine = this.children[1];\n    lightPlane.geometry.dispose();\n    lightPlane.material.dispose();\n    targetLine.geometry.dispose();\n    targetLine.material.dispose();\n  };\n\n  DirectionalLightHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var v3 = new Vector3();\n    return function update() {\n      v1.setFromMatrixPosition(this.light.matrixWorld);\n      v2.setFromMatrixPosition(this.light.target.matrixWorld);\n      v3.subVectors(v2, v1);\n      var lightPlane = this.children[0];\n      var targetLine = this.children[1];\n      lightPlane.lookAt(v3);\n      lightPlane.material.color.copy(this.light.color);\n      targetLine.lookAt(v3);\n      targetLine.scale.z = v3.length();\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  function CameraHelper(camera) {\n    var geometry = new BufferGeometry();\n    var material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: FaceColors\n    });\n    var vertices = [];\n    var colors = [];\n    var pointMap = {}; // colors\n\n    var colorFrustum = new Color(0xffaa00);\n    var colorCone = new Color(0xff0000);\n    var colorUp = new Color(0x00aaff);\n    var colorTarget = new Color(0xffffff);\n    var colorCross = new Color(0x333333); // near\n\n    addLine(\"n1\", \"n2\", colorFrustum);\n    addLine(\"n2\", \"n4\", colorFrustum);\n    addLine(\"n4\", \"n3\", colorFrustum);\n    addLine(\"n3\", \"n1\", colorFrustum); // far\n\n    addLine(\"f1\", \"f2\", colorFrustum);\n    addLine(\"f2\", \"f4\", colorFrustum);\n    addLine(\"f4\", \"f3\", colorFrustum);\n    addLine(\"f3\", \"f1\", colorFrustum); // sides\n\n    addLine(\"n1\", \"f1\", colorFrustum);\n    addLine(\"n2\", \"f2\", colorFrustum);\n    addLine(\"n3\", \"f3\", colorFrustum);\n    addLine(\"n4\", \"f4\", colorFrustum); // cone\n\n    addLine(\"p\", \"n1\", colorCone);\n    addLine(\"p\", \"n2\", colorCone);\n    addLine(\"p\", \"n3\", colorCone);\n    addLine(\"p\", \"n4\", colorCone); // up\n\n    addLine(\"u1\", \"u2\", colorUp);\n    addLine(\"u2\", \"u3\", colorUp);\n    addLine(\"u3\", \"u1\", colorUp); // target\n\n    addLine(\"c\", \"t\", colorTarget);\n    addLine(\"p\", \"c\", colorCross); // cross\n\n    addLine(\"cn1\", \"cn2\", colorCross);\n    addLine(\"cn3\", \"cn4\", colorCross);\n    addLine(\"cf1\", \"cf2\", colorCross);\n    addLine(\"cf3\", \"cf4\", colorCross);\n\n    function addLine(a, b, color) {\n      addPoint(a, color);\n      addPoint(b, color);\n    }\n\n    function addPoint(id, color) {\n      vertices.push(0, 0, 0);\n      colors.push(color.r, color.g, color.b);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    LineSegments.call(this, geometry, material);\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  }\n\n  CameraHelper.prototype = Object.create(LineSegments.prototype);\n  CameraHelper.prototype.constructor = CameraHelper;\n\n  CameraHelper.prototype.update = function () {\n    var geometry, pointMap;\n    var vector = new Vector3();\n    var camera = new Camera();\n\n    function setPoint(point, x, y, z) {\n      vector.set(x, y, z).unproject(camera);\n      var points = pointMap[point];\n\n      if (points !== undefined) {\n        var position = geometry.getAttribute('position');\n\n        for (var i = 0, l = points.length; i < l; i++) {\n          position.setXYZ(points[i], vector.x, vector.y, vector.z);\n        }\n      }\n    }\n\n    return function update() {\n      geometry = this.geometry;\n      pointMap = this.pointMap;\n      var w = 1,\n          h = 1; // we need just camera projection matrix\n      // world matrix must be identity\n\n      camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n      setPoint(\"c\", 0, 0, -1);\n      setPoint(\"t\", 0, 0, 1); // near\n\n      setPoint(\"n1\", -w, -h, -1);\n      setPoint(\"n2\", w, -h, -1);\n      setPoint(\"n3\", -w, h, -1);\n      setPoint(\"n4\", w, h, -1); // far\n\n      setPoint(\"f1\", -w, -h, 1);\n      setPoint(\"f2\", w, -h, 1);\n      setPoint(\"f3\", -w, h, 1);\n      setPoint(\"f4\", w, h, 1); // up\n\n      setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n      setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n      setPoint(\"u3\", 0, h * 2, -1); // cross\n\n      setPoint(\"cf1\", -w, 0, 1);\n      setPoint(\"cf2\", w, 0, 1);\n      setPoint(\"cf3\", 0, -h, 1);\n      setPoint(\"cf4\", 0, h, 1);\n      setPoint(\"cn1\", -w, 0, -1);\n      setPoint(\"cn2\", w, 0, -1);\n      setPoint(\"cn3\", 0, -h, -1);\n      setPoint(\"cn4\", 0, h, -1);\n      geometry.getAttribute('position').needsUpdate = true;\n    };\n  }();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   */\n\n\n  function BoxHelper(object, color) {\n    this.object = object;\n    if (color === undefined) color = 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(8 * 3);\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  BoxHelper.prototype = Object.create(LineSegments.prototype);\n  BoxHelper.prototype.constructor = BoxHelper;\n\n  BoxHelper.prototype.update = function () {\n    var box = new Box3();\n    return function update(object) {\n      if (object !== undefined) {\n        console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n      }\n\n      if (this.object !== undefined) {\n        box.setFromObject(this.object);\n      }\n\n      if (box.isEmpty()) return;\n      var min = box.min;\n      var max = box.max;\n      /*\n        5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      \t0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n\n      var position = this.geometry.attributes.position;\n      var array = position.array;\n      array[0] = max.x;\n      array[1] = max.y;\n      array[2] = max.z;\n      array[3] = min.x;\n      array[4] = max.y;\n      array[5] = max.z;\n      array[6] = min.x;\n      array[7] = min.y;\n      array[8] = max.z;\n      array[9] = max.x;\n      array[10] = min.y;\n      array[11] = max.z;\n      array[12] = max.x;\n      array[13] = max.y;\n      array[14] = min.z;\n      array[15] = min.x;\n      array[16] = max.y;\n      array[17] = min.z;\n      array[18] = min.x;\n      array[19] = min.y;\n      array[20] = min.z;\n      array[21] = max.x;\n      array[22] = min.y;\n      array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    };\n  }();\n\n  BoxHelper.prototype.setFromObject = function (object) {\n    this.object = object;\n    this.update();\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author zz85 / http://github.com/zz85\n   * @author bhouston / http://clara.io\n   *\n   * Creates an arrow for visualizing directions\n   *\n   * Parameters:\n   *  dir - Vector3\n   *  origin - Vector3\n   *  length - Number\n   *  color - color in hex value\n   *  headLength - Number\n   *  headWidth - Number\n   */\n\n\n  var lineGeometry;\n  var coneGeometry;\n\n  function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    Object3D.call(this);\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n    if (lineGeometry === undefined) {\n      lineGeometry = new BufferGeometry();\n      lineGeometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n      coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n      coneGeometry.translate(0, -0.5, 0);\n    }\n\n    this.position.copy(origin);\n    this.line = new Line(lineGeometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new Mesh(coneGeometry, new MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n\n  ArrowHelper.prototype = Object.create(Object3D.prototype);\n  ArrowHelper.prototype.constructor = ArrowHelper;\n\n  ArrowHelper.prototype.setDirection = function () {\n    var axis = new Vector3();\n    var radians;\n    return function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < -0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        axis.set(dir.z, 0, -dir.x).normalize();\n        radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(axis, radians);\n      }\n    };\n  }();\n\n  ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.line.scale.set(1, Math.max(0, length - headLength), 1);\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  };\n\n  ArrowHelper.prototype.setColor = function (color) {\n    this.line.material.color.copy(color);\n    this.cone.material.color.copy(color);\n  };\n  /**\n   * @author sroucheray / http://sroucheray.org/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function AxisHelper(size) {\n    size = size || 1;\n    var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n    var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  AxisHelper.prototype = Object.create(LineSegments.prototype);\n  AxisHelper.prototype.constructor = AxisHelper;\n  /**\n   * @author zz85 https://github.com/zz85\n   *\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  /*\n  Based on an optimized c++ solution in\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n   - http://ideone.com/NoEbVM\n  \tThis CubicPoly class could be used for reusing some variables and calculations,\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\n  which can be placed in CurveUtils.\n  */\n\n  function CubicPoly() {\n    var c0 = 0,\n        c1 = 0,\n        c2 = 0,\n        c3 = 0;\n    /*\n     * Compute coefficients for a cubic polynomial\n     *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *   p(0) = x0, p(1) = x1\n     *  and\n     *   p'(0) = t0, p'(1) = t1.\n     */\n\n    function init(x0, x1, t0, t1) {\n      c0 = x0;\n      c1 = t0;\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    }\n\n    return {\n      initCatmullRom: function (x0, x1, x2, x3, tension) {\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n      },\n      initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n        // compute tangents when parameterized in [t1,t2]\n        var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n        var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n        t1 *= dt1;\n        t2 *= dt1;\n        init(x1, x2, t1, t2);\n      },\n      calc: function (t) {\n        var t2 = t * t;\n        var t3 = t2 * t;\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\n      }\n    };\n  } //\n\n\n  var tmp = new Vector3();\n  var px = new CubicPoly();\n  var py = new CubicPoly();\n  var pz = new CubicPoly();\n\n  function CatmullRomCurve3(points) {\n    Curve.call(this);\n    if (points.length < 2) console.warn('THREE.CatmullRomCurve3: Points array needs at least two entries.');\n    this.points = points || [];\n    this.closed = false;\n  }\n\n  CatmullRomCurve3.prototype = Object.create(Curve.prototype);\n  CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n  CatmullRomCurve3.prototype.getPoint = function (t) {\n    var points = this.points;\n    var l = points.length;\n    var point = (l - (this.closed ? 0 : 1)) * t;\n    var intPoint = Math.floor(point);\n    var weight = point - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3; // 4 points\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.type === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.type === 'catmullrom') {\n      var tension = this.tension !== undefined ? this.tension : 0.5;\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n    }\n\n    return new Vector3(px.calc(weight), py.calc(weight), pz.calc(weight));\n  };\n\n  function CubicBezierCurve3(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n\n  CubicBezierCurve3.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n  CubicBezierCurve3.prototype.getPoint = function (t) {\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    return new Vector3(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n  };\n\n  function QuadraticBezierCurve3(v0, v1, v2) {\n    Curve.call(this);\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  QuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n  QuadraticBezierCurve3.prototype.getPoint = function (t) {\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    return new Vector3(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n  };\n\n  function LineCurve3(v1, v2) {\n    Curve.call(this);\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n\n  LineCurve3.prototype = Object.create(Curve.prototype);\n  LineCurve3.prototype.constructor = LineCurve3;\n\n  LineCurve3.prototype.getPoint = function (t) {\n    if (t === 1) {\n      return this.v2.clone();\n    }\n\n    var vector = new Vector3();\n    vector.subVectors(this.v2, this.v1); // diff\n\n    vector.multiplyScalar(t);\n    vector.add(this.v1);\n    return vector;\n  };\n\n  function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  }\n\n  ArcCurve.prototype = Object.create(EllipseCurve.prototype);\n  ArcCurve.prototype.constructor = ArcCurve;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  var SceneUtils = {\n    createMultiMaterialObject: function (geometry, materials) {\n      var group = new Group();\n\n      for (var i = 0, l = materials.length; i < l; i++) {\n        group.add(new Mesh(geometry, materials[i]));\n      }\n\n      return group;\n    },\n    detach: function (child, parent, scene) {\n      child.applyMatrix(parent.matrixWorld);\n      parent.remove(child);\n      scene.add(child);\n    },\n    attach: function (child, scene, parent) {\n      child.applyMatrix(new Matrix4().getInverse(parent.matrixWorld));\n      scene.remove(child);\n      parent.add(child);\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Face4(a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new Face3(a, b, c, normal, color, materialIndex);\n  }\n\n  var LineStrip = 0;\n  var LinePieces = 1;\n\n  function MeshFaceMaterial(materials) {\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n    return materials;\n  }\n\n  function MultiMaterial(materials) {\n    if (materials === undefined) materials = [];\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n    materials.isMultiMaterial = true;\n    materials.materials = materials;\n\n    materials.clone = function () {\n      return materials.slice();\n    };\n\n    return materials;\n  }\n\n  function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function Particle(material) {\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n    return new Sprite(material);\n  }\n\n  function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new Vector3(x, y, z);\n  } //\n\n\n  function DynamicBufferAttribute(array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n    return new BufferAttribute(array, itemSize).setDynamic(true);\n  }\n\n  function Int8Attribute(array, itemSize) {\n    console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n    return new Int8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8Attribute(array, itemSize) {\n    console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n    return new Uint8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8ClampedAttribute(array, itemSize) {\n    console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n    return new Uint8ClampedBufferAttribute(array, itemSize);\n  }\n\n  function Int16Attribute(array, itemSize) {\n    console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n    return new Int16BufferAttribute(array, itemSize);\n  }\n\n  function Uint16Attribute(array, itemSize) {\n    console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n    return new Uint16BufferAttribute(array, itemSize);\n  }\n\n  function Int32Attribute(array, itemSize) {\n    console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n    return new Int32BufferAttribute(array, itemSize);\n  }\n\n  function Uint32Attribute(array, itemSize) {\n    console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n    return new Uint32BufferAttribute(array, itemSize);\n  }\n\n  function Float32Attribute(array, itemSize) {\n    console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n    return new Float32BufferAttribute(array, itemSize);\n  }\n\n  function Float64Attribute(array, itemSize) {\n    console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n    return new Float64BufferAttribute(array, itemSize);\n  } //\n\n\n  Curve.create = function (construct, getPoint) {\n    console.log('THREE.Curve.create() has been deprecated');\n    construct.prototype = Object.create(Curve.prototype);\n    construct.prototype.constructor = construct;\n    construct.prototype.getPoint = getPoint;\n    return construct;\n  }; //\n\n\n  function ClosedSplineCurve3(points) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  }\n\n  ClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function SplineCurve3(points) {\n    console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  SplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function Spline(points) {\n    console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  Spline.prototype = Object.create(CatmullRomCurve3.prototype);\n  Object.assign(Spline.prototype, {\n    initFromArray: function (a) {\n      console.error('THREE.Spline: .initFromArray() has been removed.');\n    },\n    getControlPointsArray: function (optionalTarget) {\n      console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n    },\n    reparametrizeByArcLength: function (samplingCoef) {\n      console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n    }\n  }); //\n\n  function BoundingBoxHelper(object, color) {\n    console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n    return new BoxHelper(object, color);\n  }\n\n  function EdgesHelper(object, hex) {\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n    return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  }\n\n  GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  };\n\n  SkeletonHelper.prototype.update = function () {\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n  };\n\n  function WireframeHelper(object, hex) {\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n    return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  } //\n\n\n  function XHRLoader(manager) {\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n    return new FileLoader(manager);\n  }\n\n  function BinaryTextureLoader(manager) {\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n    return new DataTextureLoader(manager);\n  } //\n\n\n  Object.assign(Box2.prototype, {\n    center: function (optionalTarget) {\n      console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function () {\n      console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    size: function (optionalTarget) {\n      console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n  Object.assign(Box3.prototype, {\n    center: function (optionalTarget) {\n      console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function () {\n      console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    },\n    size: function (optionalTarget) {\n      console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n\n  Line3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  _Math.random16 = function () {\n    console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');\n    return Math.random();\n  };\n\n  Object.assign(Matrix3.prototype, {\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n      return vector.applyMatrix3(this);\n    },\n    multiplyVector3Array: function (a) {\n      console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n    },\n    applyToBuffer: function (buffer, offset, length) {\n      console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function (array, offset, length) {\n      console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n    }\n  });\n  Object.assign(Matrix4.prototype, {\n    extractPosition: function (m) {\n      console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n      return this.copyPosition(m);\n    },\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    getPosition: function () {\n      var v1;\n      return function getPosition() {\n        if (v1 === undefined) v1 = new Vector3();\n        console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n        return v1.setFromMatrixColumn(this, 3);\n      };\n    }(),\n    setRotationFromQuaternion: function (q) {\n      console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n      return this.makeRotationFromQuaternion(q);\n    },\n    multiplyToArray: function () {\n      console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector4: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector3Array: function (a) {\n      console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n    },\n    rotateAxis: function (v) {\n      console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n      v.transformDirection(this);\n    },\n    crossVector: function (vector) {\n      console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    translate: function () {\n      console.error('THREE.Matrix4: .translate() has been removed.');\n    },\n    rotateX: function () {\n      console.error('THREE.Matrix4: .rotateX() has been removed.');\n    },\n    rotateY: function () {\n      console.error('THREE.Matrix4: .rotateY() has been removed.');\n    },\n    rotateZ: function () {\n      console.error('THREE.Matrix4: .rotateZ() has been removed.');\n    },\n    rotateByAxis: function () {\n      console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n    },\n    applyToBuffer: function (buffer, offset, length) {\n      console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function (array, offset, length) {\n      console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n    },\n    makeFrustum: function (left, right, bottom, top, near, far) {\n      console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n      return this.makePerspective(left, right, top, bottom, near, far);\n    }\n  });\n\n  Plane.prototype.isIntersectionLine = function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  };\n\n  Quaternion.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  };\n\n  Object.assign(Ray.prototype, {\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionPlane: function (plane) {\n      console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n      return this.intersectsPlane(plane);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(Shape.prototype, {\n    extrude: function (options) {\n      console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n      return new ExtrudeGeometry(this, options);\n    },\n    makeGeometry: function (options) {\n      console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n      return new ShapeGeometry(this, options);\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    fromAttribute: function (attribute, index, offset) {\n      console.error('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    }\n  });\n  Object.assign(Vector3.prototype, {\n    setEulerFromRotationMatrix: function () {\n      console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n    },\n    setEulerFromQuaternion: function () {\n      console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n    },\n    getPositionFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n      return this.setFromMatrixPosition(m);\n    },\n    getScaleFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n      return this.setFromMatrixScale(m);\n    },\n    getColumnFromMatrix: function (index, matrix) {\n      console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n      return this.setFromMatrixColumn(matrix, index);\n    },\n    applyProjection: function (m) {\n      console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n      return this.applyMatrix4(m);\n    },\n    fromAttribute: function (attribute, index, offset) {\n      console.error('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    }\n  });\n  Object.assign(Vector4.prototype, {\n    fromAttribute: function (attribute, index, offset) {\n      console.error('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    }\n  }); //\n\n  Geometry.prototype.computeTangents = function () {\n    console.warn('THREE.Geometry: .computeTangents() has been removed.');\n  };\n\n  Object.assign(Object3D.prototype, {\n    getChildByName: function (name) {\n      console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n      return this.getObjectByName(name);\n    },\n    renderDepth: function () {\n      console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n    },\n    translate: function (distance, axis) {\n      console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n      return this.translateOnAxis(axis, distance);\n    }\n  });\n  Object.defineProperties(Object3D.prototype, {\n    eulerOrder: {\n      get: function () {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function (value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n  Object.defineProperties(LOD.prototype, {\n    objects: {\n      get: function () {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  });\n  Object.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n    get: function () {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    },\n    set: function () {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    }\n  });\n  Object.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n    get: function () {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      return this.arcLengthDivisions;\n    },\n    set: function (value) {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      this.arcLengthDivisions = value;\n    }\n  }); //\n\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(Light.prototype, {\n    onlyShadow: {\n      set: function () {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function () {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function () {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(BufferAttribute.prototype, {\n    length: {\n      get: function () {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n        return this.array.length;\n      }\n    }\n  });\n  Object.assign(BufferGeometry.prototype, {\n    addIndex: function (index) {\n      console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n      this.setIndex(index);\n    },\n    addDrawCall: function (start, count, indexOffset) {\n      if (indexOffset !== undefined) {\n        console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n      }\n\n      console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n      this.addGroup(start, count);\n    },\n    clearDrawCalls: function () {\n      console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n      this.clearGroups();\n    },\n    computeTangents: function () {\n      console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n    },\n    computeOffsets: function () {\n      console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n    }\n  });\n  Object.defineProperties(BufferGeometry.prototype, {\n    drawcalls: {\n      get: function () {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function () {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Uniform.prototype, {\n    dynamic: {\n      set: function () {\n        console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n      }\n    },\n    onUpdate: {\n      value: function () {\n        console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n        return this;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Material.prototype, {\n    wrapAround: {\n      get: function () {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      },\n      set: function () {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function () {\n        console.warn('THREE.Material: .wrapRGB has been removed.');\n        return new Color();\n      }\n    }\n  });\n  Object.defineProperties(MeshPhongMaterial.prototype, {\n    metal: {\n      get: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n        return false;\n      },\n      set: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n      }\n    }\n  });\n  Object.defineProperties(ShaderMaterial.prototype, {\n    derivatives: {\n      get: function () {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function (value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  Object.assign(WebGLRenderer.prototype, {\n    getCurrentRenderTarget: function () {\n      console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n      return this.getRenderTarget();\n    },\n    supportsFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n      return this.extensions.get('OES_texture_float');\n    },\n    supportsHalfFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n      return this.extensions.get('OES_texture_half_float');\n    },\n    supportsStandardDerivatives: function () {\n      console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n      return this.extensions.get('OES_standard_derivatives');\n    },\n    supportsCompressedTextureS3TC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_s3tc');\n    },\n    supportsCompressedTexturePVRTC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n    },\n    supportsBlendMinMax: function () {\n      console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n      return this.extensions.get('EXT_blend_minmax');\n    },\n    supportsVertexTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n      return this.capabilities.vertexTextures;\n    },\n    supportsInstancedArrays: function () {\n      console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n      return this.extensions.get('ANGLE_instanced_arrays');\n    },\n    enableScissorTest: function (boolean) {\n      console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n      this.setScissorTest(boolean);\n    },\n    initMaterial: function () {\n      console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n    },\n    addPrePlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n    },\n    addPostPlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n    },\n    updateShadowMap: function () {\n      console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n    }\n  });\n  Object.defineProperties(WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function () {\n        return this.shadowMap.enabled;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function () {\n        return this.shadowMap.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function () {\n        return this.shadowMap.cullFace;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');\n        this.shadowMap.cullFace = value;\n      }\n    }\n  });\n  Object.defineProperties(WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function () {\n        return this.renderReverseSided ? CullFaceFront : CullFaceBack;\n      },\n      set: function (cullFace) {\n        var value = cullFace !== CullFaceBack;\n        console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\");\n        this.renderReverseSided = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Audio.prototype.load = function (file) {\n    console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n    var scope = this;\n    var audioLoader = new AudioLoader();\n    audioLoader.load(file, function (buffer) {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  };\n\n  AudioAnalyser.prototype.getData = function () {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }; //\n\n\n  var GeometryUtils = {\n    merge: function (geometry1, geometry2, materialIndexOffset) {\n      console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n      var matrix;\n\n      if (geometry2.isMesh) {\n        geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n        matrix = geometry2.matrix;\n        geometry2 = geometry2.geometry;\n      }\n\n      geometry1.merge(geometry2, matrix, materialIndexOffset);\n    },\n    center: function (geometry) {\n      console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n      return geometry.center();\n    }\n  };\n  var ImageUtils = {\n    crossOrigin: undefined,\n    loadTexture: function (url, mapping, onLoad, onError) {\n      console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n      var loader = new TextureLoader();\n      loader.setCrossOrigin(this.crossOrigin);\n      var texture = loader.load(url, onLoad, undefined, onError);\n      if (mapping) texture.mapping = mapping;\n      return texture;\n    },\n    loadTextureCube: function (urls, mapping, onLoad, onError) {\n      console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n      var loader = new CubeTextureLoader();\n      loader.setCrossOrigin(this.crossOrigin);\n      var texture = loader.load(urls, onLoad, undefined, onError);\n      if (mapping) texture.mapping = mapping;\n      return texture;\n    },\n    loadCompressedTexture: function () {\n      console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n    },\n    loadCompressedTextureCube: function () {\n      console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n    }\n  }; //\n\n  function Projector() {\n    console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n    this.projectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .projectVector() is now vector.project().');\n      vector.project(camera);\n    };\n\n    this.unprojectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n      vector.unproject(camera);\n    };\n\n    this.pickingRay = function () {\n      console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n    };\n  } //\n\n\n  function CanvasRenderer() {\n    console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n    this.domElement = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\n    this.clear = function () {};\n\n    this.render = function () {};\n\n    this.setClearColor = function () {};\n\n    this.setSize = function () {};\n  }\n\n  exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n  exports.WebGLRenderTarget = WebGLRenderTarget;\n  exports.WebGLRenderer = WebGLRenderer;\n  exports.ShaderLib = ShaderLib;\n  exports.UniformsLib = UniformsLib;\n  exports.UniformsUtils = UniformsUtils;\n  exports.ShaderChunk = ShaderChunk;\n  exports.FogExp2 = FogExp2;\n  exports.Fog = Fog;\n  exports.Scene = Scene;\n  exports.LensFlare = LensFlare;\n  exports.Sprite = Sprite;\n  exports.LOD = LOD;\n  exports.SkinnedMesh = SkinnedMesh;\n  exports.Skeleton = Skeleton;\n  exports.Bone = Bone;\n  exports.Mesh = Mesh;\n  exports.LineSegments = LineSegments;\n  exports.LineLoop = LineLoop;\n  exports.Line = Line;\n  exports.Points = Points;\n  exports.Group = Group;\n  exports.VideoTexture = VideoTexture;\n  exports.DataTexture = DataTexture;\n  exports.CompressedTexture = CompressedTexture;\n  exports.CubeTexture = CubeTexture;\n  exports.CanvasTexture = CanvasTexture;\n  exports.DepthTexture = DepthTexture;\n  exports.Texture = Texture;\n  exports.CompressedTextureLoader = CompressedTextureLoader;\n  exports.DataTextureLoader = DataTextureLoader;\n  exports.CubeTextureLoader = CubeTextureLoader;\n  exports.TextureLoader = TextureLoader;\n  exports.ObjectLoader = ObjectLoader;\n  exports.MaterialLoader = MaterialLoader;\n  exports.BufferGeometryLoader = BufferGeometryLoader;\n  exports.DefaultLoadingManager = DefaultLoadingManager;\n  exports.LoadingManager = LoadingManager;\n  exports.JSONLoader = JSONLoader;\n  exports.ImageLoader = ImageLoader;\n  exports.FontLoader = FontLoader;\n  exports.FileLoader = FileLoader;\n  exports.Loader = Loader;\n  exports.Cache = Cache;\n  exports.AudioLoader = AudioLoader;\n  exports.SpotLightShadow = SpotLightShadow;\n  exports.SpotLight = SpotLight;\n  exports.PointLight = PointLight;\n  exports.RectAreaLight = RectAreaLight;\n  exports.HemisphereLight = HemisphereLight;\n  exports.DirectionalLightShadow = DirectionalLightShadow;\n  exports.DirectionalLight = DirectionalLight;\n  exports.AmbientLight = AmbientLight;\n  exports.LightShadow = LightShadow;\n  exports.Light = Light;\n  exports.StereoCamera = StereoCamera;\n  exports.PerspectiveCamera = PerspectiveCamera;\n  exports.OrthographicCamera = OrthographicCamera;\n  exports.CubeCamera = CubeCamera;\n  exports.ArrayCamera = ArrayCamera;\n  exports.Camera = Camera;\n  exports.AudioListener = AudioListener;\n  exports.PositionalAudio = PositionalAudio;\n  exports.AudioContext = AudioContext;\n  exports.AudioAnalyser = AudioAnalyser;\n  exports.Audio = Audio;\n  exports.VectorKeyframeTrack = VectorKeyframeTrack;\n  exports.StringKeyframeTrack = StringKeyframeTrack;\n  exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n  exports.NumberKeyframeTrack = NumberKeyframeTrack;\n  exports.ColorKeyframeTrack = ColorKeyframeTrack;\n  exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n  exports.PropertyMixer = PropertyMixer;\n  exports.PropertyBinding = PropertyBinding;\n  exports.KeyframeTrack = KeyframeTrack;\n  exports.AnimationUtils = AnimationUtils;\n  exports.AnimationObjectGroup = AnimationObjectGroup;\n  exports.AnimationMixer = AnimationMixer;\n  exports.AnimationClip = AnimationClip;\n  exports.Uniform = Uniform;\n  exports.InstancedBufferGeometry = InstancedBufferGeometry;\n  exports.BufferGeometry = BufferGeometry;\n  exports.GeometryIdCount = GeometryIdCount;\n  exports.Geometry = Geometry;\n  exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n  exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n  exports.InterleavedBuffer = InterleavedBuffer;\n  exports.InstancedBufferAttribute = InstancedBufferAttribute;\n  exports.Face3 = Face3;\n  exports.Object3D = Object3D;\n  exports.Raycaster = Raycaster;\n  exports.Layers = Layers;\n  exports.EventDispatcher = EventDispatcher;\n  exports.Clock = Clock;\n  exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n  exports.LinearInterpolant = LinearInterpolant;\n  exports.DiscreteInterpolant = DiscreteInterpolant;\n  exports.CubicInterpolant = CubicInterpolant;\n  exports.Interpolant = Interpolant;\n  exports.Triangle = Triangle;\n  exports.Math = _Math;\n  exports.Spherical = Spherical;\n  exports.Cylindrical = Cylindrical;\n  exports.Plane = Plane;\n  exports.Frustum = Frustum;\n  exports.Sphere = Sphere;\n  exports.Ray = Ray;\n  exports.Matrix4 = Matrix4;\n  exports.Matrix3 = Matrix3;\n  exports.Box3 = Box3;\n  exports.Box2 = Box2;\n  exports.Line3 = Line3;\n  exports.Euler = Euler;\n  exports.Vector4 = Vector4;\n  exports.Vector3 = Vector3;\n  exports.Vector2 = Vector2;\n  exports.Quaternion = Quaternion;\n  exports.Color = Color;\n  exports.MorphBlendMesh = MorphBlendMesh;\n  exports.ImmediateRenderObject = ImmediateRenderObject;\n  exports.VertexNormalsHelper = VertexNormalsHelper;\n  exports.SpotLightHelper = SpotLightHelper;\n  exports.SkeletonHelper = SkeletonHelper;\n  exports.PointLightHelper = PointLightHelper;\n  exports.RectAreaLightHelper = RectAreaLightHelper;\n  exports.HemisphereLightHelper = HemisphereLightHelper;\n  exports.GridHelper = GridHelper;\n  exports.PolarGridHelper = PolarGridHelper;\n  exports.FaceNormalsHelper = FaceNormalsHelper;\n  exports.DirectionalLightHelper = DirectionalLightHelper;\n  exports.CameraHelper = CameraHelper;\n  exports.BoxHelper = BoxHelper;\n  exports.ArrowHelper = ArrowHelper;\n  exports.AxisHelper = AxisHelper;\n  exports.CatmullRomCurve3 = CatmullRomCurve3;\n  exports.CubicBezierCurve3 = CubicBezierCurve3;\n  exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n  exports.LineCurve3 = LineCurve3;\n  exports.ArcCurve = ArcCurve;\n  exports.EllipseCurve = EllipseCurve;\n  exports.SplineCurve = SplineCurve;\n  exports.CubicBezierCurve = CubicBezierCurve;\n  exports.QuadraticBezierCurve = QuadraticBezierCurve;\n  exports.LineCurve = LineCurve;\n  exports.Shape = Shape;\n  exports.Path = Path;\n  exports.ShapePath = ShapePath;\n  exports.Font = Font;\n  exports.CurvePath = CurvePath;\n  exports.Curve = Curve;\n  exports.ShapeUtils = ShapeUtils;\n  exports.SceneUtils = SceneUtils;\n  exports.WireframeGeometry = WireframeGeometry;\n  exports.ParametricGeometry = ParametricGeometry;\n  exports.ParametricBufferGeometry = ParametricBufferGeometry;\n  exports.TetrahedronGeometry = TetrahedronGeometry;\n  exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n  exports.OctahedronGeometry = OctahedronGeometry;\n  exports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n  exports.IcosahedronGeometry = IcosahedronGeometry;\n  exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n  exports.DodecahedronGeometry = DodecahedronGeometry;\n  exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n  exports.PolyhedronGeometry = PolyhedronGeometry;\n  exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n  exports.TubeGeometry = TubeGeometry;\n  exports.TubeBufferGeometry = TubeBufferGeometry;\n  exports.TorusKnotGeometry = TorusKnotGeometry;\n  exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n  exports.TorusGeometry = TorusGeometry;\n  exports.TorusBufferGeometry = TorusBufferGeometry;\n  exports.TextGeometry = TextGeometry;\n  exports.TextBufferGeometry = TextBufferGeometry;\n  exports.SphereGeometry = SphereGeometry;\n  exports.SphereBufferGeometry = SphereBufferGeometry;\n  exports.RingGeometry = RingGeometry;\n  exports.RingBufferGeometry = RingBufferGeometry;\n  exports.PlaneGeometry = PlaneGeometry;\n  exports.PlaneBufferGeometry = PlaneBufferGeometry;\n  exports.LatheGeometry = LatheGeometry;\n  exports.LatheBufferGeometry = LatheBufferGeometry;\n  exports.ShapeGeometry = ShapeGeometry;\n  exports.ShapeBufferGeometry = ShapeBufferGeometry;\n  exports.ExtrudeGeometry = ExtrudeGeometry;\n  exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n  exports.EdgesGeometry = EdgesGeometry;\n  exports.ConeGeometry = ConeGeometry;\n  exports.ConeBufferGeometry = ConeBufferGeometry;\n  exports.CylinderGeometry = CylinderGeometry;\n  exports.CylinderBufferGeometry = CylinderBufferGeometry;\n  exports.CircleGeometry = CircleGeometry;\n  exports.CircleBufferGeometry = CircleBufferGeometry;\n  exports.BoxGeometry = BoxGeometry;\n  exports.BoxBufferGeometry = BoxBufferGeometry;\n  exports.ShadowMaterial = ShadowMaterial;\n  exports.SpriteMaterial = SpriteMaterial;\n  exports.RawShaderMaterial = RawShaderMaterial;\n  exports.ShaderMaterial = ShaderMaterial;\n  exports.PointsMaterial = PointsMaterial;\n  exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n  exports.MeshStandardMaterial = MeshStandardMaterial;\n  exports.MeshPhongMaterial = MeshPhongMaterial;\n  exports.MeshToonMaterial = MeshToonMaterial;\n  exports.MeshNormalMaterial = MeshNormalMaterial;\n  exports.MeshLambertMaterial = MeshLambertMaterial;\n  exports.MeshDepthMaterial = MeshDepthMaterial;\n  exports.MeshBasicMaterial = MeshBasicMaterial;\n  exports.LineDashedMaterial = LineDashedMaterial;\n  exports.LineBasicMaterial = LineBasicMaterial;\n  exports.Material = Material;\n  exports.Float64BufferAttribute = Float64BufferAttribute;\n  exports.Float32BufferAttribute = Float32BufferAttribute;\n  exports.Uint32BufferAttribute = Uint32BufferAttribute;\n  exports.Int32BufferAttribute = Int32BufferAttribute;\n  exports.Uint16BufferAttribute = Uint16BufferAttribute;\n  exports.Int16BufferAttribute = Int16BufferAttribute;\n  exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n  exports.Uint8BufferAttribute = Uint8BufferAttribute;\n  exports.Int8BufferAttribute = Int8BufferAttribute;\n  exports.BufferAttribute = BufferAttribute;\n  exports.REVISION = REVISION;\n  exports.MOUSE = MOUSE;\n  exports.CullFaceNone = CullFaceNone;\n  exports.CullFaceBack = CullFaceBack;\n  exports.CullFaceFront = CullFaceFront;\n  exports.CullFaceFrontBack = CullFaceFrontBack;\n  exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n  exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n  exports.BasicShadowMap = BasicShadowMap;\n  exports.PCFShadowMap = PCFShadowMap;\n  exports.PCFSoftShadowMap = PCFSoftShadowMap;\n  exports.FrontSide = FrontSide;\n  exports.BackSide = BackSide;\n  exports.DoubleSide = DoubleSide;\n  exports.FlatShading = FlatShading;\n  exports.SmoothShading = SmoothShading;\n  exports.NoColors = NoColors;\n  exports.FaceColors = FaceColors;\n  exports.VertexColors = VertexColors;\n  exports.NoBlending = NoBlending;\n  exports.NormalBlending = NormalBlending;\n  exports.AdditiveBlending = AdditiveBlending;\n  exports.SubtractiveBlending = SubtractiveBlending;\n  exports.MultiplyBlending = MultiplyBlending;\n  exports.CustomBlending = CustomBlending;\n  exports.AddEquation = AddEquation;\n  exports.SubtractEquation = SubtractEquation;\n  exports.ReverseSubtractEquation = ReverseSubtractEquation;\n  exports.MinEquation = MinEquation;\n  exports.MaxEquation = MaxEquation;\n  exports.ZeroFactor = ZeroFactor;\n  exports.OneFactor = OneFactor;\n  exports.SrcColorFactor = SrcColorFactor;\n  exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n  exports.SrcAlphaFactor = SrcAlphaFactor;\n  exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n  exports.DstAlphaFactor = DstAlphaFactor;\n  exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n  exports.DstColorFactor = DstColorFactor;\n  exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n  exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n  exports.NeverDepth = NeverDepth;\n  exports.AlwaysDepth = AlwaysDepth;\n  exports.LessDepth = LessDepth;\n  exports.LessEqualDepth = LessEqualDepth;\n  exports.EqualDepth = EqualDepth;\n  exports.GreaterEqualDepth = GreaterEqualDepth;\n  exports.GreaterDepth = GreaterDepth;\n  exports.NotEqualDepth = NotEqualDepth;\n  exports.MultiplyOperation = MultiplyOperation;\n  exports.MixOperation = MixOperation;\n  exports.AddOperation = AddOperation;\n  exports.NoToneMapping = NoToneMapping;\n  exports.LinearToneMapping = LinearToneMapping;\n  exports.ReinhardToneMapping = ReinhardToneMapping;\n  exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n  exports.CineonToneMapping = CineonToneMapping;\n  exports.UVMapping = UVMapping;\n  exports.CubeReflectionMapping = CubeReflectionMapping;\n  exports.CubeRefractionMapping = CubeRefractionMapping;\n  exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n  exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n  exports.SphericalReflectionMapping = SphericalReflectionMapping;\n  exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n  exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n  exports.RepeatWrapping = RepeatWrapping;\n  exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n  exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n  exports.NearestFilter = NearestFilter;\n  exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n  exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n  exports.LinearFilter = LinearFilter;\n  exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n  exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n  exports.UnsignedByteType = UnsignedByteType;\n  exports.ByteType = ByteType;\n  exports.ShortType = ShortType;\n  exports.UnsignedShortType = UnsignedShortType;\n  exports.IntType = IntType;\n  exports.UnsignedIntType = UnsignedIntType;\n  exports.FloatType = FloatType;\n  exports.HalfFloatType = HalfFloatType;\n  exports.UnsignedShort4444Type = UnsignedShort4444Type;\n  exports.UnsignedShort5551Type = UnsignedShort5551Type;\n  exports.UnsignedShort565Type = UnsignedShort565Type;\n  exports.UnsignedInt248Type = UnsignedInt248Type;\n  exports.AlphaFormat = AlphaFormat;\n  exports.RGBFormat = RGBFormat;\n  exports.RGBAFormat = RGBAFormat;\n  exports.LuminanceFormat = LuminanceFormat;\n  exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n  exports.RGBEFormat = RGBEFormat;\n  exports.DepthFormat = DepthFormat;\n  exports.DepthStencilFormat = DepthStencilFormat;\n  exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n  exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n  exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n  exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n  exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n  exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n  exports.RGB_ETC1_Format = RGB_ETC1_Format;\n  exports.LoopOnce = LoopOnce;\n  exports.LoopRepeat = LoopRepeat;\n  exports.LoopPingPong = LoopPingPong;\n  exports.InterpolateDiscrete = InterpolateDiscrete;\n  exports.InterpolateLinear = InterpolateLinear;\n  exports.InterpolateSmooth = InterpolateSmooth;\n  exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n  exports.ZeroSlopeEnding = ZeroSlopeEnding;\n  exports.WrapAroundEnding = WrapAroundEnding;\n  exports.TrianglesDrawMode = TrianglesDrawMode;\n  exports.TriangleStripDrawMode = TriangleStripDrawMode;\n  exports.TriangleFanDrawMode = TriangleFanDrawMode;\n  exports.LinearEncoding = LinearEncoding;\n  exports.sRGBEncoding = sRGBEncoding;\n  exports.GammaEncoding = GammaEncoding;\n  exports.RGBEEncoding = RGBEEncoding;\n  exports.LogLuvEncoding = LogLuvEncoding;\n  exports.RGBM7Encoding = RGBM7Encoding;\n  exports.RGBM16Encoding = RGBM16Encoding;\n  exports.RGBDEncoding = RGBDEncoding;\n  exports.BasicDepthPacking = BasicDepthPacking;\n  exports.RGBADepthPacking = RGBADepthPacking;\n  exports.CubeGeometry = BoxGeometry;\n  exports.Face4 = Face4;\n  exports.LineStrip = LineStrip;\n  exports.LinePieces = LinePieces;\n  exports.MeshFaceMaterial = MeshFaceMaterial;\n  exports.MultiMaterial = MultiMaterial;\n  exports.PointCloud = PointCloud;\n  exports.Particle = Particle;\n  exports.ParticleSystem = ParticleSystem;\n  exports.PointCloudMaterial = PointCloudMaterial;\n  exports.ParticleBasicMaterial = ParticleBasicMaterial;\n  exports.ParticleSystemMaterial = ParticleSystemMaterial;\n  exports.Vertex = Vertex;\n  exports.DynamicBufferAttribute = DynamicBufferAttribute;\n  exports.Int8Attribute = Int8Attribute;\n  exports.Uint8Attribute = Uint8Attribute;\n  exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n  exports.Int16Attribute = Int16Attribute;\n  exports.Uint16Attribute = Uint16Attribute;\n  exports.Int32Attribute = Int32Attribute;\n  exports.Uint32Attribute = Uint32Attribute;\n  exports.Float32Attribute = Float32Attribute;\n  exports.Float64Attribute = Float64Attribute;\n  exports.ClosedSplineCurve3 = ClosedSplineCurve3;\n  exports.SplineCurve3 = SplineCurve3;\n  exports.Spline = Spline;\n  exports.BoundingBoxHelper = BoundingBoxHelper;\n  exports.EdgesHelper = EdgesHelper;\n  exports.WireframeHelper = WireframeHelper;\n  exports.XHRLoader = XHRLoader;\n  exports.BinaryTextureLoader = BinaryTextureLoader;\n  exports.GeometryUtils = GeometryUtils;\n  exports.ImageUtils = ImageUtils;\n  exports.Projector = Projector;\n  exports.CanvasRenderer = CanvasRenderer;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/arbuild/js/three.js"],"names":["global","factory","exports","module","define","amd","THREE","Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","name","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","chars","split","uuid","Array","rnd","r","random","join","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","round","log","LN2","nextPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","dot","lengthSq","sqrt","lengthManhattan","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isTexture","toJSON","meta","textures","getDataURL","canvas","toDataURL","document","createElementNS","width","height","getContext","drawImage","metadata","generator","wrap","images","url","dispose","transformUv","uv","Vector4","z","isVector4","setZ","setW","applyMatrix4","e","elements","setAxisAngleFromQuaternion","q","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","create","isWebGLRenderTargetCube","Quaternion","_x","_y","_z","_w","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","Vector3","EPS","vFrom","vTo","crossVectors","inverse","conjugate","p","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","Matrix4","camera","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","d","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","setXYZ","determinant","transpose","tmp","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","compose","position","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","DataTexture","data","isDataTexture","CubeTexture","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","map","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","u","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue","ColorKeywords","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hsl","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","UniformsLib","common","diffuse","opacity","offsetRepeat","specularMap","alphaMap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","points","UniformsUtils","merge","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","isArray","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","physical","clearCoat","clearCoatRoughness","Box2","Infinity","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","getCenter","result","getSize","point","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","LensFlarePlugin","flares","context","state","vertexBuffer","elementBuffer","shader","attributes","tempTexture","occlusionTexture","init","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","vertex","getAttribLocation","renderType","occlusionMap","rotation","screenPosition","render","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","setMask","flare","matrixWorldInverse","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","j","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","createShader","FRAGMENT_SHADER","VERTEX_SHADER","prefix","getPrecision","shaderSource","compileShader","attachShader","linkProgram","SpritePlugin","sprites","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","modelViewMatrix","fogType","alphaTest","fillStyle","fillRect","oldFogType","sceneFogType","isFog","isFogExp2","density","sort","painterSortStable","material","visible","onBeforeRender","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","onAfterRender","renderOrder","materialId","Material","side","shading","vertexColors","transparent","depthFunc","clippingPlanes","clipIntersection","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","isMaterial","onBeforeCompile","setValues","key","newValue","currentValue","isRoot","sizeAttenuation","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","extractFromCache","cache","srcPlanes","dstPlanes","ShaderMaterial","parameters","defines","linewidth","clipping","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","isShaderMaterial","MeshDepthMaterial","depthPacking","isMeshDepthMaterial","Box3","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromObject","expandByObject","scope","updateMatrixWorld","traverse","node","geometry","isGeometry","isBufferGeometry","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Matrix3","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","line","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","referencePoint","normalMatrix","Frustum","p0","p1","p2","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","d1","d2","WebGLShadowMap","_renderer","_lights","_objects","capabilities","_gl","_state","_frustum","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","enabled","autoUpdate","renderReverseSided","renderSingleSided","setClear","setScissorTest","faceCount","light","isPointLight","shadowCamera","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setRenderTarget","clear","face","vpDimensions","renderObject","clearColor","getClearColor","clearAlpha","getClearAlpha","setClearColor","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","morphAttributes","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","layers","test","isMesh","isLine","isPoints","castShadow","frustumCulled","groups","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","children","WebGLAttributes","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","toggle","object3DId","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","enumerable","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","isRootObject","geometries","materials","JSON","stringify","serialize","library","element","uuids","recursive","parse","Camera","OrthographicCamera","zoom","view","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","cx","cy","zoomW","zoomH","scaleW","scaleH","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","Face3","vertexNormals","GeometryIdCount","Geometry","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","BufferGeometry","drawRange","MaxIndex","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","combine","isMeshBasicMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","v0","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Mesh","drawMode","updateMorphTargets","setDrawMode","ml","keys","morphTargetInfluences","morphTargetDictionary","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","objects","planeCamera","planeMesh","boxCamera","boxMesh","forceClear","background","autoClear","autoClearColor","autoClearDepth","autoClearStencil","setClearAlpha","reversePainterSortStable","WebGLRenderList","opaque","opaqueLastIndex","transparentLastIndex","renderItem","finish","WebGLRenderLists","lists","list","WebGLIndexedBufferRenderer","infoRender","mode","setMode","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLLights","halfWidth","halfHeight","WebGLObjects","updateList","frame","addLineNumbers","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","flatShading","logarithmicDepthBuffer","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","numClipIntersection","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLTextures","paramThreeToGL","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","LINEAR","onTextureDispose","deallocateTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","glType","setTextureParameters","TEXTURE_CUBE_MAP_POSITIVE_X","mipmap","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","reset","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","maxTextures","MAX_COMBINED_TEXTURE_IMAGE_UNITS","VERSION","lineWidthAvailable","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","setFlipSided","setCullFace","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setMaterial","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglSlot","webglType","boundTexture","apply","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","window","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","cameraVR","currentSize","currentPixelRatio","onVRDisplayPresentChange","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","orientation","stageParameters","sittingToStandingTransform","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","currentRenderList","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","_matrix4","_matrix42","ambient","_infoMemory","_infoRender","memory","contextAttributes","onContextLost","programCache","lightCache","renderLists","vr","bufferRenderer","indexedBufferRenderer","getTargetPixelRatio","setDefaultGLState","spritePlugin","lensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","absNumericalSort","setProgram","geometryProgram","updateBuffers","activeInfluences","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","POINTS","isInstancedBufferGeometry","startIndex","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","setupLights","initMaterial","animate","onFrame","requestAnimationFrame","projectObject","setupShadows","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isSprite","isLensFlare","isImmediateRenderObject","renderList","camera2","materialProperties","programChange","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsNormal","ltcMat","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","emissiveIntensity","uvScaleMap","gapSize","lightShadowsLength","ll","intensity","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isRectAreaLight","isHemisphereLight","setFaceCulling","frontFaceDirection","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","FogExp2","Fog","Scene","LensFlare","vecX","vecY","wantedRotation","SpriteMaterial","isSpriteMaterial","Sprite","intersectPoint","worldPosition","worldScale","guessSizeSq","LOD","levels","level","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","LineSegments","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","nbVertices","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","Group","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateBufferData","generateSegment","generateIndices","P","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","removeDupEndPts","forEach","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","shape","concat","hole","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","failedCuts","tmpShape1","tmpShape2","tmpHole1","tmpHole2","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","indicesArray","sl","arrays","addShape","placeholder","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudePts","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","getSpacedPoints","ahole","shapePoints","extractPoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","extrudeMaterial","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","ShadowMaterial","isShadowMaterial","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","DefaultLoadingManager","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","ArrayBuffer","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","substr","crossOrigin","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrackPrototype","TimeBufferType","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","setInterpolation","interpolation","factoryMethod","message","ValueTypeName","createInterpolant","getInterpolation","shift","timeOffset","timeScale","trim","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","KeyframeTrackConstructor","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","json","trackType","_getTrackTypeForValueTypeName","track","typeName","AnimationClip","duration","tracks","resetDuration","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","onLoadStart","onLoadProgress","onLoadComplete","Handlers","handlers","regex","extractUrlBase","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","CatmullRom","t2","t3","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","LineCurve","isLineCurve","tangent","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","SplineCurve","intPoint","weight","point0","point1","point2","point3","CubicBezierCurve","v3","QuadraticBezierCurve","PathPrototype","fromPoints","moveTo","lineTo","currentPoint","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","aRadius","absarc","absellipse","ellipse","firstPoint","lastPoint","Path","Shape","getPointsHoles","holesPts","extractAllPoints","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","createPaths","line_height","yMax","yMin","underlineThickness","paths","char","ret","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","setContext","AudioLoader","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","stop","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","directoryRe","nodeRe","objectRe","propertyRe","trackRe","RegExp","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","setValue_direct_setNeedsUpdate","targetObject","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","var_args","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","isInterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","ImmediateRenderObject","renderCallback","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","hx","hy","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxisHelper","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","pz","CatmullRomCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","SceneUtils","createMultiMaterialObject","detach","attach","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","samplingCoef","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","fromAttribute","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CubeGeometry"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '86';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector2();\n\t\t\tvar max = new Vector2();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\t\tthis.y = c.y;\n\t\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x = new Vector3();\n\t\t\tvar y = new Vector3();\n\t\t\tvar z = new Vector3();\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target );\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\t// up and z are parallel\n\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tz.normalize();\n\t\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\t}\n\n\t\t\t\tx.normalize();\n\t\t\t\ty.crossVectors( z, x );\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\t\t\t\tmatrix.copy( this );\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat3array.set( v.elements );\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t}\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat4array.set( v.elements );\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor ( ; ; ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\tspecularMap: { value: null },\n\t\t\talphaMap: { value: null },\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = asin( flipNormal * reflectVec.y ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_flip: normal_flip,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t\ttFlip: { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: {\n\t\t\t\tlightPos: { value: new Vector3() }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlarePlugin( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.buffers.depth.setMask( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.buffers.depth.setMask( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpritePlugin( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( fog.isFog ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tdata.skinning = this.skinning;\n\t\t\tdata.morphTargets = this.morphTargets;\n\n\t\t\tdata.dithering = this.dithering;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function expandByObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t\t_state = _renderer.state,\n\t\t\t_frustum = new Frustum(),\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_lightShadows = _lights.shadows,\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t\t_lookTarget = new Vector3(),\n\t\t\t_lightPositionWorld = new Vector3(),\n\n\t\t\t_MorphingFlag = 1,\n\t\t\t_SkinningFlag = 2,\n\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\t\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor();\n\t\t\tvar clearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = {};\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = gl.FLOAT;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = gl.FLOAT;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = gl.SHORT;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = gl.INT;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = gl.BYTE;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( attribute.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers[ attribute.uuid ];\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\t\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tvar object3DId = 0;\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( this.isCamera ) {\n\n\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\t}\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\t\t\t\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar count = 0;\n\tfunction GeometryIdCount() { return count++; }\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) return - Infinity;\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar position = this.attributes.position;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tx = normals.getX( i );\n\t\t\t\ty = normals.getY( i );\n\t\t\t\tz = normals.getZ( i );\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals.setXYZ( i, x * n, y * n, z * n );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t// BoxBufferGeometry\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tnormal: function () {\n\n\t\t\tvar v0 = new Vector3();\n\n\t\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tresult.subVectors( c, b );\n\t\t\t\tv0.subVectors( a, b );\n\t\t\t\tresult.cross( v0 );\n\n\t\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tbarycoordFromPoint: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\t\tv0.subVectors( c, a );\n\t\t\t\tv1.subVectors( b, a );\n\t\t\t\tv2.subVectors( point, a );\n\n\t\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\t// collinear or singular triangle\n\t\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t\t}\n\n\t\t\t\tvar invDenom = 1 / denom;\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t\t// barycentric coordinates must always sum to 1\n\t\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane = new Plane();\n\t\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\tvar projectedPoint = new Vector3();\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uv ) {\n\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar intersection;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar uvs;\n\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeCamera, planeMesh;\n\t\tvar boxCamera, boxMesh;\n\n\t\tfunction render( scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tif ( boxCamera === undefined ) {\n\n\t\t\t\t\tboxCamera = new PerspectiveCamera();\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 5, 5, 5 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tboxCamera.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tboxCamera.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tboxCamera.matrixWorldInverse.getInverse( boxCamera.matrixWorld );\n\n\t\t\t\tboxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tboxMesh.modelViewMatrix.multiplyMatrices( boxCamera.matrixWorldInverse, boxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\trenderer.renderBufferDirect( boxCamera, null, boxMesh.geometry, boxMesh.material, boxMesh, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLRenderList() {\n\n\t\tvar opaque = [];\n\t\tvar opaqueLastIndex = - 1;\n\n\t\tvar transparent = [];\n\t\tvar transparentLastIndex = - 1;\n\n\t\tfunction init() {\n\n\t\t\topaqueLastIndex = - 1;\n\t\t\ttransparentLastIndex = - 1;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparent;\n\t\t\t\tindex = ++ transparentLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaque;\n\t\t\t\tindex = ++ opaqueLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction finish() {\n\n\t\t\topaque.length = opaqueLastIndex + 1;\n\t\t\ttransparent.length = transparentLastIndex + 1;\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\topaque.sort( painterSortStable );\n\t\t\ttransparent.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tfinish: finish,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = {};\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar hash = scene.id + ',' + camera.id;\n\t\t\tvar list = lists[ hash ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists[ hash ] = list;\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\t\tvar geometries = {};\n\t\tvar wireframeAttributes = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO Remove duplicate code\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t\t}\n\n\t\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfoMemory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfoMemory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) return attribute;\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLLights() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, geometries, infoRender ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = infoRender.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tclear: clear\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, code, material, shader, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar extensions = material.extensions;\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function() {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms =\n\t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function() {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.shading === FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, code, material, shader, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, infoMemory ) {\n\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tinfoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error('Unknown depthTexture format')\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\tfunction get( object ) {\n\n\t\t\tvar uuid = object.uuid;\n\t\t\tvar map = properties[ uuid ];\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tdelete properties[ object.uuid ];\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tproperties = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tclear: clear\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, paramThreeToGL ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4();\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\t\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\t\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tfunction init() {\n\n\t\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\t\tdepthBuffer.setClear( 1 );\n\t\t\tstencilBuffer.setClear( 0 );\n\n\t\t\tenable( gl.DEPTH_TEST );\n\t\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\t\tsetFlipSided( false );\n\t\t\tsetCullFace( CullFaceBack );\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tenable( gl.BLEND );\n\t\t\tsetBlending( NormalBlending );\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( ( blending !== CustomBlending ) && ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) ) {\n\n\t\t\t\tif ( blending === AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t: enable( gl.CULL_FACE );\n\n\t\t\tsetFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: setBlending( NoBlending );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getScissorTest() {\n\n\t\t\treturn currentScissorTest;\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinit: init,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tgetScissorTest: getScissorTest,\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tif ( 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tvar currentSize, currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( device.isPresenting ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\t} else if ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t}\n\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\t\tthis.standing = false;\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( device === null ) return camera;\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tvar pose = frameData.pose;\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t\t//\n\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\t// HACK @mrdoob\n\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t\t}\n\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t// import { Sphere } from '../math/Sphere';\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar currentRenderList = null;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t// internal state cache\n\n\t\t\t_currentProgram = null,\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\t\t\t_currentGeometryProgram = '',\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\n\t\t\t//\n\n\t\t\t_usedTextureUnits = 0,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3(),\n\t\t\t_matrix4 = new Matrix4(),\n\t\t\t_matrix42 = new Matrix4(),\n\n\t\t\t// light arrays cache\n\n\t\t\t_lights = {\n\n\t\t\t\thash: '',\n\n\t\t\t\tambient: [ 0, 0, 0 ],\n\t\t\t\tdirectional: [],\n\t\t\t\tdirectionalShadowMap: [],\n\t\t\t\tdirectionalShadowMatrix: [],\n\t\t\t\tspot: [],\n\t\t\t\tspotShadowMap: [],\n\t\t\t\tspotShadowMatrix: [],\n\t\t\t\trectArea: [],\n\t\t\t\tpoint: [],\n\t\t\t\tpointShadowMap: [],\n\t\t\t\tpointShadowMatrix: [],\n\t\t\t\themi: [],\n\n\t\t\t\tshadows: []\n\n\t\t\t},\n\n\t\t\t// info\n\n\t\t\t_infoMemory = {\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\t\t\t},\n\n\t\t\t_infoRender = {\n\n\t\t\t\tframe: 0,\n\t\t\t\tcalls: 0,\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0,\n\t\t\t\tpoints: 0\n\n\t\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: _infoMemory,\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n\n\t\tvar properties = new WebGLProperties();\n\t\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, _infoMemory );\n\t\tvar attributes = new WebGLAttributes( _gl );\n\t\tvar geometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\tvar objects = new WebGLObjects( _gl, geometries, _infoRender );\n\t\tvar programCache = new WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new WebGLLights();\n\t\tvar renderLists = new WebGLRenderLists();\n\n\t\tvar background = new WebGLBackground( this, state, objects, _premultipliedAlpha );\n\t\tvar vr = new WebVRManager( this );\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.renderLists = renderLists;\n\t\tthis.state = state;\n\t\tthis.vr = vr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tvar device = vr.getDevice();\n\n\t\t\tif ( device && device.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width * _pixelRatio,\n\t\t\t\theight: _height * _pixelRatio\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = width * pixelRatio;\n\t\t\t_canvas.height = height * pixelRatio;\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t_viewport.set( x, _height - y - height, width, height );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\t_scissor.set( x, _height - y - height, width, height );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = background.getClearColor;\n\t\tthis.setClearColor = background.setClearColor;\n\t\tthis.getClearAlpha = background.getClearAlpha;\n\t\tthis.setClearAlpha = background.setClearAlpha;\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t\trenderLists.dispose();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\t\t\tobjects.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\t\tmaterial.shading === FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\t// TODO Remove allocations\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n\t\t\t\t\tmorphInfluences[ i ] = 0.0;\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue( _gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tlights = [];\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.animate = function ( callback ) {\n\n\t\t\tfunction onFrame() {\n\n\t\t\t\tcallback();\n\n\t\t\t\t( vr.getDevice() || window ).requestAnimationFrame( onFrame );\n\n\t\t\t}\n\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( onFrame );\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.frame ++;\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tbackground.render( scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_this.setScissorTest( false );\n\n\t\t\t}\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\t/*\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tvar _sphere = new Sphere();\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\t\t*/\n\n\t\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\t\tif ( ! object.visible ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\t_this.setViewport( x, y, width, height );\n\t\t\t\t\t\t\t_this.setScissor( x, y, width, height );\n\t\t\t\t\t\t\t_this.setScissorTest( true );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.rectAreaLights.value = _lights.rectArea;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isMeshNormalMaterial ||\n\t\t\t\t\tmaterial.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ] = light;\n\t\t\t\t\tlightShadowsLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights( lights, camera ) {\n\n\t\t\tvar l, ll, light, shadow,\n\t\t\t\tr = 0, g = 0, b = 0,\n\t\t\t\tcolor,\n\t\t\t\tintensity,\n\t\t\t\tdistance,\n\t\t\t\tshadowMap,\n\n\t\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\t\tdirectionalLength = 0,\n\t\t\t\tpointLength = 0,\n\t\t\t\tspotLength = 0,\n\t\t\t\trectAreaLength = 0,\n\t\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\t\tuniforms.color\n\t\t\t\t\t\t.copy( color )\n\t\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\t_matrix42.identity();\n\t\t\t\t\t_matrix4.copy( light.matrixWorld );\n\t\t\t\t\t_matrix4.premultiply( viewMatrix );\n\t\t\t\t\t_matrix42.extractRotation( _matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( _matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( _matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\t_lights.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tshadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.rectArea.length = rectAreaLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t// TODO (sam-g-steel) why aren't we using join\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return _gl.BYTE;\n\t\t\tif ( p === ShortType ) return _gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return _gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return _gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === OneFactor ) return _gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar intersectPoint = new Vector3();\n\t\t\tvar worldPosition = new Vector3();\n\t\t\tvar worldScale = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\t\t\tvar identityMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\tvar bones = this.bones;\n\t\t\t\tvar boneInverses = this.boneInverses;\n\t\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tvar bones = this.initBones();\n\t\tvar skeleton = new Skeleton( bones );\n\n\t\tthis.bind( skeleton, this.matrixWorld );\n\n\t\tthis.normalizeSkinWeights();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tinitBones: function () {\n\n\t\t\tvar bones = [], bone, gbone;\n\t\t\tvar i, il;\n\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\t// create new 'Bone' object\n\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t\tbones.push( bone );\n\n\t\t\t\t\t// apply values\n\n\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t\t}\n\n\t\t\t\t// second, create bone hierarchy\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t\t// let's update the corresponding matrices\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn bones;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar scale, i;\n\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\tsphere.radius += threshold;\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tp0 = func( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t\t  1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\t\tvar positionAttribute = this.getAttribute( \"position\" );\n\t\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\t\tvar uvAttribute = this.getAttribute( \"uv\" );\n\t\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\t\tvar IndexAttribute = this.index;\n\t\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\t\treturn {\n\t\t\tposition: verticesArray,\n\t\t\tuv: uvArray,\n\t\t\tindex: indicesArray\n\t\t};\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\t\toptions.arrays = this.getArrays();\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t\tthis.setIndex( options.arrays.index );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\t\tvar verticesArray = arrays.position;\n\t\tvar indicesArray = arrays.index;\n\t\tvar uvArray = arrays.uv;\n\n\t\tvar placeholder = [];\n\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tindicesArray.push( verticesArray.length / 3 );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t\tif ( ! options.arrays ) {\n\n\t\t\tthis.setIndex( indicesArray );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry(  text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t\t// also check if holes are in the opposite direction\n\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, {\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( Material.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FileLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FileLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( DataTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\timage.addEventListener( 'load', function () {\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\t/*\n\t\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t\t}, false );\n\t\t\t*/\n\n\t\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar texture = new Texture();\n\t\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.position.set( 0, 1, 0 );\n\t\tthis.updateMatrix();\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t\t// TODO (abelnation): distance/decay\n\n\t\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t\t// TODO (abelnation): shadows\n\n\t}\n\n\t// TODO (abelnation): RectAreaLight update when light shape is changed\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif ( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\tObject.assign( Loader.prototype, {\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar BlendingMode = {\n\t\t\t\tNoBlending: NoBlending,\n\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\tCustomBlending: CustomBlending\n\t\t\t};\n\n\t\t\tvar color = new Color();\n\t\t\tvar textureLoader = new TextureLoader();\n\t\t\tvar materialLoader = new MaterialLoader();\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function ( json, texturePath ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\treturn new Vector2(\n\t\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t\t);\n\n\t};\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector2(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector2(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [];\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( context === undefined ) {\n\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = AudioContext.getContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.loop = false;\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\t\tsource.start( 0, this.startTime );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\t\t\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param  {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t\t},\n\n\t\tparseTrackName: function () {\n\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t\t// be matched to parse the rest of the track name.\n\t\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t\t// Object on target node, and accessor. Name may contain only word\n\t\t\t// characters. Accessor may contain any character except closing bracket.\n\t\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t\t// contain any non-bracket characters.\n\t\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\t\tvar trackRe = new RegExp(''\n\t\t\t\t+ '^'\n\t\t\t\t+ directoryRe.source\n\t\t\t\t+ nodeRe.source\n\t\t\t\t+ objectRe.source\n\t\t\t\t+ propertyRe.source\n\t\t\t\t+ '$'\n\t\t\t);\n\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\t\treturn function ( trackName ) {\n\n\t\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar results = {\n\t\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t\t};\n\n\t\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\n\t\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t\t// include '.' characters).\n\t\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\n\t\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn results;\n\n\t\t\t\t};\n\n\t\t}(),\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\t\tknownObject = undefined;\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\t\tthis.y = vec3.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction MorphBlendMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.animationsMap = {};\n\t\tthis.animationsList = [];\n\n\t\t// prepare default animation\n\t\t// (all frames played together in 1 second)\n\n\t\tvar numFrames = this.geometry.morphTargets.length;\n\n\t\tvar name = \"__default\";\n\n\t\tvar startFrame = 0;\n\t\tvar endFrame = numFrames - 1;\n\n\t\tvar fps = numFrames / 1;\n\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\n\t\tthis.setAnimationWeight( name, 1 );\n\n\t}\n\n\tMorphBlendMesh.prototype = Object.create( Mesh.prototype );\n\tMorphBlendMesh.prototype.constructor = MorphBlendMesh;\n\n\tMorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n\t\tvar animation = {\n\n\t\t\tstart: start,\n\t\t\tend: end,\n\n\t\t\tlength: end - start + 1,\n\n\t\t\tfps: fps,\n\t\t\tduration: ( end - start ) / fps,\n\n\t\t\tlastFrame: 0,\n\t\t\tcurrentFrame: 0,\n\n\t\t\tactive: false,\n\n\t\t\ttime: 0,\n\t\t\tdirection: 1,\n\t\t\tweight: 1,\n\n\t\t\tdirectionBackwards: false,\n\t\t\tmirroredLoop: false\n\n\t\t};\n\n\t\tthis.animationsMap[ name ] = animation;\n\t\tthis.animationsList.push( animation );\n\n\t};\n\n\tMorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\n\n\t\tvar firstAnimation, frameRanges = {};\n\n\t\tvar geometry = this.geometry;\n\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morph = geometry.morphTargets[ i ];\n\t\t\tvar chunks = morph.name.match( pattern );\n\n\t\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\t\tvar name = chunks[ 1 ];\n\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\t\tvar range = frameRanges[ name ];\n\n\t\t\t\tif ( i < range.start ) range.start = i;\n\t\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var name in frameRanges ) {\n\n\t\t\tvar range = frameRanges[ name ];\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t\t}\n\n\t\tthis.firstAnimation = firstAnimation;\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = 1;\n\t\t\tanimation.directionBackwards = false;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = - 1;\n\t\t\tanimation.directionBackwards = true;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.fps = fps;\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.duration = duration;\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.weight = weight;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = time;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n\t\tvar time = 0;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\ttime = animation.time;\n\n\t\t}\n\n\t\treturn time;\n\n\t};\n\n\tMorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n\t\tvar duration = - 1;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tduration = animation.duration;\n\n\t\t}\n\n\t\treturn duration;\n\n\t};\n\n\tMorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = 0;\n\t\t\tanimation.active = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.active = false;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.update = function ( delta ) {\n\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\t\tvar animation = this.animationsList[ i ];\n\n\t\t\tif ( ! animation.active ) continue;\n\n\t\t\tvar frameTime = animation.duration / animation.length;\n\n\t\t\tanimation.time += animation.direction * delta;\n\n\t\t\tif ( animation.mirroredLoop ) {\n\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t\t}\n\n\t\t\tvar keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\t\tvar weight = animation.weight;\n\n\t\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\t\tanimation.currentFrame = keyframe;\n\n\t\t\t}\n\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t\t\t} else {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction SpotLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.light.updateMatrixWorld();\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.onBeforeRender = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar boneMatrix = new Matrix4();\n\t\tvar matrixWorldInv = new Matrix4();\n\n\t\treturn function onBeforeRender() {\n\n\t\t\tvar bones = this.bones;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tvar bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tj += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction RectAreaLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar material = new LineBasicMaterial( { color: light.color } );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\tvar line = this.children[ 0 ];\n\n\t\t// update material\n\n\t\tline.material.color.copy( this.light.color );\n\n\t\t// calculate new dimensions of the helper\n\n\t\tvar hx = this.light.width * 0.5;\n\t\tvar hy = this.light.height * 0.5;\n\n\t\tvar position = line.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\t// update vertices\n\n\t\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\t\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\t\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\t\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\t\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction HemisphereLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tvar material = new MeshBasicMaterial( { vertexColors: VertexColors, wireframe: true } );\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar color1 = new Color();\n\t\tvar color2 = new Color();\n\n\t\treturn function update() {\n\n\t\t\tvar mesh = this.children[ 0 ];\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new Line( geometry, material ));\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", colorFrustum );\n\t\taddLine( \"n2\", \"n4\", colorFrustum );\n\t\taddLine( \"n4\", \"n3\", colorFrustum );\n\t\taddLine( \"n3\", \"n1\", colorFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", colorFrustum );\n\t\taddLine( \"f2\", \"f4\", colorFrustum );\n\t\taddLine( \"f4\", \"f3\", colorFrustum );\n\t\taddLine( \"f3\", \"f1\", colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", colorFrustum );\n\t\taddLine( \"n2\", \"f2\", colorFrustum );\n\t\taddLine( \"n3\", \"f3\", colorFrustum );\n\t\taddLine( \"n4\", \"f4\", colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", colorCone );\n\t\taddLine( \"p\", \"n2\", colorCone );\n\t\taddLine( \"p\", \"n3\", colorCone );\n\t\taddLine( \"p\", \"n4\", colorCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", colorUp );\n\t\taddLine( \"u2\", \"u3\", colorUp );\n\t\taddLine( \"u3\", \"u1\", colorUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", colorTarget );\n\t\taddLine( \"p\", \"c\", colorCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", colorCross );\n\t\taddLine( \"cn3\", \"cn4\", colorCross );\n\n\t\taddLine( \"cf1\", \"cf2\", colorCross );\n\t\taddLine( \"cf3\", \"cf4\", colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t\t}\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\tbox.setFromObject( this.object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry;\n\tvar coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( lineGeometry === undefined ) {\n\n\t\t\tlineGeometry = new BufferGeometry();\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly();\n\tvar py = new CubicPoly();\n\tvar pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points ) {\n\n\t\tCurve.call( this );\n\n\t\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\n\t\tthis.points = points || [];\n\t\tthis.closed = false;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t}\n\n\t\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector3(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector3(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar vector = new Vector3();\n\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\tvector.multiplyScalar( t );\n\t\tvector.add( this.v1 );\n\n\t\treturn vector;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) materials = [];\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( optionalTarget ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( samplingCoef ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\t\t\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\t_Math.random16 = function () {\n\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t};\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tGeometry.prototype.computeTangents = function () {\n\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t};\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.cullFace;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tAudio.prototype.load = function ( file ) {\n\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\tscope.setBuffer( buffer );\n\n\t\t} );\n\t\treturn this;\n\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector() {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function () {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.LineLoop = LineLoop;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.Texture = Texture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.FileLoader = FileLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.RectAreaLight = RectAreaLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.ArrayCamera = ArrayCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.AudioContext = AudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Cylindrical = Cylindrical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.Color = Color;\n\texports.MorphBlendMesh = MorphBlendMesh;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.Path = Path;\n\texports.ShapePath = ShapePath;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Particle;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.Spline = Spline;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.XHRLoader = XHRLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"module"}