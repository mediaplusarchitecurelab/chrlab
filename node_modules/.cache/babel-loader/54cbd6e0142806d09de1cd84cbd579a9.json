{"ast":null,"code":"import * as THREE from 'three';\nimport taskReplenish from './taskReplenish';\n\nclass taskSchedule {\n  constructor(agv, cons, stocks) {\n    this.prop = {\n      agv: agv,\n      cons: cons,\n      stocks: stocks,\n      task: null,\n      table: [],\n      taskframe: 0,\n      taskspeed: 2\n    };\n    this.init();\n  }\n\n  init() {\n    // re-stocking\n    this.clearTable();\n    this.prop.cons.forEach(c => {\n      if (c.prop.state === 0) {\n        this.prop.stocks.some(s => {\n          if (c.prop.type === s.prop.type) {\n            if (s.prop.state > 0) {\n              this.addTask(this.prop.agv, c, s);\n            } else {}\n\n            return true;\n          }\n        });\n      }\n    });\n  }\n\n  addTask(agv, con, stock) {\n    this.prop.table.push({\n      agv: agv,\n      con: con,\n      stock: stock\n    });\n  }\n\n  addTaskAt(agv, con, stock, i) {\n    if (i <= this.prop.table.length) {\n      this.prop.table.splice(i, 0, {\n        agv: agv,\n        con: con,\n        stock: stock\n      });\n    }\n  }\n\n  clearTable() {\n    this.prop.table = [];\n  }\n\n  removeTaskByStock(v) {\n    // v as string or id\n    let f = -1;\n    this.prop.table.some((a, i) => {\n      if (a.stock === v || a.stock.prop.id === v) {\n        f = i;\n        return true;\n      }\n    });\n    this.prop.table.splice(f, 1);\n  }\n\n  removeTaskByCon(v) {\n    // v as string or id\n    let f = -1;\n    this.prop.table.some((a, i) => {\n      if (a.con === v || a.con.prop.id === v) {\n        f = i;\n        return true;\n      }\n    });\n    this.prop.table.splice(f, 1);\n  }\n\n  removeTaskByType(v) {\n    // v as string or id\n    let f = -1;\n    this.prop.table.some((a, i) => {\n      if (a.con.prop.type === v) {\n        f = i;\n        return true;\n      }\n    });\n    this.prop.table.splice(f, 1);\n  }\n\n  tasksUpdate() {\n    this.init();\n    this.prop.taskframe = 0;\n  }\n\n  getInfo(i, v) {\n    let t = '';\n\n    if (i === 0 && v) {\n      t = '<li style=\"color:yellow;\"> from [' + this.prop.table[i].stock.prop.id + '] to [' + this.prop.table[i].con.prop.id + ']</li >';\n    } else {\n      t = '<li style=\"color:white;\"> from [' + this.prop.table[i].stock.prop.id + '] to [' + this.prop.table[i].con.prop.id + ']</li >';\n    }\n\n    return t;\n  }\n\n  getConclude() {\n    let t = 'please replenish stocks: ';\n    this.prop.stocks.forEach(s => {\n      if (s.prop.state === 0) {\n        t += s.prop.id + '[' + s.prop.type + '], ';\n      }\n    });\n    return t.slice(0, -2);\n  }\n\n  getTime() {\n    return this.prop.taskframe;\n  }\n\n  run() {\n    if (this.prop.taskframe <= 240) {\n      this.prop.taskframe += this.prop.taskspeed;\n    }\n  }\n\n}\n\nexport default taskSchedule;","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/StorageStorejs/threejs/taskSchedule.js"],"names":["THREE","taskReplenish","taskSchedule","constructor","agv","cons","stocks","prop","task","table","taskframe","taskspeed","init","clearTable","forEach","c","state","some","s","type","addTask","con","stock","push","addTaskAt","i","length","splice","removeTaskByStock","v","f","a","id","removeTaskByCon","removeTaskByType","tasksUpdate","getInfo","t","getConclude","slice","getTime","run"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\r\nimport taskReplenish from './taskReplenish';\r\n\r\nclass taskSchedule {\r\n    constructor(agv,cons,stocks) {\r\n        this.prop ={\r\n            agv:agv,\r\n            cons:cons,\r\n            stocks:stocks,\r\n            task:null,\r\n            table:[],\r\n            taskframe:0,\r\n            taskspeed:2\r\n        }\r\n       this.init();\r\n     }\r\n    init(){\r\n        // re-stocking\r\n        this.clearTable();\r\n        this.prop.cons.forEach((c)=>{\r\n            if (c.prop.state===0){\r\n                this.prop.stocks.some((s)=>{\r\n                    if (c.prop.type === s.prop.type){\r\n                        if (s.prop.state>0){\r\n                            this.addTask(this.prop.agv,c,s);\r\n                        }else{\r\n\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    addTask(agv,con,stock){\r\n        this.prop.table.push({\r\n            agv:agv,\r\n            con:con,\r\n            stock:stock\r\n        });\r\n    }\r\n    addTaskAt(agv,con,stock,i){\r\n        if (i<=this.prop.table.length){\r\n            this.prop.table.splice(i,0,{\r\n                agv:agv,\r\n                con:con,\r\n                stock:stock\r\n            });\r\n        }\r\n    }\r\n    clearTable(){\r\n        this.prop.table=[];\r\n    }\r\n    removeTaskByStock(v){ // v as string or id\r\n        let f =-1;\r\n        this.prop.table.some((a,i)=>{\r\n            if (a.stock === v || a.stock.prop.id === v){\r\n                f=i;\r\n                return true\r\n            }\r\n        });\r\n        this.prop.table.splice(f, 1);\r\n    }\r\n    removeTaskByCon(v){ // v as string or id\r\n        let f =-1;\r\n        this.prop.table.some((a,i)=>{\r\n            if (a.con === v || a.con.prop.id === v){\r\n                f=i;\r\n                return true;\r\n            }\r\n        });\r\n        this.prop.table.splice(f, 1);\r\n    }\r\n    removeTaskByType(v){ // v as string or id\r\n        let f =-1;\r\n        this.prop.table.some((a,i)=>{\r\n            if (a.con.prop.type === v){\r\n                f=i;\r\n                return true;\r\n            }\r\n        });\r\n        this.prop.table.splice(f, 1);\r\n    }\r\n    tasksUpdate(){\r\n        this.init();\r\n        this.prop.taskframe = 0;\r\n    }\r\n    getInfo(i, v){\r\n        let t = '';\r\n        if (i===0 && v){\r\n           t='<li style=\"color:yellow;\"> from ['+this.prop.table[i].stock.prop.id+'] to ['+this.prop.table[i].con.prop.id+']</li >'; \r\n       }else{\r\n            t='<li style=\"color:white;\"> from ['+this.prop.table[i].stock.prop.id+'] to ['+this.prop.table[i].con.prop.id+']</li >'; \r\n       }\r\n        return t;\r\n    }\r\n    getConclude(){\r\n        let t = 'please replenish stocks: ';\r\n        this.prop.stocks.forEach((s)=>{\r\n            if (s.prop.state===0){\r\n                t+= s.prop.id +'['+s.prop.type+'], ';\r\n            }\r\n        })\r\n        return t.slice(0, -2);\r\n    }\r\n    getTime(){\r\n        return this.prop.taskframe;\r\n    }\r\n    run(){\r\n        if (this.prop.taskframe<=240){\r\n            this.prop.taskframe += this.prop.taskspeed;\r\n        }\r\n    }\r\n}\r\nexport default taskSchedule;"]},"metadata":{},"sourceType":"module"}