{"ast":null,"code":"import * as THREE from 'three';\n\nclass agentAGV {\n  constructor(pv3, scene) {\n    this.prop = {\n      id: 'na',\n      basecen: pv3,\n      des: new THREE.Vector3(0, 0, 0),\n      size: new THREE.Vector3(45, 25, 45),\n      state: 1,\n      mesh: new THREE.Mesh(),\n      mat: new THREE.MeshBasicMaterial({\n        color: 0x66ff00,\n        opacity: 0.8,\n        transparent: true\n      }),\n      ra: null,\n      scene: scene\n    };\n    this.init();\n  }\n\n  init() {\n    const geo = new THREE.BoxBufferGeometry(this.prop.size.x, this.prop.size.y, this.prop.size.z);\n    this.prop.mesh = new THREE.Mesh(geo, this.prop.mat);\n    this.prop.scene.add(this.prop.mesh);\n    this.setPosition(this.prop.basecen);\n  }\n\n  setPosition(v) {\n    // Vector3\n    this.prop.basecen = v; // Hight modify\n\n    this.prop.mesh.position.set(this.prop.basecen.x, this.prop.basecen.y + this.prop.size.y * 0.5, this.prop.basecen.z);\n    if (this.prop.ra) this.prop.ra.agvUpdate();\n  }\n\n  setSize(v) {\n    this.prop.size = v;\n    this.setPosition(this.prop.basecen);\n  }\n\n  setRA(ra) {\n    this.prop.ra = ra;\n    this.prop.ra.prop.agv = this;\n  }\n\n}\n\nexport default agentAGV;","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/StorageStorejs/threejs/agentAGV.js"],"names":["THREE","agentAGV","constructor","pv3","scene","prop","id","basecen","des","Vector3","size","state","mesh","Mesh","mat","MeshBasicMaterial","color","opacity","transparent","ra","init","geo","BoxBufferGeometry","x","y","z","add","setPosition","v","position","set","agvUpdate","setSize","setRA","agv"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,GAAD,EAAKC,KAAL,EAAY;AACnB,SAAKC,IAAL,GAAW;AACPC,MAAAA,EAAE,EAAC,IADI;AAEPC,MAAAA,OAAO,EAACJ,GAFD;AAGPK,MAAAA,GAAG,EAAC,IAAIR,KAAK,CAACS,OAAV,CAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,CAHG;AAIPC,MAAAA,IAAI,EAAC,IAAIV,KAAK,CAACS,OAAV,CAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,CAJE;AAKPE,MAAAA,KAAK,EAAC,CALC;AAMPC,MAAAA,IAAI,EAAC,IAAIZ,KAAK,CAACa,IAAV,EANE;AAOPC,MAAAA,GAAG,EAAC,IAAId,KAAK,CAACe,iBAAV,CAA6B;AAACC,QAAAA,KAAK,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAE,GAA3B;AAAgCC,QAAAA,WAAW,EAAE;AAA7C,OAA7B,CAPG;AAQPC,MAAAA,EAAE,EAAC,IARI;AASPf,MAAAA,KAAK,EAACA;AATC,KAAX;AAWD,SAAKgB,IAAL;AACD;;AACFA,EAAAA,IAAI,GAAE;AACF,UAAMC,GAAG,GAAE,IAAIrB,KAAK,CAACsB,iBAAV,CAA6B,KAAKjB,IAAL,CAAUK,IAAV,CAAea,CAA5C,EAA+C,KAAKlB,IAAL,CAAUK,IAAV,CAAec,CAA9D,EAAiE,KAAKnB,IAAL,CAAUK,IAAV,CAAee,CAAhF,CAAX;AACA,SAAKpB,IAAL,CAAUO,IAAV,GAAkB,IAAIZ,KAAK,CAACa,IAAV,CAAgBQ,GAAhB,EAAqB,KAAKhB,IAAL,CAAUS,GAA/B,CAAlB;AACA,SAAKT,IAAL,CAAUD,KAAV,CAAgBsB,GAAhB,CAAoB,KAAKrB,IAAL,CAAUO,IAA9B;AACA,SAAKe,WAAL,CAAkB,KAAKtB,IAAL,CAAUE,OAA5B;AACH;;AACDoB,EAAAA,WAAW,CAACC,CAAD,EAAG;AAAE;AACZ,SAAKvB,IAAL,CAAUE,OAAV,GAAkBqB,CAAlB,CADU,CAEV;;AACA,SAAKvB,IAAL,CAAUO,IAAV,CAAeiB,QAAf,CAAwBC,GAAxB,CAA4B,KAAKzB,IAAL,CAAUE,OAAV,CAAkBgB,CAA9C,EAAgD,KAAKlB,IAAL,CAAUE,OAAV,CAAkBiB,CAAlB,GAAoB,KAAKnB,IAAL,CAAUK,IAAV,CAAec,CAAf,GAAiB,GAArF,EAAyF,KAAKnB,IAAL,CAAUE,OAAV,CAAkBkB,CAA3G;AACA,QAAI,KAAKpB,IAAL,CAAUc,EAAd,EAAkB,KAAKd,IAAL,CAAUc,EAAV,CAAaY,SAAb;AACrB;;AACDC,EAAAA,OAAO,CAACJ,CAAD,EAAG;AACN,SAAKvB,IAAL,CAAUK,IAAV,GAAekB,CAAf;AACA,SAAKD,WAAL,CAAiB,KAAKtB,IAAL,CAAUE,OAA3B;AACH;;AACD0B,EAAAA,KAAK,CAACd,EAAD,EAAI;AACL,SAAKd,IAAL,CAAUc,EAAV,GAAaA,EAAb;AACA,SAAKd,IAAL,CAAUc,EAAV,CAAad,IAAb,CAAkB6B,GAAlB,GAAsB,IAAtB;AACH;;AAlCU;;AAoCf,eAAejC,QAAf","sourcesContent":["import * as THREE from 'three';\r\n\r\nclass agentAGV {\r\n    constructor(pv3,scene) {\r\n        this.prop ={\r\n            id:'na',\r\n            basecen:pv3,\r\n            des:new THREE.Vector3(0,0,0),\r\n            size:new THREE.Vector3(45,25,45),\r\n            state:1,\r\n            mesh:new THREE.Mesh(),\r\n            mat:new THREE.MeshBasicMaterial( {color: 0x66ff00, opacity: 0.8, transparent: true} ),\r\n            ra:null,\r\n            scene:scene\r\n        }\r\n       this.init();\r\n     }\r\n    init(){\r\n        const geo= new THREE.BoxBufferGeometry( this.prop.size.x, this.prop.size.y, this.prop.size.z );\r\n        this.prop.mesh  = new THREE.Mesh( geo, this.prop.mat );\r\n        this.prop.scene.add(this.prop.mesh);\r\n        this.setPosition( this.prop.basecen);\r\n    }\r\n    setPosition(v){ // Vector3\r\n        this.prop.basecen=v;\r\n        // Hight modify\r\n        this.prop.mesh.position.set(this.prop.basecen.x,this.prop.basecen.y+this.prop.size.y*0.5,this.prop.basecen.z);\r\n        if (this.prop.ra) this.prop.ra.agvUpdate();\r\n    }\r\n    setSize(v){\r\n        this.prop.size=v;\r\n        this.setPosition(this.prop.basecen);\r\n    }\r\n    setRA(ra){\r\n        this.prop.ra=ra;\r\n        this.prop.ra.prop.agv=this;\r\n    }\r\n}\r\nexport default agentAGV;"]},"metadata":{},"sourceType":"module"}