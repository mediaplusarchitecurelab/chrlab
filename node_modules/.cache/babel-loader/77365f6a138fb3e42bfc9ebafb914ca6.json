{"ast":null,"code":"import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\nvar _object3DId = 0;\n\nvar _v1 = new Vector3();\n\nvar _q1 = new Quaternion();\n\nvar _m1 = new Matrix4();\n\nvar _target = new Vector3();\n\nvar _position = new Vector3();\n\nvar _scale = new Vector3();\n\nvar _quaternion = new Quaternion();\n\nvar _xAxis = new Vector3(1, 0, 0);\n\nvar _yAxis = new Vector3(0, 1, 0);\n\nvar _zAxis = new Vector3(0, 0, 1);\n\nvar _addedEvent = {\n  type: 'added'\n};\nvar _removedEvent = {\n  type: 'removed'\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nfunction Object3D() {\n  Object.defineProperty(this, 'id', {\n    value: _object3DId++\n  });\n  this.uuid = MathUtils.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = Object3D.DefaultUp.clone();\n  var position = new Vector3();\n  var rotation = new Euler();\n  var quaternion = new Quaternion();\n  var scale = new Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation._onChange(onRotationChange);\n\n  quaternion._onChange(onQuaternionChange);\n\n  Object.defineProperties(this, {\n    position: {\n      configurable: true,\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      configurable: true,\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      configurable: true,\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      configurable: true,\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new Matrix4()\n    },\n    normalMatrix: {\n      value: new Matrix3()\n    }\n  });\n  this.matrix = new Matrix4();\n  this.matrixWorld = new Matrix4();\n  this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n}\n\nObject3D.DefaultUp = new Vector3(0, 1, 0);\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Object3D,\n  isObject3D: true,\n  onBeforeRender: function () {},\n  onAfterRender: function () {},\n  applyMatrix4: function (matrix) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    this.matrix.premultiply(matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  applyQuaternion: function (q) {\n    this.quaternion.premultiply(q);\n    return this;\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function (axis, angle) {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    _q1.setFromAxisAngle(axis, angle);\n\n    this.quaternion.multiply(_q1);\n    return this;\n  },\n  rotateOnWorldAxis: function (axis, angle) {\n    // rotate object on axis in world space\n    // axis is assumed to be normalized\n    // method assumes no rotated parent\n    _q1.setFromAxisAngle(axis, angle);\n\n    this.quaternion.premultiply(_q1);\n    return this;\n  },\n  rotateX: function (angle) {\n    return this.rotateOnAxis(_xAxis, angle);\n  },\n  rotateY: function (angle) {\n    return this.rotateOnAxis(_yAxis, angle);\n  },\n  rotateZ: function (angle) {\n    return this.rotateOnAxis(_zAxis, angle);\n  },\n  translateOnAxis: function (axis, distance) {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    _v1.copy(axis).applyQuaternion(this.quaternion);\n\n    this.position.add(_v1.multiplyScalar(distance));\n    return this;\n  },\n  translateX: function (distance) {\n    return this.translateOnAxis(_xAxis, distance);\n  },\n  translateY: function (distance) {\n    return this.translateOnAxis(_yAxis, distance);\n  },\n  translateZ: function (distance) {\n    return this.translateOnAxis(_zAxis, distance);\n  },\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function (vector) {\n    return vector.applyMatrix4(_m1.getInverse(this.matrixWorld));\n  },\n  lookAt: function (x, y, z) {\n    // This method does not support objects having non-uniformly-scaled parent(s)\n    if (x.isVector3) {\n      _target.copy(x);\n    } else {\n      _target.set(x, y, z);\n    }\n\n    var parent = this.parent;\n    this.updateWorldMatrix(true, false);\n\n    _position.setFromMatrixPosition(this.matrixWorld);\n\n    if (this.isCamera || this.isLight) {\n      _m1.lookAt(_position, _target, this.up);\n    } else {\n      _m1.lookAt(_target, _position, this.up);\n    }\n\n    this.quaternion.setFromRotationMatrix(_m1);\n\n    if (parent) {\n      _m1.extractRotation(parent.matrixWorld);\n\n      _q1.setFromRotationMatrix(_m1);\n\n      this.quaternion.premultiply(_q1.inverse());\n    }\n  },\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n\n    if (object && object.isObject3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      this.children.push(object);\n      object.dispatchEvent(_addedEvent);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n\n      return this;\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      this.children.splice(index, 1);\n      object.dispatchEvent(_removedEvent);\n    }\n\n    return this;\n  },\n  attach: function (object) {\n    // adds object as a child of this, while maintaining the object's world transform\n    this.updateWorldMatrix(true, false);\n\n    _m1.getInverse(this.matrixWorld);\n\n    if (object.parent !== null) {\n      object.parent.updateWorldMatrix(true, false);\n\n      _m1.multiply(object.parent.matrixWorld);\n    }\n\n    object.applyMatrix4(_m1);\n    object.updateWorldMatrix(false, false);\n    this.add(object);\n    return this;\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateMatrixWorld(true);\n    return target.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n      target = new Quaternion();\n    }\n\n    this.updateMatrixWorld(true);\n    this.matrixWorld.decompose(_position, target, _scale);\n    return target;\n  },\n  getWorldScale: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldScale() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateMatrixWorld(true);\n    this.matrixWorld.decompose(_position, _quaternion, target);\n    return target;\n  },\n  getWorldDirection: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateMatrixWorld(true);\n    var e = this.matrixWorld.elements;\n    return target.set(e[8], e[9], e[10]).normalize();\n  },\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].updateMatrixWorld(force);\n    }\n  },\n  updateWorldMatrix: function (updateParents, updateChildren) {\n    var parent = this.parent;\n\n    if (updateParents === true && parent !== null) {\n      parent.updateWorldMatrix(true, false);\n    }\n\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.parent === null) {\n      this.matrixWorld.copy(this.matrix);\n    } else {\n      this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n    } // update children\n\n\n    if (updateChildren === true) {\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateWorldMatrix(false, true);\n      }\n    }\n  },\n  toJSON: function (meta) {\n    // meta is a string when called from JSON.stringify\n    var isRootObject = meta === undefined || typeof meta === 'string';\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {},\n        shapes: {}\n      };\n      output.metadata = {\n        version: 4.5,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (this.frustumCulled === false) object.frustumCulled = false;\n    if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    object.layers = this.layers.mask;\n    object.matrix = this.matrix.toArray();\n    if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n    if (this.isInstancedMesh) {\n      object.type = 'InstancedMesh';\n      object.count = this.count;\n      object.instanceMatrix = this.instanceMatrix.toJSON();\n    } //\n\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n\n      return element.uuid;\n    }\n\n    if (this.isMesh || this.isLine || this.isPoints) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n      var parameters = this.geometry.parameters;\n\n      if (parameters !== undefined && parameters.shapes !== undefined) {\n        var shapes = parameters.shapes;\n\n        if (Array.isArray(shapes)) {\n          for (var i = 0, l = shapes.length; i < l; i++) {\n            var shape = shapes[i];\n            serialize(meta.shapes, shape);\n          }\n        } else {\n          serialize(meta.shapes, shapes);\n        }\n      }\n    }\n\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        var uuids = [];\n\n        for (var i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      var shapes = extractFromCache(meta.shapes);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n      if (shapes.length > 0) output.shapes = shapes;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n});\nexport { Object3D };","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/threejs/src/core/Object3D.js"],"names":["Quaternion","Vector3","Matrix4","EventDispatcher","Euler","Layers","Matrix3","MathUtils","_object3DId","_v1","_q1","_m1","_target","_position","_scale","_quaternion","_xAxis","_yAxis","_zAxis","_addedEvent","type","_removedEvent","Object3D","Object","defineProperty","value","uuid","generateUUID","name","parent","children","up","DefaultUp","clone","position","rotation","quaternion","scale","onRotationChange","setFromEuler","onQuaternionChange","setFromQuaternion","undefined","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","matrix","matrixWorld","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","layers","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","prototype","assign","create","constructor","isObject3D","onBeforeRender","onAfterRender","applyMatrix4","updateMatrix","premultiply","decompose","applyQuaternion","q","setRotationFromAxisAngle","axis","angle","setFromAxisAngle","setRotationFromEuler","euler","setRotationFromMatrix","m","setFromRotationMatrix","setRotationFromQuaternion","copy","rotateOnAxis","multiply","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","add","multiplyScalar","translateX","translateY","translateZ","localToWorld","vector","worldToLocal","getInverse","lookAt","x","y","z","isVector3","set","updateWorldMatrix","setFromMatrixPosition","isCamera","isLight","extractRotation","inverse","object","arguments","length","i","console","error","remove","push","dispatchEvent","index","indexOf","splice","attach","getObjectById","id","getObjectByProperty","getObjectByName","l","child","getWorldPosition","target","warn","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","e","elements","normalize","raycast","traverse","callback","traverseVisible","traverseAncestors","compose","force","multiplyMatrices","updateParents","updateChildren","toJSON","meta","isRootObject","output","geometries","materials","textures","images","shapes","metadata","version","generator","JSON","stringify","mask","toArray","isInstancedMesh","count","instanceMatrix","serialize","library","element","isMesh","isLine","isPoints","geometry","parameters","Array","isArray","shape","material","uuids","extractFromCache","cache","values","key","data","recursive","source","parse"],"mappings":"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","sourcesContent":["import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\nvar _object3DId = 0;\n\nvar _v1 = new Vector3();\nvar _q1 = new Quaternion();\nvar _m1 = new Matrix4();\nvar _target = new Vector3();\n\nvar _position = new Vector3();\nvar _scale = new Vector3();\nvar _quaternion = new Quaternion();\n\nvar _xAxis = new Vector3( 1, 0, 0 );\nvar _yAxis = new Vector3( 0, 1, 0 );\nvar _zAxis = new Vector3( 0, 0, 1 );\n\nvar _addedEvent = { type: 'added' };\nvar _removedEvent = { type: 'removed' };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation._onChange( onRotationChange );\n\tquaternion._onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t},\n\n\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t},\n\n\ttranslateX: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t},\n\n\ttranslateY: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t},\n\n\ttranslateZ: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t},\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1.getInverse( this.matrixWorld ) );\n\n\t},\n\n\tlookAt: function ( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tvar parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1 );\n\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t}\n\n\t},\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tattach: function ( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1.getInverse( this.matrixWorld );\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1 );\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldScale: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, target );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Object3D };\n"]},"metadata":{},"sourceType":"module"}