{"ast":null,"code":"/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { Vector3 } from '../math/Vector3.js';\nimport { Quaternion } from '../math/Quaternion.js';\nimport { Audio } from './Audio.js';\nimport { Object3D } from '../core/Object3D.js';\n\nvar _position = new Vector3();\n\nvar _quaternion = new Quaternion();\n\nvar _scale = new Vector3();\n\nvar _orientation = new Vector3();\n\nfunction PositionalAudio(listener) {\n  Audio.call(this, listener);\n  this.panner = this.context.createPanner();\n  this.panner.panningModel = 'HRTF';\n  this.panner.connect(this.gain);\n}\n\nPositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n  constructor: PositionalAudio,\n  getOutput: function () {\n    return this.panner;\n  },\n  getRefDistance: function () {\n    return this.panner.refDistance;\n  },\n  setRefDistance: function (value) {\n    this.panner.refDistance = value;\n    return this;\n  },\n  getRolloffFactor: function () {\n    return this.panner.rolloffFactor;\n  },\n  setRolloffFactor: function (value) {\n    this.panner.rolloffFactor = value;\n    return this;\n  },\n  getDistanceModel: function () {\n    return this.panner.distanceModel;\n  },\n  setDistanceModel: function (value) {\n    this.panner.distanceModel = value;\n    return this;\n  },\n  getMaxDistance: function () {\n    return this.panner.maxDistance;\n  },\n  setMaxDistance: function (value) {\n    this.panner.maxDistance = value;\n    return this;\n  },\n  setDirectionalCone: function (coneInnerAngle, coneOuterAngle, coneOuterGain) {\n    this.panner.coneInnerAngle = coneInnerAngle;\n    this.panner.coneOuterAngle = coneOuterAngle;\n    this.panner.coneOuterGain = coneOuterGain;\n    return this;\n  },\n  updateMatrixWorld: function (force) {\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n    if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n    this.matrixWorld.decompose(_position, _quaternion, _scale);\n\n    _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n    var panner = this.panner;\n\n    if (panner.positionX) {\n      // code path for Chrome and Firefox (see #14393)\n      var endTime = this.context.currentTime + this.listener.timeDelta;\n      panner.positionX.linearRampToValueAtTime(_position.x, endTime);\n      panner.positionY.linearRampToValueAtTime(_position.y, endTime);\n      panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n      panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n      panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n      panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n    } else {\n      panner.setPosition(_position.x, _position.y, _position.z);\n      panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n    }\n  }\n});\nexport { PositionalAudio };","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/threejs/src/audio/PositionalAudio.js"],"names":["Vector3","Quaternion","Audio","Object3D","_position","_quaternion","_scale","_orientation","PositionalAudio","listener","call","panner","context","createPanner","panningModel","connect","gain","prototype","Object","assign","create","constructor","getOutput","getRefDistance","refDistance","setRefDistance","value","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","updateMatrixWorld","force","hasPlaybackControl","isPlaying","matrixWorld","decompose","set","applyQuaternion","positionX","endTime","currentTime","timeDelta","linearRampToValueAtTime","x","positionY","y","positionZ","z","orientationX","orientationY","orientationZ","setPosition","setOrientation"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Vector3 } from '../math/Vector3.js';\nimport { Quaternion } from '../math/Quaternion.js';\nimport { Audio } from './Audio.js';\nimport { Object3D } from '../core/Object3D.js';\n\nvar _position = new Vector3();\nvar _quaternion = new Quaternion();\nvar _scale = new Vector3();\nvar _orientation = new Vector3();\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.panningModel = 'HRTF';\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tvar panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { PositionalAudio };\n"]},"metadata":{},"sourceType":"module"}