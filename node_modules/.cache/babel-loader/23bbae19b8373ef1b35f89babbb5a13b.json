{"ast":null,"code":"var _jsxFileName = \"H:\\\\chrlab\\\\src\\\\component\\\\panelComponent\\\\noneComponent.js\";\nimport React from 'react';\nimport { Grid, Header, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components'; // stlyed \n//======================panel======================\n\nconst NoneContain = styled.div`\n    width:100%;\n    padding:1.5em 1.5em 1.5em 1.5em;\n    top: 1.5em;\n    overflow: 'auto';\n    maxHeight: 75%;\n    .txtcontent{\n      text-align:justify;\n    }\n\t`;\n\nclass NoneComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nonerender = () => {\n      let panelcontent = [];\n      let til = this.state.activeItem;\n      panelcontent.push( /*#__PURE__*/React.createElement(Grid, {\n        key: `${til}-grid`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        className: \"txtcontent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        key: `${til}-nonetitle`,\n        style: {\n          fontFamily: 'Titillium Web'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, til.toUpperCase()), /*#__PURE__*/React.createElement(Header, {\n        as: \"h5\",\n        key: `${til}-nonecontent`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        loading: true,\n        name: \"setting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 60\n        }\n      }), \"UnderConstruction\")))));\n      return panelcontent;\n    };\n\n    this.state = {\n      width: 0,\n      height: 0,\n      activeItem: this.props.activeItem\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  } // ==================RESIZE=======================\n\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  } // ==================LAYOUT=======================\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(NoneContain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, this.nonerender());\n  }\n\n}\n\nexport default NoneComponent;","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/noneComponent.js"],"names":["React","Grid","Header","Icon","styled","NoneContain","div","NoneComponent","Component","constructor","props","nonerender","panelcontent","til","state","activeItem","push","fontFamily","toUpperCase","width","height","updateWindowDimensions","bind","setState","window","innerWidth","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEC;AACA;;AACA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;;;;;;;;;EAA/B;;AAWD,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,UAtBmB,GAsBP,MAAI;AACZ,UAAIC,YAAY,GAAC,EAAjB;AACA,UAAIC,GAAG,GAAE,KAAKC,KAAL,CAAWC,UAApB;AACAH,MAAAA,YAAY,CAACI,IAAb,eACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAG,GAAEH,GAAI,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,GAAG,EAAG,GAAEA,GAAI,YAA5B;AAAyC,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAE;AAAb,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgFJ,GAAG,CAACK,WAAJ,EAAhF,CADF,eAEE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,GAAG,EAAG,GAAEL,GAAI,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2C,oBAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,IAAI,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C,sBAFF,CADF,CADF,CADJ;AAWA,aAAOD,YAAP;AACH,KArCkB;;AAEjB,SAAKE,KAAL,GAAa;AACTK,MAAAA,KAAK,EAAE,CADE;AACCC,MAAAA,MAAM,EAAE,CADT;AAETL,MAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK;AAFd,KAAb;AAIA,SAAKM,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACD,GATyC,CAW1C;;;AACAD,EAAAA,sBAAsB,GAAG;AACvB,SAAKE,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAEK,MAAM,CAACC,UAAhB;AAA4BL,MAAAA,MAAM,EAAEI,MAAM,CAACE;AAA3C,KAAd;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,sBAAL;AACAG,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,sBAA1C;AACD,GAtByC,CAuB1C;;;AAkBAU,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,UAAL,EADL,CADF;AAKD;;AAhDyC;;AAoD5C,eAAeJ,aAAf","sourcesContent":["import React from 'react';\r\nimport { Grid, Header, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\n\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst NoneContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: 'auto';\r\n    maxHeight: 75%;\r\n    .txtcontent{\r\n      text-align:justify;\r\n    }\r\n\t`;\r\n \r\nclass NoneComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activeItem: this.props.activeItem\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  // ==================LAYOUT=======================\r\n  nonerender =()=>{\r\n      let panelcontent=[]; \r\n      let til =this.state.activeItem;\r\n      panelcontent.push(\r\n          <Grid key={`${til}-grid`}>\r\n            <Grid.Row>\r\n              <Grid.Column className='txtcontent'  >\r\n                <Header as='h2' key={`${til}-nonetitle`} style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n                <Header as='h5' key={`${til}-nonecontent`}><Icon loading name='setting' />UnderConstruction</Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          );\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n  render() {\r\n        \r\n    return (\r\n      <NoneContain>\r\n          {this.nonerender()}\r\n      </NoneContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NoneComponent;\r\n"]},"metadata":{},"sourceType":"module"}