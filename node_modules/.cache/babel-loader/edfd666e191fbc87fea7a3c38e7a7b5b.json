{"ast":null,"code":"import { Camera } from './Camera.js';\nimport { Object3D } from '../core/Object3D.js';\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera(left, right, top, bottom, near, far) {\n  Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.view = null;\n  this.left = left !== undefined ? left : -1;\n  this.right = right !== undefined ? right : 1;\n  this.top = top !== undefined ? top : 1;\n  this.bottom = bottom !== undefined ? bottom : -1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n}\n\nOrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n  constructor: OrthographicCamera,\n  isOrthographicCamera: true,\n  copy: function (source, recursive) {\n    Camera.prototype.copy.call(this, source, recursive);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    return this;\n  },\n  setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function () {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function () {\n    var dx = (this.right - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.right + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    var left = cx - dx;\n    var right = cx + dx;\n    var top = cy + dy;\n    var bottom = cy - dy;\n\n    if (this.view !== null && this.view.enabled) {\n      var scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n      var scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n    this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    return data;\n  }\n});\nexport { OrthographicCamera };","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/threejs/src/cameras/OrthographicCamera.js"],"names":["Camera","Object3D","OrthographicCamera","left","right","top","bottom","near","far","call","type","zoom","view","undefined","updateProjectionMatrix","prototype","Object","assign","create","constructor","isOrthographicCamera","copy","source","recursive","setViewOffset","fullWidth","fullHeight","x","y","width","height","enabled","offsetX","offsetY","clearViewOffset","dx","dy","cx","cy","scaleW","scaleH","projectionMatrix","makeOrthographic","projectionMatrixInverse","getInverse","toJSON","meta","data","object"],"mappings":"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","sourcesContent":["import { Camera } from './Camera.js';\nimport { Object3D } from '../core/Object3D.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n\nexport { OrthographicCamera };\n"]},"metadata":{},"sourceType":"module"}