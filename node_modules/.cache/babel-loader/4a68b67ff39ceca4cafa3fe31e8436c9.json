{"ast":null,"code":"/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\nimport { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Line } from '../objects/Line.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\n\nvar _v1 = new Vector3();\n\nvar _v2 = new Vector3();\n\nvar _v3 = new Vector3();\n\nfunction DirectionalLightHelper(light, size, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  if (size === undefined) size = 1;\n  var geometry = new BufferGeometry();\n  geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n  var material = new LineBasicMaterial({\n    fog: false,\n    toneMapped: false\n  });\n  this.lightPlane = new Line(geometry, material);\n  this.add(this.lightPlane);\n  geometry = new BufferGeometry();\n  geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n  this.targetLine = new Line(geometry, material);\n  this.add(this.targetLine);\n  this.update();\n}\n\nDirectionalLightHelper.prototype = Object.create(Object3D.prototype);\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n  this.lightPlane.geometry.dispose();\n  this.lightPlane.material.dispose();\n  this.targetLine.geometry.dispose();\n  this.targetLine.material.dispose();\n};\n\nDirectionalLightHelper.prototype.update = function () {\n  _v1.setFromMatrixPosition(this.light.matrixWorld);\n\n  _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n  _v3.subVectors(_v2, _v1);\n\n  this.lightPlane.lookAt(_v2);\n\n  if (this.color !== undefined) {\n    this.lightPlane.material.color.set(this.color);\n    this.targetLine.material.color.set(this.color);\n  } else {\n    this.lightPlane.material.color.copy(this.light.color);\n    this.targetLine.material.color.copy(this.light.color);\n  }\n\n  this.targetLine.lookAt(_v2);\n  this.targetLine.scale.z = _v3.length();\n};\n\nexport { DirectionalLightHelper };","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/threejs/src/helpers/DirectionalLightHelper.js"],"names":["Vector3","Object3D","Line","Float32BufferAttribute","BufferGeometry","LineBasicMaterial","_v1","_v2","_v3","DirectionalLightHelper","light","size","color","call","updateMatrixWorld","matrix","matrixWorld","matrixAutoUpdate","undefined","geometry","setAttribute","material","fog","toneMapped","lightPlane","add","targetLine","update","prototype","Object","create","constructor","dispose","setFromMatrixPosition","target","subVectors","lookAt","set","copy","scale","z","length"],"mappings":"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","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Line } from '../objects/Line.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\n\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar _v3 = new Vector3();\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t_v3.subVectors( _v2, _v1 );\n\n\tthis.lightPlane.lookAt( _v2 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.lightPlane.material.color.set( this.color );\n\t\tthis.targetLine.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t}\n\n\tthis.targetLine.lookAt( _v2 );\n\tthis.targetLine.scale.z = _v3.length();\n\n};\n\n\nexport { DirectionalLightHelper };\n"]},"metadata":{},"sourceType":"module"}