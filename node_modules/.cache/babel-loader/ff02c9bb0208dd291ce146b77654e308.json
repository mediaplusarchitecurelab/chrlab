{"ast":null,"code":"import { Curve } from '../core/Curve.js';\nimport { QuadraticBezier } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nfunction QuadraticBezierCurve(v0, v1, v2) {\n  Curve.call(this);\n  this.type = 'QuadraticBezierCurve';\n  this.v0 = v0 || new Vector2();\n  this.v1 = v1 || new Vector2();\n  this.v2 = v2 || new Vector2();\n}\n\nQuadraticBezierCurve.prototype = Object.create(Curve.prototype);\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n  point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n  return point;\n};\n\nQuadraticBezierCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nexport { QuadraticBezierCurve };","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/threejs/src/extras/curves/QuadraticBezierCurve.js"],"names":["Curve","QuadraticBezier","Vector2","QuadraticBezierCurve","v0","v1","v2","call","type","prototype","Object","create","constructor","isQuadraticBezierCurve","getPoint","t","optionalTarget","point","set","x","y","copy","source","toJSON","data","toArray","fromJSON","json","fromArray"],"mappings":"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","sourcesContent":["import { Curve } from '../core/Curve.js';\nimport { QuadraticBezier } from '../core/Interpolations.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\n\nexport { QuadraticBezierCurve };\n"]},"metadata":{},"sourceType":"module"}