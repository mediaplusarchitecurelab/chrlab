{"ast":null,"code":"import * as THREE from '../../threejs/src/Three.js'; //import SceneSubject from './SceneSubject';\n\nimport GeneralLights from './GeneralLights';\nimport * as dat from 'dat.gui';\nimport { OBJLoader } from '../../threejs/examples/jsm/loaders/OBJLoader.js';\nimport { EffectComposer } from '../../threejs/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from '../../threejs/examples/jsm/postprocessing/RenderPass.js';\nimport { FilmPass } from '../../threejs/examples/jsm/postprocessing/FilmPass.js';\nimport { BloomPass } from '../../threejs/examples/jsm/postprocessing/BloomPass.js';\nimport { ShaderPass } from '../../threejs/examples/jsm/postprocessing/ShaderPass.js';\nimport { SobelOperatorShader } from '../../threejs/examples/jsm/shaders/SobelOperatorShader.js';\nimport { OutlinePass } from '../../threejs/examples/jsm/postprocessing/OutlinePass.js';\nimport $ from 'jquery'; //const glsl = require('glslify');\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nconst textureLoader = new THREE.TextureLoader();\nexport default (canvas => {\n  // objects\n  var loader; //var geos = new THREE.Group();\n\n  var geo, geoPts, geoLines;\n  var backgroundcube, text; // as Three.Group = children[0] = frontface / children[1] = backface\n\n  var geoSelected;\n  var geoAll = [];\n  var geoFinished = [];\n  var geoPossible = []; // material\n\n  var t1, t2, uniforms;\n  var matColor, matFinColor, matPosColor, matShader, matWireframe, matGradient, matShaderSub, matHidden;\n  var matFinished, matFinishedBack, matPossible, matPossibleBack, matFade, matFadeBack;\n  var matFinishedArray, matPossibleArray, matFadeArray;\n  var textloader = new THREE.FontLoader(); // renderer\n\n  var composer, outlinePass; // control\n\n  var raycaster = new THREE.Raycaster();\n  var mouse = new THREE.Vector2();\n  var screen = new THREE.Vector2();\n  var pieceSelected = false;\n  var textFinished = '';\n  var texetAll = ''; // GUI\n\n  var gui, guiData, shading;\n  const clock = new THREE.Clock();\n  const screenDimensions = {\n    width: canvas.width,\n    height: canvas.height\n  };\n  var editFolder; // build\n\n  const scene = buildScene();\n  const camera = buildCamera(screenDimensions);\n  const renderer = buildRender(screenDimensions);\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.target.set(0, 1, 0);\n  controls.update();\n  const customContainer = document.getElementById('canvas-gui-container');\n  const lights = GeneralLights(scene);\n  createSceneSubjects(scene, uniforms); // textture\n\n  textureLoader.setPath('./assets/textures/sprites/').load('spark1.png', tex1 => {\n    t1 = tex1;\n    uniforms = {\n      pointTexture: {\n        value: t1\n      }\n    };\n  }, xhr1 => {\n    console.log(xhr1.loaded / xhr1.total * 100 + '% loaded');\n  }, xhr1 => {\n    console.log('An error happened');\n  }); // function below\n\n  function buildScene() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color('#a0a0a0');\n    scene.fog = new THREE.Fog(0xa0a0a0, 10, 22);\n    return scene;\n  }\n\n  function buildRender({\n    width,\n    height\n  }) {\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true\n    });\n    const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    renderer.shadowMap.enabled = true;\n    renderer.localClippingEnabled = false;\n    renderer.setPixelRatio(DPR);\n    renderer.setSize(width, height);\n    renderer.autoClear = false;\n    renderer.toneMapping = THREE.ReinhardToneMapping; // post\n\n    composer = new EffectComposer(renderer);\n    var renderPass = new RenderPass(scene, camera);\n    composer.addPass(renderPass);\n    outlinePass = new OutlinePass(new THREE.Vector2(width, height), scene, camera);\n    outlinePass.edgeStrength = 3.0;\n    outlinePass.edgeGlow = 0.0;\n    outlinePass.edgeThickness = 1.0;\n    outlinePass.pulsePeriod = 0;\n    outlinePass.visibleEdgeColor.set('#ff0000');\n    outlinePass.hiddenEdgeColor.set('#190a05');\n    composer.addPass(outlinePass);\n    return renderer;\n  } // input function    \n\n\n  function onProgress(xhr) {\n    if (xhr.lengthComputable) {\n      var percentComplete = xhr.loaded / xhr.total * 100;\n      console.log('model ' + Math.round(percentComplete, 2) + '% downloaded');\n    }\n  }\n\n  function onError() {\n    console.log('error!!');\n  }\n\n  function buildCamera({\n    width,\n    height\n  }) {\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.set(6, 6, 0);\n    return camera;\n  }\n\n  function createSceneSubjects(scene, uniforms) {\n    // material 1\n    backgroundcube = new THREE.CubeTextureLoader().setPath('./assets/textures/cube/pisa/').load(['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png']);\n    matFade = new THREE.MeshPhongMaterial({\n      color: 0xeeeeee,\n      transparent: true,\n      opacity: 0.7,\n      roughness: 0.9,\n      depthTest: true,\n      depthWrite: true,\n      flatShading: true,\n      side: THREE.FrontSide\n    });\n    matFadeBack = new THREE.MeshBasicMaterial({\n      color: 0x555555,\n      transparent: true,\n      opacity: 0.7,\n      side: THREE.BackSide\n    });\n    matFadeArray = [matFade, matFadeBack];\n    matFinished = new THREE.MeshPhongMaterial({\n      color: 0x21ce94,\n      emssive: 0x0,\n      specular: 0x111111,\n      shininess: 30,\n      roughness: 0.9,\n      depthTest: true,\n      depthWrite: true,\n      //envMap: backgroundcube,\n      flatShading: true,\n      side: THREE.FrontSide\n    });\n    matFinishedBack = new THREE.MeshBasicMaterial({\n      color: 0x555594,\n      side: THREE.BackSide\n    });\n    matFinishedArray = [matFinished, matFinishedBack];\n    matPossible = new THREE.MeshStandardMaterial({\n      color: 0xeee143,\n      transparent: true,\n      opacity: 0.7,\n      roughness: 0.9,\n      depthTest: true,\n      depthWrite: true,\n      flatShading: true,\n      side: THREE.FrontSide\n    });\n    matPossibleBack = new THREE.MeshBasicMaterial({\n      color: 0x888122,\n      transparent: true,\n      opacity: 0.7,\n      side: THREE.BackSide\n    });\n    matPossibleArray = [matPossible, matPossibleBack]; // background     \n\n    var ground = new THREE.Mesh(new THREE.PlaneBufferGeometry(400, 400, 1, 1), new THREE.MeshPhongMaterial({\n      color: 0x999999,\n      shininess: 150,\n      depthWrite: false\n    }));\n    ground.rotation.x = -Math.PI / 2; // rotates X/Y to X/Z\n\n    ground.receiveShadow = true;\n    ground.name = 'ground';\n    scene.add(ground);\n    matShaderSub = new THREE.LineBasicMaterial({\n      vertexColors: THREE.VertexColors,\n      blending: THREE.AdditiveBlending,\n      transparent: true\n    });\n    matHidden = new THREE.MeshBasicMaterial({\n      color: matColor,\n      transparent: true,\n      blending: THREE.AdditiveBlending,\n      opacity: 0.1\n    }); // material 3\n\n    matWireframe = new THREE.MeshBasicMaterial({\n      color: matColor,\n      wireframe: true\n    }); // material 4\n\n    matGradient = new THREE.MeshLambertMaterial({\n      vertexColors: THREE.VertexColors,\n      side: THREE.DoubleSide\n    });\n    window.addEventListener('mousemove', onMove);\n    window.addEventListener('mousedown', onDown, false); // subject\n\n    createGUI();\n    updateModel();\n  }\n\n  function createGUI() {\n    //GUI\n    //if ( gui ) gui.destroy();\n    gui = new dat.GUI({\n      autoPlace: false\n    });\n    guiData = {\n      'currentURL': './assets/prototypingjs/2020Fab01_00.obj',\n      'drawWireframe': true,\n      'drawStrokes': true\n    }; // pubilc/assets/prototypingjs/XXXX.obj\n\n    gui.add(guiData, 'currentURL', {\n      \"2020Fab01_00\": './assets/prototypingjs/2020Fab01_00.obj',\n      \"2020Fab01_01\": './assets/prototypingjs/2020Fab01_01.obj'\n    }).name('FabModel').onChange(updateModel); // gui action\n\n    editFolder = gui.addFolder('Edit');\n    var editParms = {\n      clearSelection: () => {\n        clearSelection();\n      },\n      undoSelection: () => {\n        undoSelection();\n      }\n    };\n    editFolder.add(editParms, 'clearSelection');\n    editFolder.add(editParms, 'undoSelection');\n    editFolder.open();\n    customContainer.appendChild(gui.domElement);\n  }\n\n  function removefromScene(array) {\n    for (let i = 0; i < array.length; i += 1) {\n      if (array[i].type == 'Group') {\n        array[i].children.forEach((g, i) => {\n          g.material.dispose();\n          g.geometry.dispose();\n        });\n      } else {\n        // ground\n        array[i].geometry.dispose();\n        array[i].material.dispose();\n      }\n\n      scene.remove(array[i]);\n    }\n  } // assign front and back\n\n\n  function meshgroupfb(geo, matarr) {\n    if (geo.type == 'Group') {\n      geo.children.forEach((g, i) => {\n        g.material = matarr[i];\n        g.material.needsUpdate = true;\n      });\n    }\n  }\n\n  function clearSelection() {\n    // All part\n    for (let i = geoFinished.length - 1; i >= 0; i -= 1) {\n      // front\n      meshgroupfb(geoFinished[i], matFadeArray);\n      /*\r\n      geoFinished[i].children[0].material=matFade;\r\n      geoFinished[i].children[0].material.needsUpdate =true;\r\n      // back\r\n      geoFinished[i].children[1].material=matFade;\r\n      geoFinished[i].children[1].material.needsUpdate =true;\r\n      */\n\n      geoAll.push(geoFinished[i]);\n      geoFinished.pop();\n    } // possible part\n\n\n    for (let i = geoAll.length - 1; i >= 0; i -= 1) {\n      // front\n      geoAll[i].children[0].material = matFade;\n      geoAll[i].children[0].material.needsUpdate = true; // back\n\n      geoAll[i].children[0].material = matFade;\n      geoAll[i].children[0].material.needsUpdate = true;\n    }\n\n    geoPossible = [];\n    updateText();\n  }\n\n  function undoSelection() {\n    // finish part\n    if (geoFinished.length > 0) {\n      geoFinished[geoFinished.length - 1].material = matFade;\n      geoFinished[geoFinished.length - 1].material.needsUpdate = true;\n      geoAll.push(geoFinished[geoFinished.length - 1]);\n      geoFinished.pop();\n    } // possible part\n\n\n    geoPossible = [];\n    var idPos = [];\n\n    for (let i = 0; i < geoAll.length; i += 1) {\n      geoAll[i].material = matFade;\n      geoAll[i].material.needsUpdate = true;\n      let ac = geoAll[i].geometry.boundingSphere.center;\n\n      for (let j = 0; j < geoFinished.length; j += 1) {\n        let fc = geoFinished[j].geometry.boundingSphere.center;\n        let d = fc.distanceTo(ac);\n\n        if (d < 0.65) {\n          geoPossible.push(geoAll[i]);\n          idPos.push(i);\n        }\n      }\n    }\n\n    for (let k = 0; k < idPos.length; k += 1) {\n      geoAll[idPos[k]].material = matPossible;\n      geoAll[idPos[k]].material.needsUpdate = true;\n    }\n    /*\r\n    for (let i=geoAll.length-1; i>=0; i-=1){\r\n        geoAll[i].material=matFade;\r\n        geoAll[i].material.needsUpdate =true;\r\n    }\r\n    geoPossible=[];\r\n    */\n\n\n    updateText();\n  }\n\n  function updateModel() {\n    // remove\n\n    /*\r\n    for (let i=0;i<geoAll.length;i+=1){\r\n        geoAll[i].geometry.dispose();\r\n        geoAll[i].material.dispose();\r\n        scene.remove(geoAll[i]);\r\n    }\r\n    */\n    clearModel(); // manager        \n\n    const manager = new THREE.LoadingManager();\n\n    manager.onProgress = function (item, loaded, total) {};\n\n    loader = new OBJLoader(manager); // execute input\n    // =================object will install into ./public not in ./src===================\n\n    loader.load(guiData.currentURL, function (obj) {\n      // Object\n      obj.traverse(function (child) {\n        if (child.isMesh) {\n          var piece = child.clone(); // put data into group then make it show different texture\n\n          var pieces = new THREE.Group();\n          pieces.add(new THREE.Mesh(piece.geometry, matFade));\n          pieces.add(new THREE.Mesh(piece.geometry, matFadeBack));\n          pieces.children[0].castShadow = true; // only cast one geomtry shadow \n\n          pieces.name = piece.name; //console.log(pieces.name);\n\n          scene.add(pieces);\n          geoAll.push(pieces);\n        }\n      }); //scene.add( geos );\n    }, onProgress, onError);\n    updateText();\n  }\n\n  function onMove(event) {\n    //event.preventDefault();\n    var x, y;\n\n    if (event.changedTouches) {\n      x = event.changedTouches[0].pageX;\n      y = event.changedTouches[0].pageY;\n    } else {\n      x = event.clientX;\n      y = event.clientY;\n      screen.x = event.pageX;\n      screen.y = event.pageY;\n    }\n\n    mouse.x = x / window.innerWidth * 2 - 1;\n    mouse.y = -(y / window.innerHeight) * 2 + 1;\n    checkIntersection();\n  }\n\n  function onDown(event) {\n    //console.log(guiData.currentURL);\n    //event.preventDefault();\n    switch (event.which) {\n      case 1:\n        var checkFinished = false;\n        var idFinished = -1;\n        var idAll = -1;\n        var idPos = [];\n        geoPossible = []; // if selected something\n\n        if (pieceSelected) {\n          // update all\n          for (let i = 0; i < geoAll.length; i += 1) {\n            meshgroupfb(geoAll[i], matFadeArray); //geoAll[i].material = matFade;\n          } // for selected\n\n\n          if (geoSelected !== undefined && geoSelected.length > 0) {\n            // check finished\n            if (geoFinished.length > 0) {\n              for (let i = 0; i < geoFinished.length; i += 1) {\n                if (geoFinished[i].name === geoSelected[0].name) {\n                  idFinished = i;\n                  checkFinished = true;\n                  break;\n                }\n              }\n            } // step1 : if check finidshed > become fade\n\n\n            if (checkFinished) {\n              // add into geoAll\n              geoAll.push(geoFinished[idFinished]); // texture change\n\n              meshgroupfb(geoFinished[idFinished], matFadeArray); //geoFinished[idFinished].children[0].material = matFade;\n              //geoFinished[idFinished].children[1].material = matFadeBack;\n              //geoFinished[idFinished].children[0].material.needsUpdate =true;\n              //geoFinished[idFinished].children[1].material.needsUpdate =true;\n              // removed from geofinished\n\n              geoFinished.splice(idFinished, 1);\n            } else {\n              // if fade > become finished\n              // add into geofinished\n              // geoSelected got group\n              meshgroupfb(geoSelected[0], matFinishedArray); //geoSelected[0].children[0].material = matFinished;\n              //geoSelected[0].children[1].material = matFinishedBack;\n              //geoSelected[0].children[0].material.needsUpdate =true;\n              //geoSelected[0].children[1].material.needsUpdate =true;\n\n              geoFinished.push(geoSelected[0]); // removed from geoAll\n\n              for (let i = 0; i < geoAll.length; i += 1) {\n                if (geoAll[i].name === geoSelected[0].name) {\n                  idAll = i;\n                  break;\n                }\n              }\n\n              geoAll.splice(idAll, 1);\n            } // step2 : check surrounded and preseverd in geoAll\n\n\n            for (let i = 0; i < geoAll.length; i += 1) {\n              let ac = geoAll[i].children[0].geometry.boundingSphere.center;\n\n              for (let j = 0; j < geoFinished.length; j += 1) {\n                let fc = geoFinished[j].children[0].geometry.boundingSphere.center;\n                let d = fc.distanceTo(ac);\n\n                if (d < 0.65) {\n                  geoPossible.push(geoAll[i]);\n                  idPos.push(i);\n                }\n              }\n            }\n\n            for (let k = 0; k < idPos.length; k += 1) {\n              meshgroupfb(geoAll[idPos[k]], matPossibleArray); //geoAll[idPos[k]].material = matPossible;\n              //geoAll[idPos[k]].material.needsUpdate =true;\n            }\n          }\n        }\n\n        break;\n    }\n\n    updateText();\n  }\n\n  function clearModel() {\n    var geoSelected;\n    removefromScene(geoAll);\n    removefromScene(geoFinished);\n    removefromScene(geoPossible);\n    geoAll = [];\n    geoFinished = [];\n    geoPossible = [];\n  }\n\n  function checkIntersection() {\n    geoSelected = [];\n    raycaster.setFromCamera(mouse, camera);\n    var intersects = raycaster.intersectObjects([scene], true);\n\n    if (intersects.length > 0) {\n      var selectedObject = intersects[0].object; //>> this just one object not group\n      // but need to check it is for ground\n\n      if (selectedObject.name === 'ground') {\n        $('#infoCanvas').text('');\n        pieceSelected = false;\n      } else {\n        $('#infoCanvas').text(selectedObject.name);\n        $('#infoCanvas').css({\n          left: screen.x + 20,\n          top: screen.y + 20,\n          fontSize: '24px',\n          textShadow: '5px 5px 1px #333333, 2px 2px 1px #333333'\n        }); // should replace object into group\n\n        geoSelected.push(selectedObject.parent);\n        pieceSelected = true;\n      }\n    } else {\n      $('#infoCanvas').text('1');\n      pieceSelected = false;\n    }\n\n    if (outlinePass !== undefined && pieceSelected) {\n      outlinePass.selectedObjects = geoSelected;\n    }\n\n    updateText();\n  }\n\n  function updateText() {\n    //geoSelected =[];\n    //var count=0;\n    // text attatch\n    // $(document).ready(()=>{\n    $('#infoProgress').html(() => {\n      textFinished = 'Sotck<br>'; // geoall part\n\n      if (geoAll !== undefined && geoAll.length > 0) {\n        for (var i = 0; i < geoAll.length; i += 1) {\n          //textFinished += ''geoFinished[i].name +',';\n          if (i % 5 == 0) {\n            textFinished += '<br>';\n          }\n\n          var idstr = geoAll[i].name;\n          textFinished += '<button id=\"' + idstr + '\" class=\"ui mini inverted button\">' + idstr + '</button>';\n        } //count+=1;\n\n      } // finished part\n\n\n      textFinished += '<br><br>Finished<br>';\n\n      if (geoFinished !== undefined && geoFinished.length > 0) {\n        for (var i = 0; i < geoFinished.length; i += 1) {\n          //textFinished += ''geoFinished[i].name +',';\n          if (i % 5 == 0) {\n            textFinished += '<br>';\n          }\n\n          textFinished += '<button id=\"' + geoFinished[i].name + '\" class=\"ui mini posstive button\">' + geoFinished[i].name + '</button>';\n        } //count+=1;\n\n      }\n\n      return textFinished;\n    });\n\n    if (geoAll !== undefined) {\n      $('#infoAll').html(() => {\n        return 'GoeFinishedNum:' + geoFinished.length;\n      }); //var count=0;\n\n      /*\r\n      $('#infoProgress').find('.button').hover(()=>{\r\n          console.log($(this).id);\r\n          //count+=1;\r\n          //$(this).addEventListener('onclick',()=>{\r\n          //    console.log('a');\r\n          //});\r\n          //console.log(count);\r\n          //count+=1;\r\n      });\r\n      */\n      // add interactive hover\n\n      if (geoAll.length > 0) {\n        for (let i = 0; i < geoAll.length; i += 1) {\n          $('#' + geoAll[i].name).hover(() => {\n            checkButton(geoAll[i]);\n          });\n        }\n      }\n\n      if (geoFinished.length > 0) {\n        for (let i = 0; i < geoFinished.length; i += 1) {\n          $('#' + geoFinished[i].name).hover(() => {\n            checkButton(geoFinished[i]);\n          });\n        }\n      }\n    } // set pieces\n\n\n    if (pieceSelected) {\n      //console.log(geoSelected[0].type);\n      if (geoSelected.length > 0) {\n        $('#' + geoSelected[0].name).addClass(\"red\");\n      }\n    } // });\n\n  }\n\n  function checkButton(obj) {\n    pieceSelected = true;\n    geoSelected = [];\n    geoSelected.push(obj);\n    outlinePass.selectedObjects = geoSelected;\n  }\n\n  function update() {\n    lights.update();\n    var delta = Date.now() * 0.0015; // postrender\n\n    composer.render();\n  }\n\n  function onWindowResize() {\n    const {\n      width,\n      height\n    } = canvas;\n    screenDimensions.width = width;\n    screenDimensions.height = height;\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(width, height);\n    composer.setSize(width, height);\n  }\n\n  return {\n    update,\n    onWindowResize\n  };\n});","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/PrototypingjsII/threejs/SceneManager.js"],"names":["THREE","GeneralLights","dat","OBJLoader","EffectComposer","RenderPass","FilmPass","BloomPass","ShaderPass","SobelOperatorShader","OutlinePass","$","OrbitControls","require","textureLoader","TextureLoader","canvas","loader","geo","geoPts","geoLines","backgroundcube","text","geoSelected","geoAll","geoFinished","geoPossible","t1","t2","uniforms","matColor","matFinColor","matPosColor","matShader","matWireframe","matGradient","matShaderSub","matHidden","matFinished","matFinishedBack","matPossible","matPossibleBack","matFade","matFadeBack","matFinishedArray","matPossibleArray","matFadeArray","textloader","FontLoader","composer","outlinePass","raycaster","Raycaster","mouse","Vector2","screen","pieceSelected","textFinished","texetAll","gui","guiData","shading","clock","Clock","screenDimensions","width","height","editFolder","scene","buildScene","camera","buildCamera","renderer","buildRender","controls","domElement","target","set","update","customContainer","document","getElementById","lights","createSceneSubjects","setPath","load","tex1","pointTexture","value","xhr1","console","log","loaded","total","Scene","background","Color","fog","Fog","WebGLRenderer","antialias","alpha","DPR","window","devicePixelRatio","shadowMap","enabled","localClippingEnabled","setPixelRatio","setSize","autoClear","toneMapping","ReinhardToneMapping","renderPass","addPass","edgeStrength","edgeGlow","edgeThickness","pulsePeriod","visibleEdgeColor","hiddenEdgeColor","onProgress","xhr","lengthComputable","percentComplete","Math","round","onError","PerspectiveCamera","innerWidth","innerHeight","position","CubeTextureLoader","MeshPhongMaterial","color","transparent","opacity","roughness","depthTest","depthWrite","flatShading","side","FrontSide","MeshBasicMaterial","BackSide","emssive","specular","shininess","MeshStandardMaterial","ground","Mesh","PlaneBufferGeometry","rotation","x","PI","receiveShadow","name","add","LineBasicMaterial","vertexColors","VertexColors","blending","AdditiveBlending","wireframe","MeshLambertMaterial","DoubleSide","addEventListener","onMove","onDown","createGUI","updateModel","GUI","autoPlace","onChange","addFolder","editParms","clearSelection","undoSelection","open","appendChild","removefromScene","array","i","length","type","children","forEach","g","material","dispose","geometry","remove","meshgroupfb","matarr","needsUpdate","push","pop","updateText","idPos","ac","boundingSphere","center","j","fc","d","distanceTo","k","clearModel","manager","LoadingManager","item","currentURL","obj","traverse","child","isMesh","piece","clone","pieces","Group","castShadow","event","y","changedTouches","pageX","pageY","clientX","clientY","checkIntersection","which","checkFinished","idFinished","idAll","undefined","splice","setFromCamera","intersects","intersectObjects","selectedObject","object","css","left","top","fontSize","textShadow","parent","selectedObjects","html","idstr","hover","checkButton","addClass","delta","Date","now","render","onWindowResize","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["import * as THREE from '../../threejs/src/Three.js';\r\n//import SceneSubject from './SceneSubject';\r\nimport GeneralLights from './GeneralLights';\r\nimport * as dat from 'dat.gui';\r\nimport { OBJLoader } from '../../threejs/examples/jsm/loaders/OBJLoader.js';\r\n\r\nimport { EffectComposer } from '../../threejs/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from '../../threejs/examples/jsm/postprocessing/RenderPass.js';\r\nimport { FilmPass } from '../../threejs/examples/jsm/postprocessing/FilmPass.js';\r\nimport { BloomPass } from '../../threejs/examples/jsm/postprocessing/BloomPass.js';\r\n\r\nimport { ShaderPass } from '../../threejs/examples/jsm/postprocessing/ShaderPass.js';\r\nimport { SobelOperatorShader } from '../../threejs/examples/jsm/shaders/SobelOperatorShader.js';\r\nimport { OutlinePass } from '../../threejs/examples/jsm/postprocessing/OutlinePass.js';\r\nimport $ from 'jquery';\r\n\r\n//const glsl = require('glslify');\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\nconst textureLoader = new THREE.TextureLoader();\r\n\r\nexport default canvas => {\r\n    // objects\r\n    var loader;\r\n    //var geos = new THREE.Group();\r\n    var geo, geoPts, geoLines;\r\n    var backgroundcube, text;\r\n    // as Three.Group = children[0] = frontface / children[1] = backface\r\n    var geoSelected;\r\n    var geoAll =[]; \r\n    var geoFinished =[];\r\n    var geoPossible =[];\r\n    // material\r\n    var t1, t2, uniforms;\r\n    var matColor, matFinColor, matPosColor, matShader, matWireframe, matGradient, matShaderSub, matHidden;\r\n    var matFinished, matFinishedBack, matPossible, matPossibleBack, matFade, matFadeBack;\r\n    var matFinishedArray, matPossibleArray, matFadeArray;\r\n    var textloader = new THREE.FontLoader();\r\n    // renderer\r\n    var composer, outlinePass;\r\n    // control\r\n    var raycaster = new THREE.Raycaster();\r\n    var mouse = new THREE.Vector2();\r\n    var screen = new THREE.Vector2();\r\n    var pieceSelected = false;\r\n    var textFinished ='';\r\n    var texetAll='';\r\n    \r\n    // GUI\r\n    var gui, guiData, shading;\r\n    const clock = new THREE.Clock();\r\n    const screenDimensions = {\r\n        width: canvas.width,\r\n        height: canvas.height\r\n    }\r\n    var editFolder;\r\n\r\n    // build\r\n    const scene = buildScene();\r\n    const camera = buildCamera(screenDimensions);\r\n    const renderer = buildRender(screenDimensions);\r\n    \r\n    const controls = new OrbitControls( camera, renderer.domElement );\r\n    controls.target.set( 0, 1, 0 );\r\n    controls.update();\r\n\r\n    const customContainer = document.getElementById('canvas-gui-container');\r\n    const lights = GeneralLights(scene);\r\n\r\n    createSceneSubjects(scene, uniforms);\r\n\r\n    // textture\r\n    textureLoader.setPath( './assets/textures/sprites/' ).load( 'spark1.png', (tex1)=>{\r\n\r\n        t1 = tex1;\r\n        uniforms ={pointTexture: { value: t1 }};\r\n\r\n    },( xhr1 ) =>{\r\n        console.log( (xhr1.loaded / xhr1.total * 100) + '% loaded' );\r\n    },( xhr1 ) =>{\r\n        console.log( 'An error happened' );\r\n    });\r\n\r\n    // function below\r\n\r\n    function buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color('#a0a0a0');\r\n        scene.fog = new THREE.Fog( 0xa0a0a0, 10, 22 );\r\n        return scene;\r\n    }\r\n\r\n    function buildRender({ width, height }) {\r\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true });\r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.localClippingEnabled = false;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n        renderer.autoClear = false;\r\n        renderer.toneMapping = THREE.ReinhardToneMapping;\r\n\r\n        // post\r\n        composer = new EffectComposer( renderer );\r\n\r\n        var renderPass = new RenderPass( scene, camera );\r\n        composer.addPass( renderPass );\r\n\r\n        outlinePass = new OutlinePass( new THREE.Vector2( width, height ), scene, camera );\r\n\r\n        outlinePass.edgeStrength = 3.0\r\n        outlinePass.edgeGlow = 0.0;\r\n        outlinePass.edgeThickness = 1.0;\r\n        outlinePass.pulsePeriod = 0;\r\n        outlinePass.visibleEdgeColor.set( '#ff0000' );\r\n        outlinePass.hiddenEdgeColor.set( '#190a05' );\r\n\r\n        composer.addPass( outlinePass );\r\n\r\n        return renderer;\r\n    }\r\n\r\n    // input function    \r\n    function onProgress( xhr ) {\r\n            if ( xhr.lengthComputable ) {\r\n                var percentComplete = xhr.loaded / xhr.total * 100;\r\n                console.log( 'model ' + Math.round( percentComplete, 2 ) + '% downloaded' );\r\n                }\r\n    }\r\n\r\n    function onError() {\r\n            console.log( 'error!!' );\r\n    }\r\n\r\n    function buildCamera({ width, height }) {\r\n        const camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\r\n        camera.position.set( 6, 6, 0 );       \r\n        return camera;\r\n    }\r\n\r\n    function createSceneSubjects(scene , uniforms) {\r\n        // material 1\r\n\r\n        backgroundcube = new THREE.CubeTextureLoader()\r\n                    .setPath( './assets/textures/cube/pisa/' )\r\n                    .load( [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ] );\r\n\r\n        matFade = new THREE.MeshPhongMaterial( { \r\n            color: 0xeeeeee, \r\n            transparent: true,\r\n            opacity: 0.7,\r\n            roughness: 0.9,\r\n            depthTest: true,\r\n            depthWrite: true,\r\n            flatShading:true,\r\n            side: THREE.FrontSide\r\n        } );\r\n        matFadeBack = new THREE.MeshBasicMaterial( { \r\n            color: 0x555555,\r\n            transparent: true,\r\n            opacity: 0.7,\r\n            side: THREE.BackSide\r\n        });\r\n        matFadeArray =[matFade, matFadeBack];\r\n\r\n        matFinished = new THREE.MeshPhongMaterial( { \r\n            color: 0x21ce94,\r\n            emssive: 0x0,\r\n            specular:0x111111,\r\n            shininess: 30,\r\n            roughness: 0.9,\r\n            depthTest:true,\r\n            depthWrite:true,\r\n            //envMap: backgroundcube,\r\n            flatShading:true,\r\n            side: THREE.FrontSide\r\n        });\r\n        matFinishedBack = new THREE.MeshBasicMaterial( { \r\n            color: 0x555594,\r\n            side: THREE.BackSide\r\n        });\r\n        matFinishedArray =[matFinished, matFinishedBack];\r\n\r\n        matPossible = new THREE.MeshStandardMaterial( { \r\n            color: 0xeee143,\r\n            transparent: true,\r\n            opacity: 0.7,\r\n            roughness: 0.9,\r\n            depthTest: true,\r\n            depthWrite: true,\r\n            flatShading:true,\r\n            side: THREE.FrontSide\r\n        } );\r\n        matPossibleBack = new THREE.MeshBasicMaterial( { \r\n            color: 0x888122,\r\n            transparent: true,\r\n            opacity: 0.7,\r\n            side: THREE.BackSide\r\n        });\r\n        matPossibleArray =[matPossible, matPossibleBack];\r\n\r\n        // background     \r\n        var ground = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry( 400, 400, 1, 1 ),\r\n            new THREE.MeshPhongMaterial( { color: 0x999999, shininess: 150, depthWrite: false } )\r\n        );\r\n                \r\n\r\n        ground.rotation.x = - Math.PI / 2; // rotates X/Y to X/Z\r\n        ground.receiveShadow = true; \r\n        ground.name='ground';          \r\n        scene.add( ground );\r\n\r\n        matShaderSub = new THREE.LineBasicMaterial( {\r\n                    vertexColors: THREE.VertexColors,\r\n                    blending: THREE.AdditiveBlending,\r\n                    transparent: true\r\n                } );\r\n        matHidden = new THREE.MeshBasicMaterial( { \r\n            color: matColor, \r\n            transparent: true, \r\n            blending: THREE.AdditiveBlending,\r\n            opacity : 0.1\r\n        } );\r\n\r\n        // material 3\r\n        matWireframe = new THREE.MeshBasicMaterial( { color: matColor, wireframe: true } );\r\n        \r\n        // material 4\r\n        matGradient = new THREE.MeshLambertMaterial( {\r\n                    vertexColors: THREE.VertexColors,\r\n                    side: THREE.DoubleSide\r\n                });       \r\n        \r\n\r\n        window.addEventListener( 'mousemove', onMove );\r\n        window.addEventListener( 'mousedown', onDown, false );\r\n\r\n        // subject\r\n        createGUI();  \r\n        updateModel();\r\n        \r\n    }\r\n    \r\n    function createGUI(){\r\n        //GUI\r\n        //if ( gui ) gui.destroy();\r\n\r\n        gui = new dat.GUI({ autoPlace: false }); \r\n\r\n        guiData = {\r\n                    'currentURL': './assets/prototypingjs/2020Fab01_00.obj',\r\n                    'drawWireframe': true,\r\n                    'drawStrokes': true\r\n                };\r\n\r\n        // pubilc/assets/prototypingjs/XXXX.obj\r\n\r\n        gui.add( guiData, 'currentURL', {\r\n                    \"2020Fab01_00\": './assets/prototypingjs/2020Fab01_00.obj',\r\n                    \"2020Fab01_01\": './assets/prototypingjs/2020Fab01_01.obj'\r\n                } ).name( 'FabModel' ).onChange( updateModel );\r\n        // gui action\r\n        editFolder = gui.addFolder( 'Edit' );\r\n        var editParms = {\r\n            clearSelection: ()=>{clearSelection();},\r\n            undoSelection: ()=>{undoSelection();}\r\n        };\r\n        editFolder.add(editParms, 'clearSelection');\r\n        editFolder.add(editParms, 'undoSelection');\r\n        editFolder.open();\r\n\r\n        customContainer.appendChild(gui.domElement);\r\n    }\r\n    \r\n    function removefromScene(array){\r\n        for (let i=0;i<array.length;i+=1){\r\n            if (array[i].type == 'Group'){\r\n                array[i].children.forEach((g, i)=>{\r\n                    g.material.dispose();\r\n                    g.geometry.dispose();\r\n                })\r\n            }else{\r\n                // ground\r\n                array[i].geometry.dispose();\r\n                array[i].material.dispose();\r\n            }\r\n            scene.remove(array[i]); \r\n        }\r\n    }\r\n    // assign front and back\r\n    function meshgroupfb(geo, matarr){\r\n        if (geo.type == 'Group'){\r\n            geo.children.forEach((g, i)=>{\r\n                g.material=matarr[i];\r\n                g.material.needsUpdate =true;\r\n            })\r\n        }\r\n    }\r\n    function clearSelection(){\r\n        // All part\r\n        for (let i=geoFinished.length-1; i>=0; i-=1){\r\n            // front\r\n            meshgroupfb(geoFinished[i], matFadeArray);\r\n            /*\r\n            geoFinished[i].children[0].material=matFade;\r\n            geoFinished[i].children[0].material.needsUpdate =true;\r\n            // back\r\n            geoFinished[i].children[1].material=matFade;\r\n            geoFinished[i].children[1].material.needsUpdate =true;\r\n            */\r\n            geoAll.push(geoFinished[i]);\r\n            geoFinished.pop();\r\n        }\r\n        // possible part\r\n        for (let i=geoAll.length-1; i>=0; i-=1){\r\n            // front\r\n            geoAll[i].children[0].material=matFade;\r\n            geoAll[i].children[0].material.needsUpdate =true;\r\n            // back\r\n            geoAll[i].children[0].material=matFade;\r\n            geoAll[i].children[0].material.needsUpdate =true;\r\n        }\r\n        geoPossible=[];\r\n\r\n        updateText();\r\n    }\r\n    function undoSelection(){\r\n        // finish part\r\n        if (geoFinished.length>0){\r\n            geoFinished[geoFinished.length-1].material=matFade;\r\n            geoFinished[geoFinished.length-1].material.needsUpdate =true;\r\n            geoAll.push(geoFinished[geoFinished.length-1]);\r\n            geoFinished.pop();\r\n        }\r\n            // possible part\r\n            geoPossible=[];\r\n            var idPos=[];\r\n\r\n            for (let i=0; i<geoAll.length; i+=1){\r\n                    geoAll[i].material = matFade;\r\n                    geoAll[i].material.needsUpdate =true;\r\n                    let ac = geoAll[i].geometry.boundingSphere.center;\r\n\r\n                    for (let j=0; j<geoFinished.length; j+=1){\r\n                        let fc = geoFinished[j].geometry.boundingSphere.center;\r\n                        let d = fc.distanceTo( ac );\r\n                        if (d<0.65){\r\n                            geoPossible.push(geoAll[i]);\r\n                            idPos.push(i);\r\n                        }\r\n                    }\r\n            }\r\n\r\n            for (let k=0; k<idPos.length;k+=1){\r\n                geoAll[idPos[k]].material = matPossible;\r\n                geoAll[idPos[k]].material.needsUpdate =true;\r\n            }\r\n        /*\r\n        for (let i=geoAll.length-1; i>=0; i-=1){\r\n            geoAll[i].material=matFade;\r\n            geoAll[i].material.needsUpdate =true;\r\n        }\r\n        geoPossible=[];\r\n        */\r\n        updateText();\r\n    }\r\n\r\n    function updateModel(){\r\n        // remove\r\n        /*\r\n        for (let i=0;i<geoAll.length;i+=1){\r\n            geoAll[i].geometry.dispose();\r\n            geoAll[i].material.dispose();\r\n            scene.remove(geoAll[i]);\r\n        }\r\n        */\r\n        clearModel();\r\n        // manager        \r\n        const manager = new THREE.LoadingManager();\r\n        manager.onProgress = function ( item, loaded, total ) {};\r\n\r\n        loader = new OBJLoader(manager);\r\n        // execute input\r\n        // =================object will install into ./public not in ./src===================\r\n        loader.load( guiData.currentURL, function ( obj ) {\r\n            // Object\r\n            obj.traverse( function ( child ) {\r\n                if ( child.isMesh ) {\r\n                        var piece = child.clone();\r\n                        // put data into group then make it show different texture\r\n                        var pieces = new THREE.Group();\r\n                        pieces.add(new THREE.Mesh(piece.geometry, matFade));\r\n                        pieces.add(new THREE.Mesh(piece.geometry, matFadeBack));\r\n                        pieces.children[0].castShadow = true; // only cast one geomtry shadow \r\n                        pieces.name = piece.name;\r\n                        //console.log(pieces.name);\r\n                        scene.add(pieces);\r\n                        geoAll.push(pieces);                           \r\n                }               \r\n            });\r\n            //scene.add( geos );\r\n        }, onProgress, onError );\r\n        updateText();\r\n    }\r\n\r\n    function onMove(event){\r\n        //event.preventDefault();\r\n        var x, y;\r\n        if ( event.changedTouches ) {\r\n            x = event.changedTouches[ 0 ].pageX;\r\n            y = event.changedTouches[ 0 ].pageY;\r\n        } else {\r\n            x = event.clientX;\r\n            y = event.clientY;\r\n\r\n            screen.x = event.pageX;\r\n            screen.y = event.pageY;\r\n        }\r\n        \r\n        mouse.x = ( x / window.innerWidth) * 2 - 1;\r\n        mouse.y = - ( y / window.innerHeight) * 2 + 1;\r\n        checkIntersection();\r\n    }\r\n\r\n    function onDown(event){\r\n        //console.log(guiData.currentURL);\r\n        //event.preventDefault();\r\n\r\n        switch (event.which){\r\n            case 1:\r\n                var checkFinished = false;\r\n                var idFinished = -1;\r\n                var idAll = -1;\r\n                var idPos = [];\r\n                geoPossible =[];\r\n\r\n                // if selected something\r\n                if (pieceSelected){\r\n\r\n                    // update all\r\n                    for (let i=0;i<geoAll.length;i+=1){\r\n                        meshgroupfb(geoAll[i], matFadeArray);\r\n                        //geoAll[i].material = matFade;\r\n                    }\r\n                    // for selected\r\n                    if (geoSelected !== undefined && geoSelected.length>0){\r\n                        \r\n                        // check finished\r\n                        if (geoFinished.length>0){\r\n                            for (let i=0;i<geoFinished.length;i+=1){\r\n                                if (geoFinished[i].name === geoSelected[0].name){\r\n                                   idFinished = i;\r\n                                   checkFinished = true;\r\n                                   break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // step1 : if check finidshed > become fade\r\n                        if (checkFinished){\r\n                            // add into geoAll\r\n                            geoAll.push(geoFinished[idFinished]);\r\n\r\n                            // texture change\r\n                            meshgroupfb(geoFinished[idFinished], matFadeArray);\r\n                            //geoFinished[idFinished].children[0].material = matFade;\r\n                            //geoFinished[idFinished].children[1].material = matFadeBack;\r\n                            //geoFinished[idFinished].children[0].material.needsUpdate =true;\r\n                            //geoFinished[idFinished].children[1].material.needsUpdate =true;\r\n                            // removed from geofinished\r\n                            geoFinished.splice(idFinished, 1);\r\n\r\n                        }else{\r\n                            // if fade > become finished\r\n                            // add into geofinished\r\n                            // geoSelected got group\r\n                            meshgroupfb(geoSelected[0], matFinishedArray);\r\n                            //geoSelected[0].children[0].material = matFinished;\r\n                            //geoSelected[0].children[1].material = matFinishedBack;\r\n                            //geoSelected[0].children[0].material.needsUpdate =true;\r\n                            //geoSelected[0].children[1].material.needsUpdate =true;\r\n                            geoFinished.push(geoSelected[0]);\r\n\r\n                            // removed from geoAll\r\n                            for (let i=0;i<geoAll.length;i+=1){\r\n                                if (geoAll[i].name === geoSelected[0].name){\r\n                                   idAll = i;\r\n                                   break;\r\n                                }\r\n                            }\r\n                            geoAll.splice(idAll, 1);\r\n                        }\r\n\r\n                        // step2 : check surrounded and preseverd in geoAll\r\n\r\n                        for (let i=0; i<geoAll.length; i+=1){\r\n                            let ac = geoAll[i].children[0].geometry.boundingSphere.center;\r\n\r\n                            for (let j=0; j<geoFinished.length; j+=1){\r\n                                let fc = geoFinished[j].children[0].geometry.boundingSphere.center;\r\n                                let d = fc.distanceTo( ac );\r\n                                if (d<0.65){\r\n                                    geoPossible.push(geoAll[i]);\r\n                                    idPos.push(i);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        for (let k=0; k<idPos.length;k+=1){\r\n                            meshgroupfb(geoAll[idPos[k]], matPossibleArray);\r\n                            //geoAll[idPos[k]].material = matPossible;\r\n                            //geoAll[idPos[k]].material.needsUpdate =true;\r\n                        }\r\n                            \r\n\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n        updateText();\r\n    }\r\n\r\n\r\n    function clearModel(){\r\n        var geoSelected; \r\n        removefromScene(geoAll);\r\n        removefromScene(geoFinished);\r\n        removefromScene(geoPossible);\r\n        geoAll=[];\r\n        geoFinished =[];\r\n        geoPossible =[];\r\n    }\r\n\r\n    function checkIntersection() {\r\n        geoSelected =[];\r\n\r\n        raycaster.setFromCamera( mouse, camera );\r\n        var intersects = raycaster.intersectObjects( [ scene ], true );\r\n        if ( intersects.length > 0 ) {\r\n            var selectedObject = intersects[ 0 ].object; //>> this just one object not group\r\n\r\n            // but need to check it is for ground\r\n            if (selectedObject.name === 'ground'){\r\n                $('#infoCanvas').text('');\r\n                pieceSelected =false;\r\n            }else{\r\n                $('#infoCanvas').text(selectedObject.name);\r\n                $('#infoCanvas').css({\r\n                    left: screen.x+20,\r\n                    top: screen.y+20,\r\n                    fontSize: '24px',\r\n                    textShadow: '5px 5px 1px #333333, 2px 2px 1px #333333'\r\n                });\r\n                // should replace object into group\r\n                geoSelected.push(selectedObject.parent);\r\n                pieceSelected =true;\r\n            }\r\n        } else {\r\n            $('#infoCanvas').text('1');\r\n            pieceSelected =false;\r\n        }\r\n\r\n        if (outlinePass !== undefined && pieceSelected) {\r\n            outlinePass.selectedObjects = geoSelected;\r\n        }\r\n        updateText();\r\n    }\r\n    function updateText(){\r\n        //geoSelected =[];\r\n        //var count=0;\r\n        // text attatch\r\n       // $(document).ready(()=>{\r\n            $('#infoProgress').html(()=>{\r\n                textFinished ='Sotck<br>';\r\n\r\n                // geoall part\r\n                if (geoAll !== undefined && geoAll.length>0){\r\n                    for (var i=0;i<geoAll.length;i+=1){\r\n                        //textFinished += ''geoFinished[i].name +',';\r\n                        if (i%5==0){ textFinished += '<br>'; }\r\n                        var idstr = geoAll[i].name;\r\n                        \r\n                        textFinished += '<button id=\"'+idstr+'\" class=\"ui mini inverted button\">'+idstr+'</button>';\r\n                    }\r\n                    //count+=1;\r\n                }\r\n\r\n                // finished part\r\n                textFinished += '<br><br>Finished<br>';\r\n                if (geoFinished !== undefined && geoFinished.length>0){\r\n                    for (var i=0;i<geoFinished.length;i+=1){\r\n                        //textFinished += ''geoFinished[i].name +',';\r\n                        if (i%5==0){ textFinished += '<br>'; }\r\n                        textFinished += '<button id=\"'+geoFinished[i].name+'\" class=\"ui mini posstive button\">'+geoFinished[i].name+'</button>';\r\n\r\n                    }\r\n                    //count+=1;\r\n                } \r\n\r\n                return textFinished;\r\n            });\r\n\r\n            if (geoAll !== undefined){\r\n                $('#infoAll').html(()=>{\r\n                    return 'GoeFinishedNum:'+geoFinished.length;\r\n                });\r\n\r\n                //var count=0;\r\n                /*\r\n                $('#infoProgress').find('.button').hover(()=>{\r\n                    console.log($(this).id);\r\n                    //count+=1;\r\n                    //$(this).addEventListener('onclick',()=>{\r\n                    //    console.log('a');\r\n                    //});\r\n                    //console.log(count);\r\n                    //count+=1;\r\n                });\r\n                */\r\n                // add interactive hover\r\n                \r\n                if (geoAll.length>0){\r\n                    for(let i=0;i<geoAll.length;i+=1){\r\n                        $('#'+geoAll[i].name).hover(()=>{\r\n                            checkButton(geoAll[i]);\r\n                        });  \r\n                    }    \r\n                }\r\n                if (geoFinished.length>0){\r\n                    for(let i=0;i<geoFinished.length;i+=1){\r\n                        $('#'+geoFinished[i].name).hover(()=>{\r\n                            checkButton(geoFinished[i]);\r\n                        });  \r\n                    }    \r\n                }\r\n            }\r\n\r\n            // set pieces\r\n            if (pieceSelected){\r\n                //console.log(geoSelected[0].type);\r\n                if (geoSelected.length>0){\r\n                    $('#'+geoSelected[0].name).addClass(\"red\");\r\n                }\r\n            }\r\n       // });\r\n\r\n    }\r\n \r\n\r\n    function checkButton(obj){\r\n        pieceSelected =true;\r\n        geoSelected =[];\r\n        geoSelected.push(obj);\r\n        outlinePass.selectedObjects = geoSelected;\r\n    }   \r\n    \r\n    function update() {\r\n        lights.update();\r\n\r\n        var delta = Date.now()*0.0015;\r\n        // postrender\r\n        composer.render();\r\n    }\r\n\r\n    function onWindowResize() {\r\n        const { width, height } = canvas;\r\n        \r\n        screenDimensions.width = width;\r\n        screenDimensions.height = height;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n        \r\n        renderer.setSize(width, height);\r\n        composer.setSize(width,  height);\r\n\r\n    }\r\n\r\n    return {\r\n        update,\r\n        onWindowResize\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}