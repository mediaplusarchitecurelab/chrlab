{"ast":null,"code":"import * as THREE from '../../threejs/src/Three.js'; //import SceneSubject from './SceneSubject';\n\nimport GeneralLights from './GeneralLights';\nimport * as dat from 'dat.gui';\nimport { OBJLoader } from '../../threejs/examples/jsm/loaders/OBJLoader.js';\nimport { EffectComposer } from '../../threejs/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from '../../threejs/examples/jsm/postprocessing/RenderPass.js';\nimport { FilmPass } from '../../threejs/examples/jsm/postprocessing/FilmPass.js';\nimport { BloomPass } from '../../threejs/examples/jsm/postprocessing/BloomPass.js';\nimport { ShaderPass } from '../../threejs/examples/jsm/postprocessing/ShaderPass.js';\nimport { SobelOperatorShader } from '../../threejs/examples/jsm/shaders/SobelOperatorShader.js';\nimport { OutlinePass } from '../../threejs/examples/jsm/postprocessing/OutlinePass.js';\nimport $ from 'jquery';\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nconst textureLoader = new THREE.TextureLoader();\n\nclass RobotComponent {\n  constructor(state, scene) {\n    this.state = state;\n    this.scene = scene;\n    this.buildComponents();\n  }\n\n  buildComponents() {\n    // including joint and object\n    let geo = new THREE.BoxBufferGeometry(this.state.size.x, this.state.size.y, this.state.size.z);\n    let mat = new THREE.MeshBasicMaterial({\n      color: 0xffff00,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false\n    });\n    let mesh = new THREE.Mesh(geo, mat);\n    let ml = [];\n    let ll = [];\n    geo.computeBoundingBox();\n    geo.boundingBox.getSize(this.state.size); //console.log(this.state.originWorldPoint);\n\n    this.state.originWorldPoint.x -= this.state.size.x * this.state.originScale.x;\n    this.state.originWorldPoint.y -= this.state.size.y * this.state.originScale.y;\n    this.state.originWorldPoint.z -= this.state.size.z * this.state.originScale.z; //console.log(this.state.originWorldPoint);\n\n    mesh.position.add(this.state.originWorldPoint);\n    mesh.castShadow = mesh.receiveShadow = true;\n    this.scene.add(mesh);\n    ml.push(mesh); // build joint\n\n    let sm = Math.min(...this.state.size.toArray());\n    let jgeo = new THREE.CylinderBufferGeometry(sm * 0.5, sm * 0.5, sm * 0.5, 16);\n    let jmat = new THREE.MeshBasicMaterial({\n      color: 0x0000ff,\n      depthWrite: false\n    });\n    let jmesh = new THREE.Mesh(jgeo, jmat);\n    jmesh.castShadow = jmesh.receiveShadow = true;\n\n    if (this.state.jointVector.equals(new THREE.Vector3(0, 0, 1))) {\n      jmesh.geometry.rotateX(90 * (Math.PI / 180));\n    } else if (this.state.jointVector.equals(new THREE.Vector3(0, 0, -1))) {\n      jmesh.geometry.rotateX(-90 * (Math.PI / 180));\n    } else if (this.state.jointVector.equals(new THREE.Vector3(1, 0, 0))) {\n      jmesh.geometry.rotateZ(90 * (Math.PI / 180));\n    } else if (this.state.jointVector.equals(new THREE.Vector3(-1, 0, 0))) {\n      jmesh.geometry.rotateZ(-90 * (Math.PI / 180));\n    }\n\n    let jwp = this.state.originWorldPoint.clone().add(this.state.size.clone().multiply(this.state.jointScale));\n    jmesh.position.add(jwp);\n    this.scene.add(jmesh);\n    ml.push(jmesh);\n    this.state.meshList = ml;\n    this.state.jointWorldPoint = jwp;\n    let arrowHelper = new THREE.ArrowHelper(this.state.jointVector, this.state.jointWorldPoint, 250, 0xff0000);\n    this.scene.add(arrowHelper);\n    ll.push(arrowHelper);\n    this.state.lineList = ll;\n    arrowHelper.userData = {\n      Component: this\n    };\n  }\n\n  rotate(a) {\n    //console.log(a);\n    let q = new THREE.Quaternion();\n    q.setFromAxisAngle(this.state.jointVector.normalize(), a - this.state.angle * Math.PI / 180.0); //let tempGroup = new THREE.Group();\n\n    this.state.meshList.forEach(v => {\n      //tempGroup.add(v);\n      v.applyQuaternion(q);\n      v.position.sub(this.state.jointWorldPoint);\n      v.position.applyQuaternion(q);\n      v.position.add(this.state.jointWorldPoint);\n    }); //console.log(this.state.jointVector);\n\n    this.state.lineList.forEach((v, i) => {\n      //tempGroup.add(v);\n      v.applyQuaternion(q);\n      v.position.sub(this.state.jointWorldPoint);\n      v.position.applyQuaternion(q);\n      v.position.add(this.state.jointWorldPoint);\n\n      if (v.userData.Component.state.aid > this.state.aid) {\n        v.userData.Component.state.jointWorldPoint = v.position.clone();\n        v.userData.Component.state.jointVector.applyQuaternion(q).clone();\n      }\n    });\n    this.state.lineList.forEach(v => {});\n    this.state.angle = a * 180.0 / Math.PI;\n  }\n\n}\n\nconst arrows = {};\n\nfunction addArrow(name, from, to, color = 0xffff00, length = 10) {\n  if (arrows.hasOwnProperty(name)) {} //window.debug.scene.remove(arrows[name]);\n  //if (!window.debug.show) return\n\n\n  const toPoint = new THREE.Vector3(to[0], to[1], to[2]);\n  const origin = new THREE.Vector3(from[0], from[1], from[2]); // length = length || toPoint.sub(origin).length()\n  // toPoint.normalize()\n\n  arrows[name] = new THREE.ArrowHelper(toPoint.sub(origin).normalize(), origin, length, color, 2, 1); //window.debug.scene.add(arrows[name]);\n}\n\nfunction addVectorArrow(name, from, vector, color, length) {\n  addArrow(name, from, [from[0] + vector[0], from[1] + vector[1], from[2] + vector[2]], color, length);\n}\n\nconst spheres = {};\n\nfunction addSphere(name, position, color = 0xffff00, diameter = 30) {\n  if (spheres.hasOwnProperty(name)) {} //window.debug.scene.remove(spheres[name]);\n  //if (!window.debug.show) return;\n\n\n  const geometry = new THREE.SphereGeometry(diameter, 32, 32);\n  const material = new THREE.MeshBasicMaterial({\n    color\n  });\n  spheres[name] = new THREE.Mesh(geometry, material);\n  spheres[name].position.set(position[0], position[1], position[2]); //window.debug.scene.add(spheres[name]);\n} // initiate\n\n\nexport default (canvas => {\n  // objects\n  var robotmap, target, ikTask;\n  var stepValue = 0;\n  var tempstartTarget;\n  const UPPERSTEP = 200;\n  var request;\n  var loader;\n  var parmfont;\n  const ssnodeurl = 'https://spreadsheets.google.com/feeds/list/1l3DvxzJxmCPyk3TruBMCC_YXWEvRJXnkwaKcx41IoKA/1/public/values?alt=json';\n  const sscrvurl = 'https://spreadsheets.google.com/feeds/list/1l3DvxzJxmCPyk3TruBMCC_YXWEvRJXnkwaKcx41IoKA/2/public/values?alt=json';\n  const exeurl = 'https://script.google.com/macros/s/AKfycbyYhxPfFDvS1nPTuDg9n5SZLYwbzaD6zqVbBkVJzzEWDoWjW6B8/exec';\n  const ssnodeurledit = 'https://docs.google.com/spreadsheets/d/1l3DvxzJxmCPyk3TruBMCC_YXWEvRJXnkwaKcx41IoKA/edit?usp=sharing'; // abb irb2600 setting\n\n  const abbirb2600Config = {\n    jointLimit: {\n      'a0': [-180.0, 180.0],\n      'a1': [-95.0 - 90, 155.0 - 90],\n      'a2': [-180.0 + 90, 75.0 + 90],\n      'a3': [-175.0, 175.0],\n      'a4': [-120.0, 120.0],\n      'a5': [-191.0, 191.0]\n    },\n    r0: 445,\n    r1: 700,\n    r2: 0,\n    r3: 786,\n    r4: 0,\n    r5: 0,\n    p0: new THREE.Vector3(0, 0, 0),\n    p1: new THREE.Vector3(0, 445, -150)\n  }; //var geos = new THREE.Group();\n  //var geoVmap, geoCrvmap;\n\n  var geoVmap = [];\n  var geoCmap = [];\n  var geo, geoPts, geoLines;\n  var backgroundcube, text; // as Three.Group = children[0] = frontface / children[1] = backface\n\n  var geoSelected;\n  var geoAll = [];\n  var geoFinished = [];\n  var geoPossible = [];\n  var geoLocked = [];\n  var cLocked = []; // material\n\n  var t1, t2, uniforms;\n  var matColor, matFinColor, matPosColor, matShader, matWireframe, matGradient, matShaderSub, matHidden, matLine;\n  var matFinished, matFinishedBack, matPossible, matLocked, matPossibleBack, matFade, matFadeBack;\n  var matFinishedArray, matPossibleArray, matFadeArray;\n  var textloader = new THREE.FontLoader(); // renderer\n\n  var composer, outlinePass; // control\n\n  var raycaster = new THREE.Raycaster();\n  var mouse = new THREE.Vector2();\n  var screen = new THREE.Vector2();\n  var pieceSelected = false;\n  var textFinished = '';\n  var texetAll = '';\n  var nodeSize = 0.6;\n  var pipeDegree = 20; // default as 64\n\n  var pipeSize = 0.3;\n  var pipeRacial = 4;\n  var pipeClose = false; // GUI\n\n  var gui, guiData, shading;\n  var tagratio = 2.0;\n  var tagdist = 1.0;\n  const clock = new THREE.Clock();\n  const screenDimensions = {\n    width: canvas.width,\n    height: canvas.height,\n    halfwidth: canvas.width * 0.5,\n    halfheight: canvas.height * 0.5\n  };\n  const pannelSize = {\n    width: canvas.width,\n    height: canvas.height,\n    halfwidth: canvas.width * 0.5,\n    halfheight: canvas.height * 0.5\n  };\n  var displayFolder, teamCallbackFolder, jointFolder, targetFolder, stepFolder;\n  var targetParams; // ==== ROBOT ====\n\n  const defaultstate = {\n    aid: 0,\n    originWorldPoint: new THREE.Vector3(0, 0, 0),\n    originScale: new THREE.Vector3(0, -0.5, 0),\n    // multiples with size, center as zero\n    size: new THREE.Vector3(),\n    jointWorldPoint: new THREE.Vector3(0, 0, 0),\n    jointsize: new THREE.Vector3(),\n    jointScale: new THREE.Vector3(0, -0.5, 0),\n    // multiples with size, center as zero\n    jointVector: new THREE.Vector3(0, 1, 0),\n    subjointScale: new THREE.Vector3(0, 0.5, 1),\n    // multiples with size, center as zero\n    subjointVector: new THREE.Vector3(-1, 0, 0),\n    meshList: [],\n    lineList: [],\n    //submeshGroup: new THREE.Group(),\n    angle: 0\n  };\n  var robotstate;\n  var geo; // build\n\n  const scene = buildScene();\n  const camera = buildCamera(screenDimensions);\n  const renderer = buildRender(screenDimensions);\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.target.set(0, 1, 0);\n  controls.update();\n  const customContainer = document.getElementById('canvas-gui-container');\n  const lights = GeneralLights(scene);\n  createSceneSubjects(scene, uniforms); // textture\n\n  textureLoader.setPath('./assets/textures/sprites/').load('spark1.png', tex1 => {\n    t1 = tex1;\n    uniforms = {\n      pointTexture: {\n        value: t1\n      }\n    };\n  }, xhr1 => {\n    console.log(xhr1.loaded / xhr1.total * 100 + '% loaded');\n  }, xhr1 => {\n    console.log('An error happened');\n  });\n\n  function buildScene() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color('#a0a0a0');\n    scene.fog = new THREE.Fog(0xa0a0a0, 10, 9000);\n    return scene;\n  }\n\n  function buildRender({\n    width,\n    height\n  }) {\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true\n    });\n    const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    renderer.shadowMap.enabled = true;\n    renderer.localClippingEnabled = false;\n    renderer.setPixelRatio(DPR);\n    renderer.setSize(width, height);\n    renderer.autoClear = false;\n    renderer.toneMapping = THREE.ReinhardToneMapping; // post\n\n    composer = new EffectComposer(renderer);\n    var renderPass = new RenderPass(scene, camera);\n    composer.addPass(renderPass);\n    outlinePass = new OutlinePass(new THREE.Vector2(width, height), scene, camera);\n    outlinePass.edgeStrength = 2.0;\n    outlinePass.edgeGlow = 0.0;\n    outlinePass.edgeThickness = 0.7;\n    outlinePass.pulsePeriod = 0;\n    outlinePass.visibleEdgeColor.set('#ff0000');\n    outlinePass.hiddenEdgeColor.set('#190a05');\n    composer.addPass(outlinePass);\n    return renderer;\n  } // input function    \n\n\n  function buildCamera({\n    width,\n    height\n  }) {\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 100, 5000);\n    camera.position.set(1800, 2400, 1800);\n    return camera;\n  }\n\n  function createSceneSubjects(scene, uniforms) {\n    // material 1\n    backgroundcube = new THREE.CubeTextureLoader().setPath('./assets/textures/cube/pisa/').load(['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png']);\n    matLine = new THREE.LineBasicMaterial({\n      color: 0xff00ff\n    });\n    matFade = new THREE.MeshPhongMaterial({\n      color: 0xeeeeee,\n      transparent: true,\n      opacity: 0.7,\n      roughness: 0.9,\n      depthTest: true,\n      depthWrite: true,\n      flatShading: true,\n      side: THREE.FrontSide\n    });\n    matFinished = new THREE.MeshPhongMaterial({\n      color: 0x21ce94,\n      emssive: 0x0,\n      specular: 0x111111,\n      shininess: 30,\n      roughness: 0.9,\n      depthTest: true,\n      depthWrite: true,\n      //envMap: backgroundcube,\n      flatShading: true,\n      side: THREE.FrontSide\n    }); // background     \n\n    var ground = new THREE.Mesh(new THREE.PlaneBufferGeometry(12000, 12000, 1, 1), new THREE.MeshPhongMaterial({\n      color: 0x999999,\n      shininess: 150,\n      depthWrite: false\n    }));\n    ground.rotation.x = -Math.PI / 2; // rotates X/Y to X/Z\n\n    ground.receiveShadow = true; //ground.name='ground';          \n\n    scene.add(ground); //scene.add(THREESimulationRobot);\n\n    window.addEventListener('mousemove', onMove);\n    window.addEventListener('mousedown', onDown, false); // subject\n\n    initModel(scene); // create GUI\n\n    createGUI();\n  }\n\n  function createGUI() {\n    //GUI\n    //if ( gui ) gui.destroy();\n    gui = new dat.GUI({\n      autoPlace: false\n    }); // display floder\n\n    jointFolder = gui.addFolder('Rotate');\n    var jointParams = {\n      // tagdist\n      get 'a0'() {\n        return robotmap.rc0.state.angle;\n      },\n\n      set 'a0'(v) {\n        robotmap.rc0.rotate(v * Math.PI / 180);\n      },\n\n      get 'a1'() {\n        return robotmap.rc1.state.angle;\n      },\n\n      set 'a1'(v) {\n        robotmap.rc1.rotate(v * Math.PI / 180);\n      },\n\n      get 'a2'() {\n        return robotmap.rc2.state.angle;\n      },\n\n      set 'a2'(v) {\n        robotmap.rc2.rotate(v * Math.PI / 180);\n      },\n\n      get 'a3'() {\n        return robotmap.rc3.state.angle;\n      },\n\n      set 'a3'(v) {\n        robotmap.rc3.rotate(v * Math.PI / 180);\n      },\n\n      get 'a4'() {\n        return robotmap.rc4.state.angle;\n      },\n\n      set 'a4'(v) {\n        robotmap.rc4.rotate(v * Math.PI / 180);\n      },\n\n      get 'a5'() {\n        return robotmap.rc5.state.angle;\n      },\n\n      set 'a5'(v) {\n        robotmap.rc5.rotate(v * Math.PI / 180);\n      }\n\n    }; // abb irb 2600 limitation\n\n    jointFolder.add(jointParams, 'a0', abbirb2600Config.jointLimit.a0[0], abbirb2600Config.jointLimit.a0[1]).listen();\n    jointFolder.add(jointParams, 'a1', abbirb2600Config.jointLimit.a1[0], abbirb2600Config.jointLimit.a1[1]).listen();\n    jointFolder.add(jointParams, 'a2', abbirb2600Config.jointLimit.a2[0], abbirb2600Config.jointLimit.a2[1]).listen();\n    jointFolder.add(jointParams, 'a3', abbirb2600Config.jointLimit.a3[0], abbirb2600Config.jointLimit.a3[1]).listen();\n    jointFolder.add(jointParams, 'a4', abbirb2600Config.jointLimit.a4[0], abbirb2600Config.jointLimit.a4[1]).listen();\n    jointFolder.add(jointParams, 'a5', abbirb2600Config.jointLimit.a5[0], abbirb2600Config.jointLimit.a5[1]).listen(); //jointFolder.add(jointParams, 'a1', 0,360);\n\n    jointFolder.open(); // target floder\n\n    targetFolder = gui.addFolder('Target');\n    targetParams = {\n      // tagdist\n      get 'x'() {\n        return target.position.x;\n      },\n\n      set 'x'(v) {\n        target.position.x = v;\n        if (targetParams.asTCP) updateTarget(target.position);\n      },\n\n      get 'y'() {\n        return target.position.y;\n      },\n\n      set 'y'(v) {\n        target.position.y = v;\n        if (targetParams.asTCP) updateTarget(target.position);\n      },\n\n      get 'z'() {\n        return target.position.z;\n      },\n\n      set 'z'(v) {\n        target.position.z = v;\n        if (targetParams.asTCP) updateTarget(target.position);\n      },\n\n      asTCP: true\n    };\n    targetFolder.add(targetParams, 'x', -200, 600).listen();\n    targetFolder.add(targetParams, 'y', 1000, 1500).listen();\n    targetFolder.add(targetParams, 'z', 600, 1000).listen();\n    targetFolder.add(targetParams, 'asTCP').listen().onChange(() => {\n      if (targetParams.asTCP) {\n        stepFolder.close();\n        updateTarget(target.position);\n      } else {\n        stepFolder.open();\n\n        const getRandom = (min, max) => {\n          return Math.floor(Math.random() * (max - min + 1)) + min;\n        }; // make sure target and destination are different\n\n\n        target.position.x += getRandom(-200, 200);\n        target.position.y += getRandom(-200, 200);\n        target.position.z += getRandom(-200, 200);\n        tempstartTarget = robotmap.rc5.state.jointWorldPoint.clone();\n      }\n    });\n    targetFolder.open();\n    stepFolder = gui.addFolder('Step');\n    var stepParams = {\n      get 'animate'() {\n        return stepValue;\n      },\n\n      set 'animate'(v) {\n        stepValue = v;\n        let nt = tempstartTarget.clone().add(target.position.clone().sub(tempstartTarget).multiplyScalar(1.0 * stepValue / UPPERSTEP));\n        updateTarget(nt); //console.log(nt);\n        //;\n      },\n\n      apply: () => {}\n    };\n    stepFolder.add(stepParams, 'animate', 0, UPPERSTEP).listen();\n    stepFolder.add(stepParams, 'apply'); //stepFolder.open();\n\n    updateTarget(target.position);\n    customContainer.appendChild(gui.domElement);\n  } // only upgrade when asTCP === true\n\n\n  function updateTarget(tp) {\n    // 幾何求解\n    // 假設目前無末端執行器\n    // a5 position > 只與 q0 q1 q2 有關 > 先取得R30 >\n    // R = R30*R63 > 可取得 q3 q4 q5\n    // 手臂投影至 Xi-1/Zi-1 平面 求得 qi\n    // O為target(ox,oy,oz) 減去 a0 position 之向量\n    // q0 = Atan(ox,oz) 取 水平 部分 (javascript y 為垂直)\n    let oca0 = tp.clone().sub(abbirb2600Config.p0); //\n    // let q0 = Math.atan(oca0.x,oca0.z); 若無左右臂狀態\n    // 但 abbirb 2600 為 左臂結構 還需減去一臂長偏差向量 q0 = fi -apha\n\n    let fi = Math.atan2(oca0.x, oca0.z); // apha = atan(sqrt(ox*ox+oz*oz-d*d), d) > 其中 d 為 a0 a1 的水平投影距離 > dv 的 x z 畢氏定理 可得\n\n    let a1a0 = abbirb2600Config.p1.clone().sub(abbirb2600Config.p0);\n    let d = a1a0.z;\n    let apha = Math.atan2(Math.sqrt(oca0.x * oca0.x + oca0.z * oca0.z - d * d), d);\n    let q0 = fi - apha + Math.PI / 2; // 連稈 r0 abbirb2600Config.r0 基座\n    // 連稈 r1 abbirb2600Config.r1 \n    // 連稈 r3 abbirb2600Config.r3 \n    // 先求q3 > -cos(q3)\n    //let oca1 = target.position.clone().sub(robotmap.rc1.state.jointWorldPoint); // a1點 與 target z 深度  \n    // r*r = oca1.z*oca1.z+oca1.y*oca1.y -d*d\n    // D = (r*r + s*s -r1*r1 - r3*r3) / 2*r1*r3\n\n    robotmap['rc' + 0].rotate(q0); //let r = target.position.clone().sub(robotmap.rc1.state.jointWorldPoint);\n\n    let r = Math.sqrt(oca0.x * oca0.x + oca0.z * oca0.z - d * d); //console.log(r.x);\n\n    let s = tp.y - abbirb2600Config.r0;\n    let D = (r * r + s * s - abbirb2600Config.r1 * abbirb2600Config.r1 - abbirb2600Config.r3 * abbirb2600Config.r3) / (2 * abbirb2600Config.r1 * abbirb2600Config.r3);\n    let q2 = [Math.atan2(D, Math.sqrt(1 - D * D)), Math.atan2(D, -Math.sqrt(1 - D * D))];\n    let q1 = [Math.atan2(r, s) - Math.atan2(abbirb2600Config.r1 + abbirb2600Config.r3 * Math.cos(q2[0]), abbirb2600Config.r3 * Math.sin(q2[0])) + Math.atan2(r, s), Math.atan2(r, s) - Math.atan2(abbirb2600Config.r1 + abbirb2600Config.r3 * Math.cos(q2[1]), abbirb2600Config.r3 * Math.sin(q2[1]))];\n    console.log(q1[0] * 180 / Math.PI);\n    robotmap['rc' + 1].rotate(q1[0]);\n    robotmap['rc' + 2].rotate(q2[0]);\n    /*\r\n    if ( q1[0] > abbirb2600Config.jointLimit.a1[0] || q1[0] < abbirb2600Config.jointLimit.a1[1]){\r\n      robotmap['rc'+1].rotate(q1[0]);\r\n      robotmap['rc'+2].rotate(q2[0]);\r\n    }else{\r\n      robotmap['rc'+1].rotate(q1[1]);\r\n      robotmap['rc'+2].rotate(q2[1]);\r\n    }\r\n    */\n    //robotmap['rc'+2].rotate(q2[0]);\n\n    /*\r\n    // q0,q1,q2 > R30 > 由 R30 求 R63\r\n    // 球型手腕 > R63 = Rz*q3*Ry*q4*Rz*q5 > 轉制矩陣 > 尤拉角公式算 q3, q4, q5 > \r\n    // 需要 目標點 t 所在 R 尤拉變化矩陣 t.normalMatrix\r\n    // | r11  r12  r13 |   | t對坐標軸X的X分量matrix.elements[0] t對坐標軸Y的X分量matrix.elements[3] t對坐標軸Y的X分量matrix.elements[6] |                          \r\n    // | r21  r22  r23 | = | t對坐標軸Y的Y分量matrix.elements[1] t對坐標軸Y的Y分量matrix.elements[4] t對坐標軸Y的Y分量matrix.elements[7] | > javascript Y > Z 交換 \r\n    // | r31  r32  r33 |   | t對坐標軸Z的Z分量matrix.elements[2] t對坐標軸Y的Z分量matrix.elements[5] t對坐標軸Y的Z分量matrix.elements[8] |\r\n    // q5 = atan2 (sin(q1)*r13) \r\n    let R = {\r\n        r11:target.normalMatrix.elements[0],r12:target.normalMatrix.elements[3],r13:target.normalMatrix.elements[6],\r\n        r21:target.normalMatrix.elements[1],r22:target.normalMatrix.elements[4],r23:target.normalMatrix.elements[7],\r\n        r31:target.normalMatrix.elements[2],r32:target.normalMatrix.elements[5],r33:target.normalMatrix.elements[8],\r\n    }\r\n    // q5 = atan2(sin(q0)*r13 -cos(q0)*r23, +-sqrt(1-pow(sin(q0)*r13-cos(q0)*r23, 2)))\r\n    //\r\n    let q4 = [Math.atan2(Math.sin(q0)*R.r13 -Math.cos(q0)*R.r23, Math.sqrt(1-Math.pow(Math.sin(q0)*R.r13-Math.cos(q0)*R.r23, 2))),\r\n            Math.atan2(Math.sin(q0)*R.r13 -Math.cos(q0)*R.r23, -Math.sqrt(1-Math.pow(Math.sin(q0)*R.r13-Math.cos(q0)*R.r23, 2)))];\r\n    //console.log(R.r11);\r\n    let q3,q5;\r\n    // q3 = atan2 ( cos(q0)*cos(q1+q2)*r13 + sin(q0)*cos(q1+q2)*r23 + sin(q1+q2)*r33 , -cos(q0)*sin(q1+q2)*r13 + sin(q0)*sin(q1+q2)*r23 + cos(q1+q2)*r33);\r\n    \r\n    if (q4[0]!=q4[1]){\r\n        if (Math.sin(q4[0])>0){\r\n            // q3\r\n            q3 = Math.atan2 ( Math.cos(q0)*Math.cos(q1+q2)*R.r13 + Math.sin(q0)*Math.cos(q1+q2)*R.r23 + Math.sin(q1+q2)*R.r33 , \r\n                        -Math.cos(q0)*Math.sin(q1+q2)*R.r13 + Math.sin(q0)*Math.sin(q1+q2)*R.r23 + Math.cos(q1+q2)*R.r33);\r\n            // q5 = atan2(-sin(q0)*r11+cos(q0)*r21, sin(q0)*r12-ccos(q0)*r22)\r\n            q5 = Math.atan2(-Math.sin(q0)*R.r11+Math.cos(q0)*R.r21, Math.sin(q0)*R.r12-Math.cos(q0)*R.r22);\r\n        }else if  (Math.sin(q4[0])<0){\r\n            // q3\r\n            q3 = Math.atan2 ( -Math.cos(q0)*Math.cos(q1+q2)*R.r13 - Math.sin(q0)*Math.cos(q1+q2)*R.r23 - Math.sin(q1+q2)*R.r33 , \r\n                        Math.cos(q0)*Math.sin(q1+q2)*R.r13 + Math.sin(q0)*Math.sin(q1+q2)*R.r23 - Math.cos(q1+q2)*R.r33);\r\n            // q5 = atan2(sin(q0)*r11-cos(q0)*r21, -sin(q0)*r12+ccos(q0)*r22)\r\n            q5 = Math.atan2(Math.sin(q0)*R.r11-Math.cos(q0)*R.r21, -Math.sin(q0)*R.r12+Math.cos(q0)*R.r22);\r\n        }\r\n    }\r\n    */\n  }\n\n  function robotstateGen(v, scene) {\n    let rs = {};\n    let suborigin = new THREE.Vector3(0, 0, 0);\n\n    if (v > 0) {\n      for (let i = 0; i < v; i += 1) {\n        let ss = Object.assign({}, defaultstate); // 深copy\n\n        ss.aid = i;\n\n        if (i == 0) {\n          ss.size = new THREE.Vector3(275 * 2, 445.0, 255.7 * 2);\n          ss.jointVector = new THREE.Vector3(0, 1, 0);\n          ss.subjointScale = new THREE.Vector3(0, 0.5, -150.0 / 275 / 2);\n        } else if (i == 1) {\n          ss.size = new THREE.Vector3(150, 700, 255.7);\n          ss.originWorldPoint = suborigin;\n          ss.jointVector = new THREE.Vector3(1, 0, 0);\n          ss.subjointScale = new THREE.Vector3(0, 0.5, 0);\n        } else if (i == 2) {\n          ss.size = new THREE.Vector3(275, 115.0 * 2, 238.4 + 190.6);\n          ss.originWorldPoint = suborigin;\n          ss.originScale = new THREE.Vector3(-0.5, 0, 0);\n          ss.jointScale = new THREE.Vector3(-0.5, 0, 0);\n          ss.jointVector = new THREE.Vector3(-1, 0, 0);\n          ss.subjointScale = new THREE.Vector3(0, 0, 0);\n        } else if (i == 3) {\n          ss.size = new THREE.Vector3(187.0, 135.0, 786.0);\n          ss.originWorldPoint = suborigin;\n          ss.originScale = new THREE.Vector3(0, 0, -0.5);\n          ss.jointScale = new THREE.Vector3(0, 0, -0.5);\n          ss.jointVector = new THREE.Vector3(0, 0, 1);\n          ss.subjointScale = new THREE.Vector3(0, 0, 0.5);\n        } else if (i == 4) {\n          ss.size = new THREE.Vector3(85.0 * 2, 85.0 * 2, 85.0 * 2);\n          ss.originWorldPoint = suborigin;\n          ss.originScale = new THREE.Vector3(0, 0, 0);\n          ss.jointScale = new THREE.Vector3(0, 0, 0);\n          ss.jointVector = new THREE.Vector3(-1, 0, 0);\n          ss.subjointScale = new THREE.Vector3(0, 0, 0.5);\n        } else if (i == 5) {\n          ss.size = new THREE.Vector3(98.0, 98.0, 98.0);\n          ss.originWorldPoint = suborigin;\n          ss.originScale = new THREE.Vector3(0, 0, -0.5);\n          ss.jointScale = new THREE.Vector3(0, 0, -0.5);\n          ss.jointVector = new THREE.Vector3(0, 0, 1);\n        } // out screen as +x\n        // right as +z\n        // up as +y \n\n\n        var rc = new RobotComponent(ss, scene);\n        suborigin = rc.state.originWorldPoint.clone().add(rc.state.subjointScale.clone().multiply(rc.state.size));\n\n        for (let j = i - 1; j >= 0; j -= 1) {\n          rc.state.meshList.forEach(v => {\n            rs['rc' + String(j)].state.meshList.push(v);\n          });\n          rc.state.lineList.forEach(v => {\n            rs['rc' + String(j)].state.lineList.push(v);\n          });\n        }\n\n        rs['rc' + String(i)] = rc;\n      }\n    }\n\n    return rs;\n  }\n\n  function initModel(scene) {\n    // build robot system\n    robotmap = robotstateGen(6, scene); // target\n\n    target = new THREE.Mesh(new THREE.BoxBufferGeometry(20, 20, 20), new THREE.MeshBasicMaterial({\n      color: 0x0000ff,\n      depthWrite: false\n    })); //target.rotateX(60*Math.PI/180.0);\n\n    target.position.add(new THREE.Vector3(-100, 1200, 800)); //console.log(target.position);\n\n    scene.add(target);\n  }\n\n  function onMove(event) {\n    //event.preventDefault();\n    var x, y;\n\n    if (event.changedTouches) {\n      x = event.changedTouches[0].pageX;\n      y = event.changedTouches[0].pageY;\n    } else {\n      x = event.clientX;\n      y = event.clientY;\n      screen.x = event.pageX;\n      screen.y = event.pageY;\n    }\n\n    mouse.x = x / window.innerWidth * 2 - 1;\n    mouse.y = -(y / window.innerHeight) * 2 + 1;\n  }\n\n  function onDown(event) {}\n\n  function Textinfo() {\n    //$(document).ready(()=>{\n    let textFinished = 'ABB irb2600 Configures' + '<br><br>' + 'jointR0: ' + abbirb2600Config.r0 + '<br>' + 'jointR1: ' + abbirb2600Config.r1 + '<br>' + 'jointR2: ' + abbirb2600Config.r2 + '<br>' + 'jointR3: ' + abbirb2600Config.r3 + '<br>' + 'jointR4: ' + abbirb2600Config.r4 + '<br>' + 'jointR5: ' + abbirb2600Config.r5 + '<br><br>' + 'jointP0: ' + robotmap.rc0.state.jointWorldPoint.x.toFixed(2) + ', ' + robotmap.rc0.state.jointWorldPoint.y.toFixed(2) + ', ' + robotmap.rc0.state.jointWorldPoint.z.toFixed(2) + '<br>' + 'jointR1: ' + robotmap.rc1.state.jointWorldPoint.x.toFixed(2) + ', ' + robotmap.rc1.state.jointWorldPoint.y.toFixed(2) + ', ' + robotmap.rc1.state.jointWorldPoint.z.toFixed(2) + '<br>' + 'jointR2: ' + robotmap.rc2.state.jointWorldPoint.x.toFixed(2) + ', ' + robotmap.rc2.state.jointWorldPoint.y.toFixed(2) + ', ' + robotmap.rc2.state.jointWorldPoint.z.toFixed(2) + '<br>' + 'jointR3: ' + robotmap.rc3.state.jointWorldPoint.x.toFixed(2) + ', ' + robotmap.rc3.state.jointWorldPoint.y.toFixed(2) + ', ' + robotmap.rc3.state.jointWorldPoint.z.toFixed(2) + '<br>' + 'jointR4: ' + robotmap.rc4.state.jointWorldPoint.x.toFixed(2) + ', ' + robotmap.rc4.state.jointWorldPoint.y.toFixed(2) + ', ' + robotmap.rc4.state.jointWorldPoint.z.toFixed(2) + '<br>' + 'jointR5: ' + robotmap.rc5.state.jointWorldPoint.x.toFixed(2) + ', ' + robotmap.rc5.state.jointWorldPoint.y.toFixed(2) + ', ' + robotmap.rc5.state.jointWorldPoint.z.toFixed(2);\n    $('#infoProgress').html(() => {\n      return textFinished;\n    });\n    /*\r\n                if (geoSelected.length>0){\r\n                    if (geoSelected[0].name){\r\n                        textFinished += geoSelected[0].name+'<br>';\r\n    \r\n                        let dstr='';\r\n                        let dtol=0.0;\r\n                        let nsv = new THREE.Vector3();\r\n                        geoSelected[0].userData.nodes.forEach((val,i)=>{\r\n                        if (i%4==0){ textFinished += '<br>'; }\r\n                        textFinished += '<button id=\"node_'+val+'\" class=\"ui mini posstive button\">n'+val+'</button>';\r\n                        //record for dist\r\n                        if (i>0){\r\n                            let v = parseFloat(geoSelected[0].userData.disteach[i-1]);\r\n                            dstr += 'n'+geoSelected[0].userData.nodes[i-1] + ' to n' + \r\n                                        val + ' = ' + v+' mm | '+(dtol+=v).toFixed(3)+' mm<br>';\r\n                                \r\n                        }\r\n                        geoVmap[val].userData.tag.visible=true;\r\n                        });\r\n                        textFinished += '<br><br><div style=\"color:red\">' + dstr+'</div>';\r\n                    }else{\r\n                        textFinished += 'Nothing selected...';\r\n                    }\r\n                }else{\r\n                    textFinished += 'Nothing selected...';\r\n                }\r\n    \r\n                $('#infoProgress').html(()=>{\r\n                    return textFinished;\r\n                });\r\n                $('#infoCanvas').html(()=>{\r\n                    return nodeText;\r\n                });\r\n            });\r\n        }\r\n      */\n    //});\n  }\n\n  function update() {\n    lights.update();\n    var delta = Date.now() * 0.0015; // postrender\n\n    composer.render();\n    Textinfo();\n  }\n\n  function onWindowResize() {\n    const {\n      width,\n      height\n    } = canvas;\n    screenDimensions.width = width;\n    screenDimensions.height = height;\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(width, height);\n    composer.setSize(width, height);\n    pannelSize.width = renderer.context.canvas.width;\n    pannelSize.height = renderer.context.canvas.height;\n    pannelSize.halfwidth = renderer.context.canvas.width * 0.5;\n    pannelSize.halfwidth = renderer.context.canvas.height * 0.5;\n  }\n\n  return {\n    update,\n    onWindowResize\n  };\n});","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/Robotarmjs/threejs/SceneManager.js"],"names":["THREE","GeneralLights","dat","OBJLoader","EffectComposer","RenderPass","FilmPass","BloomPass","ShaderPass","SobelOperatorShader","OutlinePass","$","OrbitControls","require","textureLoader","TextureLoader","RobotComponent","constructor","state","scene","buildComponents","geo","BoxBufferGeometry","size","x","y","z","mat","MeshBasicMaterial","color","transparent","opacity","depthWrite","mesh","Mesh","ml","ll","computeBoundingBox","boundingBox","getSize","originWorldPoint","originScale","position","add","castShadow","receiveShadow","push","sm","Math","min","toArray","jgeo","CylinderBufferGeometry","jmat","jmesh","jointVector","equals","Vector3","geometry","rotateX","PI","rotateZ","jwp","clone","multiply","jointScale","meshList","jointWorldPoint","arrowHelper","ArrowHelper","lineList","userData","Component","rotate","a","q","Quaternion","setFromAxisAngle","normalize","angle","forEach","v","applyQuaternion","sub","i","aid","arrows","addArrow","name","from","to","length","hasOwnProperty","toPoint","origin","addVectorArrow","vector","spheres","addSphere","diameter","SphereGeometry","material","set","canvas","robotmap","target","ikTask","stepValue","tempstartTarget","UPPERSTEP","request","loader","parmfont","ssnodeurl","sscrvurl","exeurl","ssnodeurledit","abbirb2600Config","jointLimit","r0","r1","r2","r3","r4","r5","p0","p1","geoVmap","geoCmap","geoPts","geoLines","backgroundcube","text","geoSelected","geoAll","geoFinished","geoPossible","geoLocked","cLocked","t1","t2","uniforms","matColor","matFinColor","matPosColor","matShader","matWireframe","matGradient","matShaderSub","matHidden","matLine","matFinished","matFinishedBack","matPossible","matLocked","matPossibleBack","matFade","matFadeBack","matFinishedArray","matPossibleArray","matFadeArray","textloader","FontLoader","composer","outlinePass","raycaster","Raycaster","mouse","Vector2","screen","pieceSelected","textFinished","texetAll","nodeSize","pipeDegree","pipeSize","pipeRacial","pipeClose","gui","guiData","shading","tagratio","tagdist","clock","Clock","screenDimensions","width","height","halfwidth","halfheight","pannelSize","displayFolder","teamCallbackFolder","jointFolder","targetFolder","stepFolder","targetParams","defaultstate","jointsize","subjointScale","subjointVector","robotstate","buildScene","camera","buildCamera","renderer","buildRender","controls","domElement","update","customContainer","document","getElementById","lights","createSceneSubjects","setPath","load","tex1","pointTexture","value","xhr1","console","log","loaded","total","Scene","background","Color","fog","Fog","WebGLRenderer","antialias","alpha","DPR","window","devicePixelRatio","shadowMap","enabled","localClippingEnabled","setPixelRatio","setSize","autoClear","toneMapping","ReinhardToneMapping","renderPass","addPass","edgeStrength","edgeGlow","edgeThickness","pulsePeriod","visibleEdgeColor","hiddenEdgeColor","PerspectiveCamera","innerWidth","innerHeight","CubeTextureLoader","LineBasicMaterial","MeshPhongMaterial","roughness","depthTest","flatShading","side","FrontSide","emssive","specular","shininess","ground","PlaneBufferGeometry","rotation","addEventListener","onMove","onDown","initModel","createGUI","GUI","autoPlace","addFolder","jointParams","rc0","rc1","rc2","rc3","rc4","rc5","a0","listen","a1","a2","a3","a4","a5","open","asTCP","updateTarget","onChange","close","getRandom","max","floor","random","stepParams","nt","multiplyScalar","apply","appendChild","tp","oca0","fi","atan2","a1a0","d","apha","sqrt","q0","r","s","D","q2","q1","cos","sin","robotstateGen","rs","suborigin","ss","Object","assign","rc","j","String","event","changedTouches","pageX","pageY","clientX","clientY","Textinfo","toFixed","html","delta","Date","now","render","onWindowResize","aspect","updateProjectionMatrix","context"],"mappings":"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","sourcesContent":["import * as THREE from '../../threejs/src/Three.js';\r\n//import SceneSubject from './SceneSubject';\r\nimport GeneralLights from './GeneralLights';\r\nimport * as dat from 'dat.gui';\r\nimport { OBJLoader } from '../../threejs/examples/jsm/loaders/OBJLoader.js';\r\n\r\nimport { EffectComposer } from '../../threejs/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from '../../threejs/examples/jsm/postprocessing/RenderPass.js';\r\nimport { FilmPass } from '../../threejs/examples/jsm/postprocessing/FilmPass.js';\r\nimport { BloomPass } from '../../threejs/examples/jsm/postprocessing/BloomPass.js';\r\n\r\nimport { ShaderPass } from '../../threejs/examples/jsm/postprocessing/ShaderPass.js';\r\nimport { SobelOperatorShader } from '../../threejs/examples/jsm/shaders/SobelOperatorShader.js';\r\nimport { OutlinePass } from '../../threejs/examples/jsm/postprocessing/OutlinePass.js';\r\n\r\nimport $ from 'jquery';\r\n\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\nconst textureLoader = new THREE.TextureLoader();\r\n\r\nclass RobotComponent{\r\n  constructor(state, scene){\r\n    this.state = state;\r\n    this.scene = scene;\r\n    this.buildComponents();\r\n  }\r\n  buildComponents(){ // including joint and object\r\n\r\n    let geo = new THREE.BoxBufferGeometry( this.state.size.x, this.state.size.y, this.state.size.z );\r\n    let mat = new THREE.MeshBasicMaterial( { color: 0xffff00, transparent: true, opacity: 0.6, depthWrite: false} );\r\n    let mesh = new THREE.Mesh( geo, mat );\r\n    let ml=[];\r\n    let ll=[];\r\n    geo.computeBoundingBox ();\r\n    geo.boundingBox.getSize(this.state.size);\r\n    //console.log(this.state.originWorldPoint);\r\n    this.state.originWorldPoint.x-= this.state.size.x*this.state.originScale.x;\r\n    this.state.originWorldPoint.y-=this.state.size.y*this.state.originScale.y;\r\n    this.state.originWorldPoint.z-=this.state.size.z*this.state.originScale.z;\r\n    //console.log(this.state.originWorldPoint);\r\n    mesh.position.add(this.state.originWorldPoint);\r\n    mesh.castShadow = mesh.receiveShadow = true;\r\n    this.scene.add(mesh);\r\n    ml.push(mesh);\r\n\r\n    // build joint\r\n    let sm = Math.min(...this.state.size.toArray());\r\n    let jgeo = new THREE.CylinderBufferGeometry( sm*0.5, sm*0.5, sm*0.5, 16 );\r\n    let jmat = new THREE.MeshBasicMaterial( { color: 0x0000ff, depthWrite: false} );\r\n    let jmesh = new THREE.Mesh( jgeo, jmat );\r\n    jmesh.castShadow = jmesh.receiveShadow = true;\r\n\r\n    if (this.state.jointVector.equals(new THREE.Vector3(0,0,1))) {jmesh.geometry.rotateX(90 * (Math.PI/180));}\r\n    else if (this.state.jointVector.equals(new THREE.Vector3(0,0,-1))) {jmesh.geometry.rotateX(-90 * (Math.PI/180));}\r\n    else if (this.state.jointVector.equals(new THREE.Vector3(1,0,0))) {jmesh.geometry.rotateZ(90 * (Math.PI/180));}\r\n    else if (this.state.jointVector.equals(new THREE.Vector3(-1,0,0))) {jmesh.geometry.rotateZ(-90 * (Math.PI/180));}\r\n\r\n    let jwp = this.state.originWorldPoint.clone().add(this.state.size.clone().multiply(this.state.jointScale));\r\n    jmesh.position.add(jwp);\r\n    this.scene.add(jmesh);\r\n    ml.push(jmesh);\r\n    this.state.meshList=ml;\r\n\r\n    this.state.jointWorldPoint = jwp;\r\n\r\n    let arrowHelper = new THREE.ArrowHelper( this.state.jointVector, this.state.jointWorldPoint, 250, 0xff0000);   \r\n    this.scene.add(arrowHelper);\r\n\r\n    ll.push(arrowHelper);\r\n    this.state.lineList=ll;\r\n\r\n    arrowHelper.userData= {Component: this};\r\n  }\r\n  rotate(a){\r\n    //console.log(a);\r\n    let q = new THREE.Quaternion();\r\n    q.setFromAxisAngle(this.state.jointVector.normalize(), a-(this.state.angle* Math.PI /180.0));\r\n    //let tempGroup = new THREE.Group();\r\n    this.state.meshList.forEach((v)=>{\r\n        //tempGroup.add(v);\r\n        v.applyQuaternion( q );\r\n        v.position.sub( this.state.jointWorldPoint );\r\n        v.position.applyQuaternion( q );\r\n        v.position.add( this.state.jointWorldPoint );\r\n    });\r\n    //console.log(this.state.jointVector);\r\n    this.state.lineList.forEach((v,i)=>{\r\n        //tempGroup.add(v);\r\n        v.applyQuaternion( q );\r\n        v.position.sub( this.state.jointWorldPoint );\r\n        v.position.applyQuaternion( q );\r\n        v.position.add( this.state.jointWorldPoint );\r\n\r\n        if (v.userData.Component.state.aid > this.state.aid){\r\n            v.userData.Component.state.jointWorldPoint = v.position.clone();\r\n            v.userData.Component.state.jointVector.applyQuaternion(q).clone();\r\n        }\r\n    });\r\n\r\n    this.state.lineList.forEach((v)=>{\r\n    });\r\n\r\n    this.state.angle=a*180.0/Math.PI;\r\n  }\r\n}\r\nconst arrows = {};\r\nfunction addArrow(name, from, to, color = 0xffff00, length = 10) {\r\n    if (arrows.hasOwnProperty(name)) {\r\n      //window.debug.scene.remove(arrows[name]);\r\n    }\r\n    //if (!window.debug.show) return\r\n    const toPoint = new THREE.Vector3(to[0], to[1], to[2]);\r\n    const origin = new THREE.Vector3(from[0], from[1], from[2]);\r\n    // length = length || toPoint.sub(origin).length()\r\n    // toPoint.normalize()\r\n    arrows[name] = new THREE.ArrowHelper(toPoint.sub(origin).normalize(), origin, length, color, 2, 1);\r\n    //window.debug.scene.add(arrows[name]);\r\n  }\r\n\r\n  function addVectorArrow(name, from, vector, color, length) {\r\n    addArrow(name, from, [from[0] + vector[0], from[1] + vector[1], from[2] + vector[2]], color, length);\r\n  }\r\n  const spheres = {};\r\n\r\n  function addSphere(name, position, color = 0xffff00, diameter = 30) {\r\n    if (spheres.hasOwnProperty(name)) {\r\n      //window.debug.scene.remove(spheres[name]);\r\n    }\r\n    //if (!window.debug.show) return;\r\n\r\n    const geometry = new THREE.SphereGeometry(diameter, 32, 32);\r\n    const material = new THREE.MeshBasicMaterial({\r\n      color,\r\n    });\r\n\r\n    spheres[name] = new THREE.Mesh(geometry, material);\r\n    spheres[name].position.set(position[0], position[1], position[2]);\r\n    //window.debug.scene.add(spheres[name]);\r\n  }\r\n\r\n// initiate\r\nexport default canvas => {\r\n    // objects\r\n    var robotmap, target, ikTask;\r\n    var stepValue = 0;\r\n    var tempstartTarget;\r\n    const UPPERSTEP = 200;\r\n    var request;\r\n    var loader;\r\n    var parmfont;\r\n    const ssnodeurl = 'https://spreadsheets.google.com/feeds/list/1l3DvxzJxmCPyk3TruBMCC_YXWEvRJXnkwaKcx41IoKA/1/public/values?alt=json';\r\n    const sscrvurl = 'https://spreadsheets.google.com/feeds/list/1l3DvxzJxmCPyk3TruBMCC_YXWEvRJXnkwaKcx41IoKA/2/public/values?alt=json';\r\n    const exeurl = 'https://script.google.com/macros/s/AKfycbyYhxPfFDvS1nPTuDg9n5SZLYwbzaD6zqVbBkVJzzEWDoWjW6B8/exec';\r\n    const ssnodeurledit = 'https://docs.google.com/spreadsheets/d/1l3DvxzJxmCPyk3TruBMCC_YXWEvRJXnkwaKcx41IoKA/edit?usp=sharing';\r\n\r\n    // abb irb2600 setting\r\n    const abbirb2600Config = {\r\n            jointLimit:\r\n            {'a0':[-180.0,180.0],\r\n             'a1':[-95.0-90,155.0-90],\r\n             'a2':[-180.0+90,75.0+90],\r\n             'a3':[-175.0,175.0],\r\n             'a4':[-120.0,120.0],\r\n             'a5':[-191.0,191.0]\r\n            },\r\n            r0: 445, \r\n            r1: 700,\r\n            r2: 0,\r\n            r3: 786,\r\n            r4: 0,\r\n            r5: 0,\r\n            p0:new THREE.Vector3(0,0,0),\r\n            p1:new THREE.Vector3(0,445,-150)\r\n        }\r\n    //var geos = new THREE.Group();\r\n    //var geoVmap, geoCrvmap;\r\n\r\n    var geoVmap =[];\r\n    var geoCmap=[];  \r\n    var geo, geoPts, geoLines;\r\n    var backgroundcube, text;\r\n    // as Three.Group = children[0] = frontface / children[1] = backface\r\n    var geoSelected;\r\n    var geoAll =[];\r\n    var geoFinished =[];\r\n    var geoPossible =[];\r\n    var geoLocked =[];\r\n    var cLocked =[];\r\n    // material\r\n    var t1, t2, uniforms;\r\n    var matColor, matFinColor, matPosColor, matShader, matWireframe, matGradient, matShaderSub, matHidden, matLine;\r\n    var matFinished, matFinishedBack, matPossible, matLocked, matPossibleBack, matFade, matFadeBack;\r\n    var matFinishedArray, matPossibleArray, matFadeArray;\r\n    var textloader = new THREE.FontLoader();\r\n    // renderer\r\n    var composer, outlinePass;\r\n    // control\r\n    var raycaster = new THREE.Raycaster();\r\n    var mouse = new THREE.Vector2();\r\n    var screen = new THREE.Vector2();\r\n    var pieceSelected = false;\r\n    var textFinished ='';\r\n    var texetAll='';\r\n\r\n    var nodeSize = 0.6;\r\n\r\n    var pipeDegree = 20; // default as 64\r\n    var pipeSize = 0.3;\r\n    var pipeRacial = 4;\r\n    var pipeClose = false;\r\n\r\n    // GUI\r\n    var gui, guiData, shading;\r\n    var tagratio=2.0;\r\n    var tagdist=1.0;\r\n    const clock = new THREE.Clock();\r\n    const screenDimensions = {\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        halfwidth: canvas.width*0.5,\r\n        halfheight: canvas.height*0.5\r\n    }\r\n    const pannelSize = {\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        halfwidth: canvas.width*0.5,\r\n        halfheight: canvas.height*0.5\r\n    }\r\n    var displayFolder, teamCallbackFolder, jointFolder, targetFolder, stepFolder;\r\n    var targetParams;\r\n    // ==== ROBOT ====\r\n    \r\n    const defaultstate={\r\n        aid:0,\r\n        originWorldPoint: new THREE.Vector3(0,0,0),\r\n        originScale: new THREE.Vector3(0,-0.5,0), // multiples with size, center as zero\r\n        size: new THREE.Vector3(),\r\n        jointWorldPoint: new THREE.Vector3(0,0,0),\r\n        jointsize: new THREE.Vector3(),\r\n        jointScale: new THREE.Vector3(0,-0.5,0), // multiples with size, center as zero\r\n        jointVector: new THREE.Vector3(0,1,0),\r\n        subjointScale: new THREE.Vector3(0,0.5,1), // multiples with size, center as zero\r\n        subjointVector: new THREE.Vector3(-1,0,0),    \r\n        meshList: [],\r\n        lineList: [],\r\n        //submeshGroup: new THREE.Group(),\r\n        angle:0\r\n    };\r\n    \r\n    var robotstate;\r\n    var geo;\r\n    // build\r\n    const scene = buildScene();\r\n    const camera = buildCamera(screenDimensions);\r\n    const renderer = buildRender(screenDimensions);\r\n    \r\n    const controls = new OrbitControls( camera, renderer.domElement );\r\n    controls.target.set( 0, 1, 0 );\r\n    controls.update();\r\n\r\n    const customContainer = document.getElementById('canvas-gui-container');\r\n    const lights = GeneralLights(scene);\r\n    createSceneSubjects(scene, uniforms);\r\n\r\n    // textture\r\n    textureLoader.setPath( './assets/textures/sprites/' ).load( 'spark1.png', (tex1)=>{\r\n\r\n        t1 = tex1;\r\n        uniforms ={pointTexture: { value: t1 }};\r\n\r\n    },( xhr1 ) =>{\r\n        console.log( (xhr1.loaded / xhr1.total * 100) + '% loaded' );\r\n    },( xhr1 ) =>{\r\n        console.log( 'An error happened' );\r\n    });\r\n\r\n    function buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color('#a0a0a0');\r\n        scene.fog = new THREE.Fog( 0xa0a0a0, 10, 9000 );\r\n        return scene;\r\n    }\r\n\r\n    function buildRender({ width, height }) {\r\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true });\r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.localClippingEnabled = false;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n        renderer.autoClear = false;\r\n        renderer.toneMapping = THREE.ReinhardToneMapping;\r\n\r\n        // post\r\n        \r\n        composer = new EffectComposer( renderer );\r\n\r\n        var renderPass = new RenderPass( scene, camera );\r\n        composer.addPass( renderPass );\r\n        \r\n        outlinePass = new OutlinePass( new THREE.Vector2( width, height ), scene, camera );\r\n\r\n        outlinePass.edgeStrength = 2.0\r\n        outlinePass.edgeGlow = 0.0;\r\n        outlinePass.edgeThickness = 0.7;\r\n        outlinePass.pulsePeriod = 0;\r\n        outlinePass.visibleEdgeColor.set( '#ff0000' );\r\n        outlinePass.hiddenEdgeColor.set( '#190a05' );\r\n\r\n        composer.addPass( outlinePass );\r\n      \r\n        return renderer;\r\n    }\r\n\r\n    // input function    \r\n\r\n    function buildCamera({ width, height }) {\r\n        const camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 100, 5000 );\r\n        camera.position.set( 1800, 2400, 1800 );       \r\n        return camera;\r\n    }\r\n\r\n    function createSceneSubjects(scene , uniforms) {\r\n        // material 1\r\n\r\n        backgroundcube = new THREE.CubeTextureLoader()\r\n                    .setPath( './assets/textures/cube/pisa/' )\r\n                    .load( [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ] );\r\n        matLine = new THREE.LineBasicMaterial( { color : 0xff00ff } );\r\n        matFade = new THREE.MeshPhongMaterial( { \r\n            color: 0xeeeeee, \r\n            transparent: true,\r\n            opacity: 0.7,\r\n            roughness: 0.9,\r\n            depthTest: true,\r\n            depthWrite: true,\r\n            flatShading:true,\r\n            side: THREE.FrontSide\r\n        } );\r\n\r\n        matFinished = new THREE.MeshPhongMaterial( { \r\n            color: 0x21ce94,\r\n            emssive: 0x0,\r\n            specular:0x111111,\r\n            shininess: 30,\r\n            roughness: 0.9,\r\n            depthTest:true,\r\n            depthWrite:true,\r\n            //envMap: backgroundcube,\r\n            flatShading:true,\r\n            side: THREE.FrontSide\r\n        });\r\n   \r\n\r\n        // background     \r\n        var ground = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry( 12000, 12000, 1, 1 ),\r\n            new THREE.MeshPhongMaterial( { color: 0x999999, shininess: 150, depthWrite: false } )\r\n        );        \r\n\r\n        ground.rotation.x = - Math.PI / 2; // rotates X/Y to X/Z\r\n        ground.receiveShadow = true;\r\n        //ground.name='ground';          \r\n        scene.add( ground );\r\n\r\n        //scene.add(THREESimulationRobot);\r\n\r\n        window.addEventListener( 'mousemove', onMove );\r\n        window.addEventListener( 'mousedown', onDown, false );\r\n\r\n        // subject\r\n        initModel(scene);\r\n        // create GUI\r\n        createGUI();  \r\n                \r\n    }\r\n    \r\n    function createGUI(){\r\n        //GUI\r\n        //if ( gui ) gui.destroy();\r\n\r\n        gui = new dat.GUI({ autoPlace: false });\r\n\r\n\r\n        // display floder\r\n        jointFolder = gui.addFolder( 'Rotate' );\r\n        var jointParams = {\r\n            // tagdist\r\n            \r\n                get 'a0'() {\r\n                    return robotmap.rc0.state.angle;\r\n                },\r\n                set 'a0'( v ) {\r\n                    robotmap.rc0.rotate(v*Math.PI/180);\r\n                },\r\n                get 'a1'() {\r\n                    return robotmap.rc1.state.angle;\r\n                },\r\n                set 'a1'( v ) {\r\n                    robotmap.rc1.rotate(v*Math.PI/180);\r\n                },\r\n                get 'a2'() {\r\n                    return robotmap.rc2.state.angle;\r\n                },\r\n                set 'a2'( v ) {\r\n                    robotmap.rc2.rotate(v*Math.PI/180);\r\n                },\r\n                get 'a3'() {\r\n                    return robotmap.rc3.state.angle;\r\n                },\r\n                set 'a3'( v ) {\r\n                    robotmap.rc3.rotate(v*Math.PI/180);\r\n                },\r\n                get 'a4'() {\r\n                    return robotmap.rc4.state.angle;\r\n                },\r\n                set 'a4'( v ) {\r\n                    robotmap.rc4.rotate(v*Math.PI/180);\r\n                },\r\n                get 'a5'() {\r\n                    return robotmap.rc5.state.angle;\r\n                },\r\n                set 'a5'( v ) {\r\n                    robotmap.rc5.rotate(v*Math.PI/180);\r\n                }\r\n\r\n        };\r\n        // abb irb 2600 limitation\r\n        jointFolder.add(jointParams, 'a0', abbirb2600Config.jointLimit.a0[0],abbirb2600Config.jointLimit.a0[1]).listen();\r\n        jointFolder.add(jointParams, 'a1', abbirb2600Config.jointLimit.a1[0],abbirb2600Config.jointLimit.a1[1]).listen();\r\n        jointFolder.add(jointParams, 'a2', abbirb2600Config.jointLimit.a2[0],abbirb2600Config.jointLimit.a2[1]).listen();\r\n        jointFolder.add(jointParams, 'a3', abbirb2600Config.jointLimit.a3[0],abbirb2600Config.jointLimit.a3[1]).listen();\r\n        jointFolder.add(jointParams, 'a4', abbirb2600Config.jointLimit.a4[0],abbirb2600Config.jointLimit.a4[1]).listen();\r\n        jointFolder.add(jointParams, 'a5', abbirb2600Config.jointLimit.a5[0],abbirb2600Config.jointLimit.a5[1]).listen();\r\n        //jointFolder.add(jointParams, 'a1', 0,360);\r\n        jointFolder.open();\r\n\r\n        // target floder\r\n        targetFolder = gui.addFolder( 'Target' );\r\n        targetParams = {\r\n            // tagdist\r\n            \r\n                get 'x'() {\r\n                    return target.position.x;\r\n                },\r\n                set 'x'( v ) {\r\n                    target.position.x=v;\r\n                    if (targetParams.asTCP) updateTarget(target.position);\r\n                },\r\n                get 'y'() {\r\n                    return target.position.y;\r\n                },\r\n                set 'y'( v ) {\r\n                    target.position.y=v;\r\n                    if (targetParams.asTCP) updateTarget(target.position);\r\n                },\r\n                get 'z'() {\r\n                    return target.position.z;\r\n                },\r\n                set 'z'( v ) {\r\n                    target.position.z=v;\r\n                    if (targetParams.asTCP) updateTarget(target.position);\r\n                },\r\n                asTCP: true\r\n        };\r\n        targetFolder.add(targetParams, 'x', -200,600).listen();\r\n        targetFolder.add(targetParams, 'y', 1000,1500).listen();\r\n        targetFolder.add(targetParams, 'z', 600,1000).listen();\r\n        targetFolder.add(targetParams, 'asTCP').listen().onChange(()=>{\r\n          if (targetParams.asTCP){\r\n            stepFolder.close();\r\n            updateTarget(target.position);\r\n          }else{\r\n            stepFolder.open();\r\n            \r\n            const getRandom = (min, max)=>{\r\n              return Math.floor(Math.random()*(max-min+1))+min\r\n            }\r\n            // make sure target and destination are different\r\n            target.position.x += getRandom(-200,200);\r\n            target.position.y += getRandom(-200,200);\r\n            target.position.z += getRandom(-200,200);\r\n\r\n            tempstartTarget = robotmap.rc5.state.jointWorldPoint.clone();\r\n          }\r\n        });\r\n        targetFolder.open();\r\n\r\n        \r\n\r\n        stepFolder = gui.addFolder( 'Step' );\r\n        var stepParams = {\r\n                get 'animate'() {\r\n                    return stepValue;\r\n                },\r\n                set 'animate'( v ) {\r\n                    stepValue = v;\r\n                    let nt = tempstartTarget.clone().add(target.position.clone().sub(tempstartTarget).multiplyScalar(1.0*stepValue/UPPERSTEP));\r\n                    updateTarget(nt);\r\n                    //console.log(nt);\r\n                    //;\r\n                },\r\n                apply: ()=>{\r\n                    \r\n                }\r\n        };\r\n        stepFolder.add(stepParams, 'animate', 0, UPPERSTEP).listen();\r\n        stepFolder.add(stepParams,'apply');\r\n        //stepFolder.open();\r\n\r\n        updateTarget(target.position);\r\n        customContainer.appendChild(gui.domElement);\r\n    }\r\n    // only upgrade when asTCP === true\r\n    function updateTarget(tp){\r\n        \r\n        // 幾何求解\r\n        // 假設目前無末端執行器\r\n        // a5 position > 只與 q0 q1 q2 有關 > 先取得R30 >\r\n        // R = R30*R63 > 可取得 q3 q4 q5\r\n\r\n        // 手臂投影至 Xi-1/Zi-1 平面 求得 qi\r\n        // O為target(ox,oy,oz) 減去 a0 position 之向量\r\n        // q0 = Atan(ox,oz) 取 水平 部分 (javascript y 為垂直)\r\n        let oca0 = tp.clone().sub(abbirb2600Config.p0);\r\n        //\r\n        // let q0 = Math.atan(oca0.x,oca0.z); 若無左右臂狀態\r\n        // 但 abbirb 2600 為 左臂結構 還需減去一臂長偏差向量 q0 = fi -apha\r\n        let fi = Math.atan2(oca0.x,oca0.z);\r\n        // apha = atan(sqrt(ox*ox+oz*oz-d*d), d) > 其中 d 為 a0 a1 的水平投影距離 > dv 的 x z 畢氏定理 可得\r\n        let a1a0 = abbirb2600Config.p1.clone().sub(abbirb2600Config.p0);\r\n        let d = a1a0.z;\r\n        \r\n        let apha = Math.atan2(Math.sqrt(oca0.x*oca0.x + oca0.z*oca0.z - d*d),d);\r\n\r\n        let q0 = fi - apha + Math.PI/2;\r\n        \r\n\r\n        // 連稈 r0 abbirb2600Config.r0 基座\r\n        // 連稈 r1 abbirb2600Config.r1 \r\n        // 連稈 r3 abbirb2600Config.r3 \r\n        // 先求q3 > -cos(q3)\r\n        //let oca1 = target.position.clone().sub(robotmap.rc1.state.jointWorldPoint); // a1點 與 target z 深度  \r\n        // r*r = oca1.z*oca1.z+oca1.y*oca1.y -d*d\r\n        // D = (r*r + s*s -r1*r1 - r3*r3) / 2*r1*r3\r\n        robotmap['rc'+0].rotate(q0);\r\n        //let r = target.position.clone().sub(robotmap.rc1.state.jointWorldPoint);\r\n        let r = Math.sqrt(oca0.x*oca0.x+oca0.z*oca0.z-d*d);\r\n        //console.log(r.x);\r\n        \r\n        let s = tp.y-abbirb2600Config.r0;\r\n\r\n        let D = ((r*r+s*s) - (abbirb2600Config.r1*abbirb2600Config.r1) -(abbirb2600Config.r3*abbirb2600Config.r3)) / (2*abbirb2600Config.r1*abbirb2600Config.r3);\r\n        let q2 = [Math.atan2(D, Math.sqrt(1-D*D)), Math.atan2(D, -Math.sqrt(1-D*D))];\r\n\r\n        let q1 = [\r\n          Math.atan2(r, s) - Math.atan2(abbirb2600Config.r1+abbirb2600Config.r3*Math.cos(q2[0]), abbirb2600Config.r3*Math.sin(q2[0]))+Math.atan2(r,s),\r\n          Math.atan2(r, s) - Math.atan2(abbirb2600Config.r1+abbirb2600Config.r3*Math.cos(q2[1]), abbirb2600Config.r3*Math.sin(q2[1]))\r\n            ];\r\n        console.log(q1[0]*180/Math.PI);\r\n        robotmap['rc'+1].rotate(q1[0]);\r\n        robotmap['rc'+2].rotate(q2[0]);\r\n        /*\r\n        if ( q1[0] > abbirb2600Config.jointLimit.a1[0] || q1[0] < abbirb2600Config.jointLimit.a1[1]){\r\n          robotmap['rc'+1].rotate(q1[0]);\r\n          robotmap['rc'+2].rotate(q2[0]);\r\n        }else{\r\n          robotmap['rc'+1].rotate(q1[1]);\r\n          robotmap['rc'+2].rotate(q2[1]);\r\n        }\r\n        */\r\n        //robotmap['rc'+2].rotate(q2[0]);\r\n        \r\n        /*\r\n        // q0,q1,q2 > R30 > 由 R30 求 R63\r\n        // 球型手腕 > R63 = Rz*q3*Ry*q4*Rz*q5 > 轉制矩陣 > 尤拉角公式算 q3, q4, q5 > \r\n        // 需要 目標點 t 所在 R 尤拉變化矩陣 t.normalMatrix\r\n        // | r11  r12  r13 |   | t對坐標軸X的X分量matrix.elements[0] t對坐標軸Y的X分量matrix.elements[3] t對坐標軸Y的X分量matrix.elements[6] |                          \r\n        // | r21  r22  r23 | = | t對坐標軸Y的Y分量matrix.elements[1] t對坐標軸Y的Y分量matrix.elements[4] t對坐標軸Y的Y分量matrix.elements[7] | > javascript Y > Z 交換 \r\n        // | r31  r32  r33 |   | t對坐標軸Z的Z分量matrix.elements[2] t對坐標軸Y的Z分量matrix.elements[5] t對坐標軸Y的Z分量matrix.elements[8] |\r\n        // q5 = atan2 (sin(q1)*r13) \r\n        let R = {\r\n            r11:target.normalMatrix.elements[0],r12:target.normalMatrix.elements[3],r13:target.normalMatrix.elements[6],\r\n            r21:target.normalMatrix.elements[1],r22:target.normalMatrix.elements[4],r23:target.normalMatrix.elements[7],\r\n            r31:target.normalMatrix.elements[2],r32:target.normalMatrix.elements[5],r33:target.normalMatrix.elements[8],\r\n        }\r\n        // q5 = atan2(sin(q0)*r13 -cos(q0)*r23, +-sqrt(1-pow(sin(q0)*r13-cos(q0)*r23, 2)))\r\n        //\r\n        let q4 = [Math.atan2(Math.sin(q0)*R.r13 -Math.cos(q0)*R.r23, Math.sqrt(1-Math.pow(Math.sin(q0)*R.r13-Math.cos(q0)*R.r23, 2))),\r\n                Math.atan2(Math.sin(q0)*R.r13 -Math.cos(q0)*R.r23, -Math.sqrt(1-Math.pow(Math.sin(q0)*R.r13-Math.cos(q0)*R.r23, 2)))];\r\n        //console.log(R.r11);\r\n        let q3,q5;\r\n        // q3 = atan2 ( cos(q0)*cos(q1+q2)*r13 + sin(q0)*cos(q1+q2)*r23 + sin(q1+q2)*r33 , -cos(q0)*sin(q1+q2)*r13 + sin(q0)*sin(q1+q2)*r23 + cos(q1+q2)*r33);\r\n        \r\n        if (q4[0]!=q4[1]){\r\n            if (Math.sin(q4[0])>0){\r\n                // q3\r\n                q3 = Math.atan2 ( Math.cos(q0)*Math.cos(q1+q2)*R.r13 + Math.sin(q0)*Math.cos(q1+q2)*R.r23 + Math.sin(q1+q2)*R.r33 , \r\n                            -Math.cos(q0)*Math.sin(q1+q2)*R.r13 + Math.sin(q0)*Math.sin(q1+q2)*R.r23 + Math.cos(q1+q2)*R.r33);\r\n                // q5 = atan2(-sin(q0)*r11+cos(q0)*r21, sin(q0)*r12-ccos(q0)*r22)\r\n                q5 = Math.atan2(-Math.sin(q0)*R.r11+Math.cos(q0)*R.r21, Math.sin(q0)*R.r12-Math.cos(q0)*R.r22);\r\n            }else if  (Math.sin(q4[0])<0){\r\n                // q3\r\n                q3 = Math.atan2 ( -Math.cos(q0)*Math.cos(q1+q2)*R.r13 - Math.sin(q0)*Math.cos(q1+q2)*R.r23 - Math.sin(q1+q2)*R.r33 , \r\n                            Math.cos(q0)*Math.sin(q1+q2)*R.r13 + Math.sin(q0)*Math.sin(q1+q2)*R.r23 - Math.cos(q1+q2)*R.r33);\r\n                // q5 = atan2(sin(q0)*r11-cos(q0)*r21, -sin(q0)*r12+ccos(q0)*r22)\r\n                q5 = Math.atan2(Math.sin(q0)*R.r11-Math.cos(q0)*R.r21, -Math.sin(q0)*R.r12+Math.cos(q0)*R.r22);\r\n            }\r\n        }\r\n        */\r\n    }\r\n\r\n    function robotstateGen(v,scene){\r\n        let rs={};\r\n        let suborigin = new THREE.Vector3(0,0,0);\r\n        if (v>0){\r\n            for (let i=0;i<v;i+=1){\r\n                let ss = Object.assign({}, defaultstate); // 深copy\r\n                ss.aid=i;\r\n                if (i==0){\r\n                    ss.size=new THREE.Vector3( 275*2,445.0,255.7*2);\r\n                    ss.jointVector=new THREE.Vector3(0,1,0);\r\n                    ss.subjointScale = new THREE.Vector3(0,0.5, -150.0/275/2);\r\n                }else if(i==1){\r\n                    ss.size=new THREE.Vector3( 150,700,255.7);\r\n                    ss.originWorldPoint=suborigin;\r\n                    ss.jointVector=new THREE.Vector3(1,0,0);\r\n                    ss.subjointScale=new THREE.Vector3(0 ,0.5,0);                    \r\n                }else if(i==2){\r\n                    ss.size=new THREE.Vector3(275,115.0*2, 238.4+190.6);\r\n                    ss.originWorldPoint=suborigin;\r\n                    ss.originScale=new THREE.Vector3(-0.5,0, 0);\r\n                    ss.jointScale=new THREE.Vector3(-0.5,0,0);\r\n                    ss.jointVector=new THREE.Vector3(-1,0,0);\r\n                    ss.subjointScale=new THREE.Vector3(0 ,0,0);\r\n                }else if(i==3){\r\n                    ss.size=new THREE.Vector3(187.0,135.0, 786.0);\r\n                    ss.originWorldPoint=suborigin;\r\n                    ss.originScale=new THREE.Vector3(0,0, -0.5);\r\n                    ss.jointScale=new THREE.Vector3(0,0,-0.5);\r\n                    ss.jointVector=new THREE.Vector3(0,0,1);\r\n                    ss.subjointScale=new THREE.Vector3(0 ,0,0.5);\r\n                }else if(i==4){\r\n                    ss.size=new THREE.Vector3(85.0*2,85.0*2, 85.0*2);\r\n                    ss.originWorldPoint=suborigin;\r\n                    ss.originScale=new THREE.Vector3(0,0, 0);\r\n                    ss.jointScale=new THREE.Vector3(0,0,0);\r\n                    ss.jointVector=new THREE.Vector3(-1,0,0);\r\n                    ss.subjointScale=new THREE.Vector3(0 ,0,0.5);\r\n                }else if(i==5){\r\n                    ss.size=new THREE.Vector3(98.0,98.0, 98.0);\r\n                    ss.originWorldPoint=suborigin;\r\n                    ss.originScale=new THREE.Vector3(0,0, -0.5);\r\n                    ss.jointScale=new THREE.Vector3(0,0,-0.5);\r\n                    ss.jointVector=new THREE.Vector3(0,0,1);\r\n                }\r\n                // out screen as +x\r\n                // right as +z\r\n                // up as +y \r\n                var rc = new RobotComponent(ss, scene);\r\n\r\n                suborigin = rc.state.originWorldPoint.clone().add(rc.state.subjointScale.clone().multiply(rc.state.size));\r\n                \r\n                for(let j=i-1; j>=0; j-=1){\r\n\r\n                    rc.state.meshList.forEach((v)=>{\r\n                        rs['rc'+String(j)].state.meshList.push(v);\r\n                    });\r\n                    rc.state.lineList.forEach((v)=>{\r\n                        rs['rc'+String(j)].state.lineList.push(v);\r\n                    });\r\n                } \r\n                \r\n                rs['rc'+String(i)] = rc;\r\n\r\n            }\r\n        }\r\n        return rs;\r\n    }\r\n\r\n\r\n    function initModel(scene){\r\n\r\n        // build robot system\r\n        robotmap = robotstateGen(6,scene);\r\n\r\n        // target\r\n        target = new THREE.Mesh(new THREE.BoxBufferGeometry(20,20,20),new THREE.MeshBasicMaterial( { color: 0x0000ff, depthWrite: false} ));\r\n        //target.rotateX(60*Math.PI/180.0);\r\n        target.position.add(new THREE.Vector3(-100,1200,800));\r\n        //console.log(target.position);\r\n        scene.add(target);\r\n\r\n    }\r\n    function onMove(event){\r\n        //event.preventDefault();\r\n        var x, y;\r\n        if ( event.changedTouches ) {\r\n            x = event.changedTouches[ 0 ].pageX;\r\n            y = event.changedTouches[ 0 ].pageY;\r\n        } else {\r\n            x = event.clientX;\r\n            y = event.clientY;\r\n\r\n            screen.x = event.pageX;\r\n            screen.y = event.pageY;\r\n        }\r\n        \r\n        mouse.x = ( x / window.innerWidth) * 2 - 1;\r\n        mouse.y = - ( y / window.innerHeight) * 2 + 1;\r\n        \r\n    }\r\n\r\n    function onDown(event){\r\n\r\n    }\r\nfunction Textinfo(){\r\n    //$(document).ready(()=>{\r\n\r\n      let textFinished = 'ABB irb2600 Configures'+'<br><br>'+\r\n      'jointR0: '+ abbirb2600Config.r0+'<br>'+\r\n      'jointR1: '+ abbirb2600Config.r1+'<br>'+\r\n      'jointR2: '+ abbirb2600Config.r2+'<br>'+\r\n      'jointR3: '+ abbirb2600Config.r3+'<br>'+\r\n      'jointR4: '+ abbirb2600Config.r4+'<br>'+\r\n      'jointR5: '+ abbirb2600Config.r5+'<br><br>'+\r\n      'jointP0: '+ robotmap.rc0.state.jointWorldPoint.x.toFixed(2)+', '+\r\n                   robotmap.rc0.state.jointWorldPoint.y.toFixed(2)+', '+\r\n                   robotmap.rc0.state.jointWorldPoint.z.toFixed(2)+'<br>'+\r\n      'jointR1: '+ robotmap.rc1.state.jointWorldPoint.x.toFixed(2)+', '+\r\n                   robotmap.rc1.state.jointWorldPoint.y.toFixed(2)+', '+\r\n                   robotmap.rc1.state.jointWorldPoint.z.toFixed(2)+'<br>'+\r\n      'jointR2: '+ robotmap.rc2.state.jointWorldPoint.x.toFixed(2)+', '+\r\n                   robotmap.rc2.state.jointWorldPoint.y.toFixed(2)+', '+\r\n                   robotmap.rc2.state.jointWorldPoint.z.toFixed(2)+'<br>'+\r\n      'jointR3: '+ robotmap.rc3.state.jointWorldPoint.x.toFixed(2)+', '+\r\n                   robotmap.rc3.state.jointWorldPoint.y.toFixed(2)+', '+\r\n                   robotmap.rc3.state.jointWorldPoint.z.toFixed(2)+'<br>'+\r\n      'jointR4: '+ robotmap.rc4.state.jointWorldPoint.x.toFixed(2)+', '+\r\n                   robotmap.rc4.state.jointWorldPoint.y.toFixed(2)+', '+\r\n                   robotmap.rc4.state.jointWorldPoint.z.toFixed(2)+'<br>'+\r\n      'jointR5: '+ robotmap.rc5.state.jointWorldPoint.x.toFixed(2)+', '+\r\n                   robotmap.rc5.state.jointWorldPoint.y.toFixed(2)+', '+\r\n                   robotmap.rc5.state.jointWorldPoint.z.toFixed(2);\r\n\r\n      $('#infoProgress').html(()=>{\r\n                return textFinished;\r\n            });\r\n\r\n            \r\n/*\r\n            if (geoSelected.length>0){\r\n                if (geoSelected[0].name){\r\n                    textFinished += geoSelected[0].name+'<br>';\r\n\r\n                    let dstr='';\r\n                    let dtol=0.0;\r\n                    let nsv = new THREE.Vector3();\r\n                    geoSelected[0].userData.nodes.forEach((val,i)=>{\r\n                    if (i%4==0){ textFinished += '<br>'; }\r\n                    textFinished += '<button id=\"node_'+val+'\" class=\"ui mini posstive button\">n'+val+'</button>';\r\n                    //record for dist\r\n                    if (i>0){\r\n                        let v = parseFloat(geoSelected[0].userData.disteach[i-1]);\r\n                        dstr += 'n'+geoSelected[0].userData.nodes[i-1] + ' to n' + \r\n                                    val + ' = ' + v+' mm | '+(dtol+=v).toFixed(3)+' mm<br>';\r\n                            \r\n                    }\r\n                    geoVmap[val].userData.tag.visible=true;\r\n                    });\r\n                    textFinished += '<br><br><div style=\"color:red\">' + dstr+'</div>';\r\n                }else{\r\n                    textFinished += 'Nothing selected...';\r\n                }\r\n            }else{\r\n                textFinished += 'Nothing selected...';\r\n            }\r\n\r\n            $('#infoProgress').html(()=>{\r\n                return textFinished;\r\n            });\r\n            $('#infoCanvas').html(()=>{\r\n                return nodeText;\r\n            });\r\n        });\r\n    }\r\n  */\r\n  //});\r\n}\r\n    function update() {\r\n        lights.update();\r\n\r\n        var delta = Date.now()*0.0015;\r\n        // postrender\r\n        composer.render();\r\n        Textinfo();\r\n    }\r\n\r\n    function onWindowResize() {\r\n        const { width, height } = canvas;\r\n        \r\n        screenDimensions.width = width;\r\n        screenDimensions.height = height;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n        \r\n        renderer.setSize(width, height);\r\n        composer.setSize(width,  height);\r\n\r\n        pannelSize.width = renderer.context.canvas.width;\r\n        pannelSize.height = renderer.context.canvas.height;\r\n        pannelSize.halfwidth = renderer.context.canvas.width*0.5;\r\n        pannelSize.halfwidth = renderer.context.canvas.height*0.5;\r\n\r\n    }\r\n\r\n    return {\r\n        update,\r\n        onWindowResize\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}