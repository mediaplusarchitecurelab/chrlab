{"ast":null,"code":"var _jsxFileName = \"H:\\\\chrlab\\\\src\\\\component\\\\panelComponent\\\\sstablepanelComponent.js\";\nimport React from 'react';\nimport { Button, Header, Table, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components'; // stlyed \n//======================panel======================\n\nconst SSTablePanelContain = styled.div`\n    width:100%;\n    padding:1.5em 1.5em 1.5em 1.5em;\n    top: 1.5em;\n    overflow: auto;\n    height:65vh;\n    .tablecontent{\n      text-align:justify;\n    }\n    .tabletitle{\n      background-color:YellowGreen;\n    }\n    .tableheader{\n      background-color:Teal;\n      color:White;\n    }\n\t`;\n\nclass SSTablePanelComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.panelrender = () => {\n      let til = this.state.activedata.title;\n      let typ = this.state.activedata.type;\n      let cont = this.state.contentdata;\n      let panelcontent = [];\n      let headercont = [];\n      let itemcont = [];\n\n      if (cont !== null) {\n        // header\n        for (let i = 0; i < cont.header.length; i += 1) {\n          headercont.push( /*#__PURE__*/React.createElement(Table.Cell, {\n            key: `${til}-header-${i}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 27\n            }\n          }, cont.header[i]));\n        } // item\n\n\n        for (let i = 0; i < cont.week.length; i += 1) {\n          if (cont.week[i][0] === 'W') {\n            // 全行事曆\n            if (typ === \"sstableall\") {\n              /*\r\n              let docitem = ()=>{\r\n                if (cont.documentpdf[i]===null){return null;}\r\n                else{\r\n                  return\r\n                    (<Table.Cell key={`${til}-documentpdf-${i}`}>\r\n                      \r\n                    </Table.Cell>);\r\n                }\r\n              };\r\n              */\n              itemcont.push( /*#__PURE__*/React.createElement(Table.Row, {\n                width: 10,\n                key: `${til}-week-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-week-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }\n              }, cont.week[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-school-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }\n              }, cont.school[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 2,\n                key: `${til}-teacher-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }\n              }, cont.teacher[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-documentpdf-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }\n              }, cont.documentpdf[i] === '' ? null : /*#__PURE__*/React.createElement(Button, {\n                size: \"mini\",\n                animated: true,\n                onClick: () => {\n                  window.open(`${cont.documentpdf[i]}`, '_blank');\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(Button.Content, {\n                size: \"mini\",\n                visible: true,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(Icon, {\n                name: \"clipboard outline\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 61\n                }\n              })), /*#__PURE__*/React.createElement(Button.Content, {\n                size: \"mini\",\n                hidden: true,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(Icon, {\n                name: \"arrow right\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 60\n                }\n              })))), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-member1-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }\n              }, cont.member1[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-member2-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }\n              }, cont.member2[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-member3-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }\n              }, cont.member3[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-member4-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }\n              }, cont.member4[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                width: 1,\n                key: `${til}-member5-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }\n              }, cont.member5[i]))); // 各組周記\n            } else if (typ === \"sstableteam\") {\n              itemcont.push( /*#__PURE__*/React.createElement(Table.Row, {\n                key: `${til}-week-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Table.Cell, {\n                key: `${til}-week-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }\n              }, cont.week[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                key: `${til}-content-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }\n              }, cont.content[i]), /*#__PURE__*/React.createElement(Table.Cell, {\n                key: `${til}-urlpdf-${i}`,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }\n              }, cont.url[i] === '' ? null : /*#__PURE__*/React.createElement(Button, {\n                size: \"mini\",\n                animated: true,\n                onClick: () => {\n                  window.open(`${cont.url[i]}`, '_blank');\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(Button.Content, {\n                size: \"mini\",\n                visible: true,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(Icon, {\n                name: \"clipboard outline\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 61\n                }\n              })), /*#__PURE__*/React.createElement(Button.Content, {\n                size: \"mini\",\n                hidden: true,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(Icon, {\n                name: \"arrow right\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 60\n                }\n              }))))));\n            }\n          } else {\n            itemcont.push( /*#__PURE__*/React.createElement(Table.Row, {\n              key: `${til}-row-${i}`,\n              className: \"tabletitle\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Table.Cell, {\n              colSpan: \"9\",\n              textAlign: \"center\",\n              key: `${til}-week-${i}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }\n            }, cont.week[i])));\n          }\n        }\n\n        panelcontent.push( /*#__PURE__*/React.createElement(Header, {\n          as: \"h2\",\n          key: til,\n          style: {\n            fontFamily: 'Titillium Web'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }\n        }, til.toUpperCase()));\n        panelcontent.push( /*#__PURE__*/React.createElement(Table, {\n          striped: true,\n          className: \"tablecontent\",\n          key: `${til}-table`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Table.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Table.Row, {\n          className: \"tableheader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, headercont)), /*#__PURE__*/React.createElement(Table.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }\n        }, itemcont)));\n      }\n\n      return panelcontent;\n    };\n\n    this.state = {\n      width: 0,\n      height: 0,\n      activedata: this.props.activedata,\n      contentdata: this.props.contentdata\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  } // ==================RESIZE=======================\n\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  } // ==================LAYOUT=======================\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(SSTablePanelContain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, this.panelrender());\n  }\n\n}\n\nexport default SSTablePanelComponent;","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/sstablepanelComponent.js"],"names":["React","Button","Header","Table","Icon","styled","SSTablePanelContain","div","SSTablePanelComponent","Component","constructor","props","panelrender","til","state","activedata","title","typ","type","cont","contentdata","panelcontent","headercont","itemcont","i","header","length","push","week","school","teacher","documentpdf","window","open","member1","member2","member3","member4","member5","content","url","fontFamily","toUpperCase","width","height","updateWindowDimensions","bind","setState","innerWidth","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Header, Table, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\n\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst SSTablePanelContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: auto;\r\n    height:65vh;\r\n    .tablecontent{\r\n      text-align:justify;\r\n    }\r\n    .tabletitle{\r\n      background-color:YellowGreen;\r\n    }\r\n    .tableheader{\r\n      background-color:Teal;\r\n      color:White;\r\n    }\r\n\t`;\r\n \r\nclass SSTablePanelComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activedata: this.props.activedata,\r\n        contentdata: this.props.contentdata\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  // ==================LAYOUT=======================\r\n\r\n  panelrender =()=>{\r\n      let til = this.state.activedata.title;\r\n      let typ = this.state.activedata.type;\r\n      let cont = this.state.contentdata;\r\n      let panelcontent=[];\r\n\r\n      let headercont =[];\r\n      let itemcont =[];\r\n\r\n      if (cont!==null){        \r\n        \r\n        // header\r\n        for(let i=0;i<cont.header.length;i+=1){\r\n          headercont.push(<Table.Cell key={`${til}-header-${i}`} >{cont.header[i]}</Table.Cell>);\r\n        }\r\n        // item\r\n        for(let i=0;i<cont.week.length;i+=1){\r\n          if (cont.week[i][0]==='W'){\r\n            // 全行事曆\r\n            if (typ === \"sstableall\"){\r\n              /*\r\n              let docitem = ()=>{\r\n                if (cont.documentpdf[i]===null){return null;}\r\n                else{\r\n                  return\r\n                    (<Table.Cell key={`${til}-documentpdf-${i}`}>\r\n                      \r\n                    </Table.Cell>);\r\n                }\r\n              };\r\n              */\r\n              itemcont.push(\r\n                <Table.Row width={10} key={`${til}-week-${i}`}>\r\n                  <Table.Cell width={1} key={`${til}-week-${i}`}>{cont.week[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-school-${i}`}>{cont.school[i]}</Table.Cell>\r\n                  <Table.Cell width={2} key={`${til}-teacher-${i}`}>{cont.teacher[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-documentpdf-${i}`}>\r\n                    {cont.documentpdf[i]==='' ? null : \r\n                      <Button size='mini' animated onClick= { () => {window.open(`${cont.documentpdf[i]}`,'_blank'); }}>\r\n                        <Button.Content size='mini' visible><Icon name='clipboard outline' /></Button.Content>\r\n                        <Button.Content size='mini' hidden><Icon name='arrow right'/></Button.Content>\r\n                      </Button>}\r\n                  </Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member1-${i}`}>{cont.member1[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member2-${i}`}>{cont.member2[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member3-${i}`}>{cont.member3[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member4-${i}`}>{cont.member4[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member5-${i}`}>{cont.member5[i]}</Table.Cell>\r\n                </Table.Row>);\r\n              // 各組周記\r\n            }else if (typ === \"sstableteam\"){\r\n              itemcont.push(\r\n                <Table.Row key={`${til}-week-${i}`}>\r\n                  <Table.Cell key={`${til}-week-${i}`}>{cont.week[i]}</Table.Cell>\r\n                  <Table.Cell key={`${til}-content-${i}`}>{cont.content[i]}</Table.Cell>\r\n                  <Table.Cell key={`${til}-urlpdf-${i}`}>\r\n                    {cont.url[i]==='' ? null : \r\n                      <Button size='mini' animated onClick= { () => {window.open(`${cont.url[i]}`,'_blank'); }}>\r\n                        <Button.Content size='mini' visible><Icon name='clipboard outline' /></Button.Content>\r\n                        <Button.Content size='mini' hidden><Icon name='arrow right'/></Button.Content>\r\n                      </Button>}\r\n                  </Table.Cell>\r\n                </Table.Row>);\r\n            }\r\n            \r\n          }else{\r\n            itemcont.push(\r\n              <Table.Row key={`${til}-row-${i}`} className='tabletitle'>\r\n                <Table.Cell colSpan='9' textAlign='center' key={`${til}-week-${i}`} >{cont.week[i]}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          }\r\n        }\r\n\r\n        panelcontent.push(\r\n            <Header as='h2' key={til} style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n            );\r\n\r\n        panelcontent.push(\r\n            <Table striped className='tablecontent' key={`${til}-table`}>\r\n              <Table.Header>\r\n                <Table.Row className='tableheader'>\r\n                  {headercont}\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                  {itemcont}\r\n              </Table.Body>\r\n            </Table>\r\n        );\r\n      }\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n  render() {\r\n        \r\n    return (\r\n      <SSTablePanelContain>\r\n          {this.panelrender()}\r\n      </SSTablePanelContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default SSTablePanelComponent;\r\n"]},"metadata":{},"sourceType":"module"}