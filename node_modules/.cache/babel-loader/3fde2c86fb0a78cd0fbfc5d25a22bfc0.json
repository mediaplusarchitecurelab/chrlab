{"ast":null,"code":"import { Light } from './Light.js';\nimport { PointLightShadow } from './PointLightShadow.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLight(color, intensity, distance, decay) {\n  Light.call(this, color, intensity);\n  this.type = 'PointLight';\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      this.intensity = power / (4 * Math.PI);\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new PointLightShadow();\n}\n\nPointLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: PointLight,\n  isPointLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\nexport { PointLight };","map":{"version":3,"sources":["H:/chrlab/src/component/panelComponent/Canvas/threejs/src/lights/PointLight.js"],"names":["Light","PointLightShadow","PointLight","color","intensity","distance","decay","call","type","Object","defineProperty","get","Math","PI","set","power","undefined","shadow","prototype","assign","create","constructor","isPointLight","copy","source","clone"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA;;;;AAKA,SAASC,UAAT,CAAqBC,KAArB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,KAAjD,EAAyD;AAExDN,EAAAA,KAAK,CAACO,IAAN,CAAY,IAAZ,EAAkBJ,KAAlB,EAAyBC,SAAzB;AAEA,OAAKI,IAAL,GAAY,YAAZ;AAEAC,EAAAA,MAAM,CAACC,cAAP,CAAuB,IAAvB,EAA6B,OAA7B,EAAsC;AACrCC,IAAAA,GAAG,EAAE,YAAY;AAEhB;AACA;AACA,aAAO,KAAKP,SAAL,GAAiB,CAAjB,GAAqBQ,IAAI,CAACC,EAAjC;AAEA,KAPoC;AAQrCC,IAAAA,GAAG,EAAE,UAAWC,KAAX,EAAmB;AAEvB;AACA;AACA,WAAKX,SAAL,GAAiBW,KAAK,IAAK,IAAIH,IAAI,CAACC,EAAd,CAAtB;AAEA;AAdoC,GAAtC;AAiBA,OAAKR,QAAL,GAAkBA,QAAQ,KAAKW,SAAf,GAA6BX,QAA7B,GAAwC,CAAxD;AACA,OAAKC,KAAL,GAAeA,KAAK,KAAKU,SAAZ,GAA0BV,KAA1B,GAAkC,CAA/C,CAxBwD,CAwBN;;AAElD,OAAKW,MAAL,GAAc,IAAIhB,gBAAJ,EAAd;AAEA;;AAEDC,UAAU,CAACgB,SAAX,GAAuBT,MAAM,CAACU,MAAP,CAAeV,MAAM,CAACW,MAAP,CAAepB,KAAK,CAACkB,SAArB,CAAf,EAAiD;AAEvEG,EAAAA,WAAW,EAAEnB,UAF0D;AAIvEoB,EAAAA,YAAY,EAAE,IAJyD;AAMvEC,EAAAA,IAAI,EAAE,UAAWC,MAAX,EAAoB;AAEzBxB,IAAAA,KAAK,CAACkB,SAAN,CAAgBK,IAAhB,CAAqBhB,IAArB,CAA2B,IAA3B,EAAiCiB,MAAjC;AAEA,SAAKnB,QAAL,GAAgBmB,MAAM,CAACnB,QAAvB;AACA,SAAKC,KAAL,GAAakB,MAAM,CAAClB,KAApB;AAEA,SAAKW,MAAL,GAAcO,MAAM,CAACP,MAAP,CAAcQ,KAAd,EAAd;AAEA,WAAO,IAAP;AAEA;AAjBsE,CAAjD,CAAvB;AAsBA,SAASvB,UAAT","sourcesContent":["import { Light } from './Light.js';\nimport { PointLightShadow } from './PointLightShadow.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new PointLightShadow();\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { PointLight };\n"]},"metadata":{},"sourceType":"module"}