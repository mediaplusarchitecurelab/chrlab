{"ast":null,"code":"import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshDistanceMaterial';\n  this.referencePosition = new Vector3();\n  this.nearDistance = 1;\n  this.farDistance = 1000;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.fog = false;\n  this.setValues(parameters);\n}\n\nMeshDistanceMaterial.prototype = Object.create(Material.prototype);\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.referencePosition.copy(source.referencePosition);\n  this.nearDistance = source.nearDistance;\n  this.farDistance = source.farDistance;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  return this;\n};\n\nexport { MeshDistanceMaterial };","map":{"version":3,"sources":["D:/chrlab/src/component/panelComponent/Canvas/threejs/src/materials/MeshDistanceMaterial.js"],"names":["Material","Vector3","MeshDistanceMaterial","parameters","call","type","referencePosition","nearDistance","farDistance","skinning","morphTargets","map","alphaMap","displacementMap","displacementScale","displacementBias","fog","setValues","prototype","Object","create","constructor","isMeshDistanceMaterial","copy","source"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,oBAAT,CAA+BC,UAA/B,EAA4C;AAE3CH,EAAAA,QAAQ,CAACI,IAAT,CAAe,IAAf;AAEA,OAAKC,IAAL,GAAY,sBAAZ;AAEA,OAAKC,iBAAL,GAAyB,IAAIL,OAAJ,EAAzB;AACA,OAAKM,YAAL,GAAoB,CAApB;AACA,OAAKC,WAAL,GAAmB,IAAnB;AAEA,OAAKC,QAAL,GAAgB,KAAhB;AACA,OAAKC,YAAL,GAAoB,KAApB;AAEA,OAAKC,GAAL,GAAW,IAAX;AAEA,OAAKC,QAAL,GAAgB,IAAhB;AAEA,OAAKC,eAAL,GAAuB,IAAvB;AACA,OAAKC,iBAAL,GAAyB,CAAzB;AACA,OAAKC,gBAAL,GAAwB,CAAxB;AAEA,OAAKC,GAAL,GAAW,KAAX;AAEA,OAAKC,SAAL,CAAgBd,UAAhB;AAEA;;AAEDD,oBAAoB,CAACgB,SAArB,GAAiCC,MAAM,CAACC,MAAP,CAAepB,QAAQ,CAACkB,SAAxB,CAAjC;AACAhB,oBAAoB,CAACgB,SAArB,CAA+BG,WAA/B,GAA6CnB,oBAA7C;AAEAA,oBAAoB,CAACgB,SAArB,CAA+BI,sBAA/B,GAAwD,IAAxD;;AAEApB,oBAAoB,CAACgB,SAArB,CAA+BK,IAA/B,GAAsC,UAAWC,MAAX,EAAoB;AAEzDxB,EAAAA,QAAQ,CAACkB,SAAT,CAAmBK,IAAnB,CAAwBnB,IAAxB,CAA8B,IAA9B,EAAoCoB,MAApC;AAEA,OAAKlB,iBAAL,CAAuBiB,IAAvB,CAA6BC,MAAM,CAAClB,iBAApC;AACA,OAAKC,YAAL,GAAoBiB,MAAM,CAACjB,YAA3B;AACA,OAAKC,WAAL,GAAmBgB,MAAM,CAAChB,WAA1B;AAEA,OAAKC,QAAL,GAAgBe,MAAM,CAACf,QAAvB;AACA,OAAKC,YAAL,GAAoBc,MAAM,CAACd,YAA3B;AAEA,OAAKC,GAAL,GAAWa,MAAM,CAACb,GAAlB;AAEA,OAAKC,QAAL,GAAgBY,MAAM,CAACZ,QAAvB;AAEA,OAAKC,eAAL,GAAuBW,MAAM,CAACX,eAA9B;AACA,OAAKC,iBAAL,GAAyBU,MAAM,CAACV,iBAAhC;AACA,OAAKC,gBAAL,GAAwBS,MAAM,CAACT,gBAA/B;AAEA,SAAO,IAAP;AAEA,CArBD;;AAwBA,SAASb,oBAAT","sourcesContent":["import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n\nexport { MeshDistanceMaterial };\n"]},"metadata":{},"sourceType":"module"}