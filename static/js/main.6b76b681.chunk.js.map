{"version":3,"sources":["component/menuComponent/assets/logo.svg","component/Canvas/threejs/SceneSubject.js","component/Canvas/threejs/GeneralLights.js","component/Canvas/threejs/SceneManager.js","component/Canvas/index.js","component/Canvas/threejs/threeEntryPoint.js","component/panelComponent/CanvasComponent/threejs/SceneSubject.js","component/panelComponent/CanvasComponent/threejs/GeneralLights.js","component/panelComponent/CanvasComponent/threejs/SceneManager.js","component/panelComponent/CanvasComponent/index.js","component/panelComponent/CanvasComponent/threejs/threeEntryPoint.js","component/menuComponent/menuComponent.js","component/panelComponent/lrpanelComponent.js","component/panelComponent/sstablepanelComponent.js","component/panelComponent/noneComponent.js","component/panelComponent/lrtabComponent.js","component/panelComponent/panelComponent.js","component/footerComponent/footerComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SceneSubject","scene","particles","SEPARATION","AMOUNTX","AMOUNTY","numParticles","count","positions","Float32Array","colors","scales","color","THREE","i","j","ix","iy","setHSL","r","g","b","geometry","addAttribute","material","uniforms","texture","value","load","vertexShader","document","getElementById","textContent","fragmentShader","blending","depthTest","transparent","vertexColors","add","init","update","time","attributes","position","array","scale","Math","sin","needsUpdate","GeneralLights","lightIn","lightOut","set","rad","x","SceneManager","canvas","clock","origin","screenDimensions","width","height","mousePosition","y","background","buildScene","renderer","_ref","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","buildRender","camera","_ref2","aspectRatio","z","buildCamera","sceneSubjects","createSceneSubjects","elapsedTime","getElapsedTime","length","lookAt","render","onWindowResize","aspect","updateProjectionMatrix","onMouseMove","Header","container","canvasHalfWidth","canvasHalfHeight","createElement","appendChild","createCanvas","sceneManager","resizeCanvas","style","offsetWidth","offsetHeight","round","mouseMove","screenX","screenY","onresize","onmousemove","requestAnimationFrame","threeEntryPoint","this","threeRootElement","_this","react_default","a","className","ref","element","Component","threejs_SceneSubject","pointCloud","particlePositions","linesMesh","maxParticleCount","particleCount","rHalf","effectController","showDots","showLines","minDistance","limitConnections","maxConnections","group","customContainer","particlesData","gui","dat","autoPlace","onChange","visible","domElement","helper","setHex","segments","pMaterial","size","sizeAttenuation","random","push","velocity","numConnections","setDrawRange","setDynamic","computeBoundingSphere","vertexpos","colorpos","numConnected","k","particleData","particleDataB","dx","dy","dz","dist","sqrt","threejs_GeneralLights","threejs_SceneManager","innerWidth","innerHeight","CanvasComponent","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","activeItem","_this2","id","Header_Header","as","inverted","text-align","key","fontFamily","toUpperCase","spin","keyframes","_templateObject","SpinLogo","styled","img","_templateObject2","HeaderContain","div","_templateObject3","MenuComponent","menurender","menuitem","menuMap","type","title","Menu","Item","active","onClick","handleItemUpdate","dropdownitem","sub","dtype","dtitle","Dropdown","concat","Divider","dropdownitemsub","ddtype","ddtitle","text","pointing","fetch","then","response","data","setState","JSON","parse","catch","error","console","log","fontSize","src","logo","alt","React","LRPanelContain","lrpanelComponent_templateObject","LRPanelComponent","activedata","updateWindowDimensions","bind","assertThisInitialized","addEventListener","removeEventListener","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","til","cont","content","panelcontent","elements","pic","pix","Image","Grid","Row","lib_default","cl","Column","panelrender","SSTablePanelContain","sstablepanelComponent_templateObject","SSTablePanelComponent","typ","contentdata","headercont","itemcont","header","Table","Cell","_loop","week","school","teacher","documentpdf","Button","animated","open","Content","Icon","name","hidden","member1","member2","member3","member4","member5","url","colSpan","textAlign","striped","Body","NoneContain","noneComponent_templateObject","NoneComponent","nonerender","loading","lrtabComponent_templateObject","LRTabComponent","handleTabChange","e","activeIndex","activegroup","itemspllit","str","ar","split","datastr","lineHeight","lrtabComponent_LRPanelContain","grouppanes","menuItem","Tab","Pane","contdata","topic","info","tabcontent","picdata","pic1path","panes","onTabChange","divided","marginTop","lecture","members","hardware","software","inlineHeight","materials","PanelContain","panelComponent_templateObject","PanelComponent","target","panelpath","nonedata","sstabledata","updatepanel","menuval","panelurl","responsetable","datatable","errortable","panelitem","val","lrpanelComponent","tablejson","table","itemw","items","itemt","itemd","itemm1","itemm2","itemm3","itemm4","itemm5","feed","entry","c","gsx$周次","$t","gsx$學校行事曆","gsx$吉甫","gsx$工作文件","gsx$王霄唅","gsx$陳又如","gsx$陳嘉隆","gsx$蔡承恩","gsx$譚君恆","gsx$內容說明","gsx$檔案位址","sstablepanelComponent","CanvasComponent_CanvasComponent","itemtopic","itemlecture","itemhardware","itemsoftware","itemmaterials","itemmembers","iteminfo","itempic1path","gsx$課題","gsx$講師","gsx$硬體","gsx$軟體","gsx$材料","gsx$學員","gsx$介紹","itempicdir","gsx$圖片資料夾","itempic1nms","gsx$圖片名一","itempic1group","forEach","item","lrtabComponent","noneComponent","menuComponent_MenuComponent","Segment","FooterContain","footerComponent_templateObject","FooterComponent","Container","List","horizontal","basic","App","build_default","fonts","font","weights","panelComponent","Canvas_Header","footerComponent","Boolean","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b76b681.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as THREE from 'three'\r\n//import alphaTexture from './assets/textures/stripes_gradient.jpg';\r\n\r\nexport default scene => {\r\n    // =========CONSTANT==========\r\n    //const group = new THREE.Group();\r\n    const SEPARATION = 50, AMOUNTX = 50, AMOUNTY = 50;\r\n    const numParticles = AMOUNTX * AMOUNTY;\r\n    //const speed = 0.02;\r\n    //const textureOffsetSpeed = 0.02;\r\n    // =========PARTICLES MAP==========\r\n    \r\n    // =========EXCUTE==========\r\n    var particles, count = 0;\r\n    // =========EXCUTE==========\r\n    init();\r\n\r\n    function init() {\r\n        // ============ATTRIBUTES MAP================\r\n        var positions = new Float32Array( numParticles * 3 );\r\n        var colors = new Float32Array( numParticles * 3 );\r\n        var scales = new Float32Array( numParticles );\r\n\r\n        // ============VIRABLE VALUE================\r\n        let color = new THREE.Color();\r\n\r\n        var i = 0, j = 0;\r\n        for ( var ix = 0; ix < AMOUNTX; ix ++ ) {\r\n            for ( var iy = 0; iy < AMOUNTY; iy ++ ) {\r\n                positions[ i ] = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 ); // x\r\n                positions[ i + 1 ] = 0; // y\r\n                positions[ i + 2 ] = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 ); // z\r\n                scales[ j ] = 1;\r\n\r\n                color.setHSL( i / numParticles/2, 1.0, 0.5 );\r\n\r\n                colors[ i ] = color.r; //\r\n                colors[ i + 1 ] = color.g; //\r\n                colors[ i + 2 ] = color.b; // \r\n\r\n                i += 3;\r\n                j ++;\r\n            }\r\n         }\r\n        \r\n        var geometry = new THREE.BufferGeometry();\r\n        geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\r\n        geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\r\n        geometry.addAttribute( 'scale', new THREE.Float32BufferAttribute( scales, 1 ) );\r\n\r\n        var material = new THREE.ShaderMaterial( {\r\n                uniforms: {\r\n                    // 外部資料放在public底下\r\n                    texture: { value: new THREE.TextureLoader().load( \"./assets/textures/sprites/ball.png\" ) }\r\n                },\r\n                vertexShader: document.getElementById( 'vertexshader' ).textContent,\r\n                fragmentShader: document.getElementById( 'fragmentshader' ).textContent,\r\n\r\n                blending: THREE.AdditiveBlending,\r\n                depthTest: false,\r\n                transparent: true,\r\n                vertexColors: true\r\n        } );\r\n\r\n        particles = new THREE.Points( geometry, material );\r\n        scene.add( particles );\r\n    }\r\n/*    \r\n    function deformGeometry(geometry) {\r\n        for (let i=0; i<geometry.vertices.length; i+=2) {\r\n            const scalar = 1 + Math.random()*0.8;\r\n            geometry.vertices[i].multiplyScalar(scalar)\r\n        }\r\n\r\n        return geometry;\r\n    }\r\n*/\r\n    function update(time) {\r\n        let positions = particles.geometry.attributes.position.array;\r\n        let scales = particles.geometry.attributes.scale.array;\r\n        //let colors = particles.geometry.attributes.color.array;\r\n\r\n        //let color = new THREE.Color();\r\n        let i = 0, j = 0;\r\n        for ( var ix = 0; ix < AMOUNTX; ix ++ ) {\r\n            for ( var iy = 0; iy < AMOUNTY; iy ++ ) {\r\n                // ========================= MOTION Y =========================\r\n                positions[ i + 1 ] = ( Math.sin( ( ix + count ) * 0.3 ) * 150 ) +\r\n                                ( Math.sin( ( iy + count ) * 0.5 ) * 150 );\r\n                scales[ j ] = ( Math.sin( ( ix + count ) * 0.3 ) + 1 ) * 5 +\r\n                                ( Math.sin( ( iy + count ) * 0.5 ) + 1 ) * 5;\r\n\r\n                //color.setHSL( i / numParticles / 2, 1.0, 0.5 );\r\n\r\n                //colors[ i ] = Math.sin(iy + count ); \r\n\r\n                i += 3;\r\n                j ++;\r\n            }\r\n        }\r\n        particles.geometry.attributes.position.needsUpdate = true;\r\n        particles.geometry.attributes.scale.needsUpdate = true;\r\n        particles.geometry.attributes.color.needsUpdate = true;\r\n        count += 0.05;\r\n    }\r\n\r\n    return {\r\n        update\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\nexport default scene => {    \r\n\r\n    const lightIn = new THREE.PointLight(\"#4CAF50\", 30);\r\n    const lightOut = new THREE.PointLight(\"#2196F3\", 10);\r\n    lightOut.position.set(40,20,40);\r\n\r\n    scene.add(lightIn);\r\n    scene.add(lightOut);\r\n\r\n    const rad = 80;\r\n\r\n    function update(time) {\r\n        const x = rad * Math.sin(time*0.2)\r\n        lightOut.position.x = x;\r\n    }\r\n\r\n    return {\r\n        update\r\n    }\r\n}","import * as THREE from 'three';\r\nimport SceneSubject from './SceneSubject';\r\nimport GeneralLights from './GeneralLights';\r\n\r\nexport default canvas => {\r\n\r\n    const clock = new THREE.Clock();\r\n    const origin = new THREE.Vector3(0,350,0);\r\n\r\n    const screenDimensions = {\r\n        width: canvas.width,\r\n        height: canvas.height\r\n    }\r\n\r\n    const mousePosition = {\r\n        x: 0,\r\n        y: 0\r\n    }\r\n\r\n    const scene = buildScene();\r\n    const renderer = buildRender(screenDimensions);\r\n    const camera = buildCamera(screenDimensions);\r\n    const sceneSubjects = createSceneSubjects(scene);\r\n\r\n    function buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"#000\");\r\n\r\n        return scene;\r\n    }\r\n\r\n    function buildRender({ width, height }) {\r\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true }); \r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true; \r\n\r\n        return renderer;\r\n    }\r\n\r\n    function buildCamera({ width, height }) {\r\n        const aspectRatio = width / height;\r\n        const fieldOfView = 1200;\r\n        const nearPlane = 1000;\r\n        const farPlane = 100; \r\n        const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\r\n\r\n        camera.position.z = 1500;\r\n\r\n        return camera;\r\n    }\r\n\r\n    function createSceneSubjects(scene) {\r\n        \r\n        const sceneSubjects = [\r\n            GeneralLights(scene),\r\n            SceneSubject(scene)\r\n        ];\r\n        \r\n        //const sceneSubjects = SceneSubject(scene);\r\n\r\n        return sceneSubjects;\r\n    }\r\n\r\n    function update() {\r\n        const elapsedTime = clock.getElapsedTime();\r\n\r\n        for(let i=0; i<sceneSubjects.length; i++)\r\n            sceneSubjects[i].update(elapsedTime);\r\n\r\n        updateCameraPositionRelativeToMouse();\r\n\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    function updateCameraPositionRelativeToMouse() {\r\n        camera.position.x += (  (mousePosition.x * 0.15) - camera.position.x ) * 0.15;\r\n        camera.position.y += ( -(mousePosition.y * 0.05) - camera.position.y ) * 0.05;\r\n        camera.lookAt(origin);\r\n    }\r\n\r\n    function onWindowResize() {\r\n        const { width, height } = canvas;\r\n        \r\n        screenDimensions.width = width;\r\n        screenDimensions.height = height;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n        \r\n        renderer.setSize(width, height);\r\n    }\r\n\r\n    function onMouseMove(x, y) {\r\n        mousePosition.x = x;\r\n        mousePosition.y = y;\r\n    }\r\n\r\n    return {\r\n        update,\r\n        onWindowResize,\r\n        onMouseMove\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport threeEntryPoint from \"./threejs/threeEntryPoint\";\r\nimport \"./canvas.css\";\r\n\r\nexport default class Header extends Component {\r\n    \r\n    componentDidMount() {\r\n        threeEntryPoint(this.threeRootElement);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"header-header\" ref={element => this.threeRootElement = element} />\r\n        );\r\n    }\r\n}","import SceneManager from './SceneManager';\r\n\r\nexport default container => {\r\n    const canvas = createCanvas(document, container);\r\n    const sceneManager = SceneManager(canvas);\r\n\r\n    let canvasHalfWidth;\r\n    let canvasHalfHeight;\r\n\r\n    bindEventListeners();\r\n    render();\r\n\r\n    function createCanvas(document, container) {\r\n        const canvas = document.createElement('canvas');     \r\n        container.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    function bindEventListeners() {\r\n        window.onresize = resizeCanvas;\r\n        window.onmousemove = mouseMove;\r\n        resizeCanvas();\t\r\n    }\r\n\r\n    function resizeCanvas() {        \r\n        canvas.style.width = '100%';\r\n        canvas.style.height= '100%';\r\n        \r\n        canvas.width  = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n\r\n        canvasHalfWidth = Math.round(canvas.offsetWidth/2);\r\n        canvasHalfHeight = Math.round(canvas.offsetHeight/2);\r\n\r\n        sceneManager.onWindowResize()\r\n    }\r\n\r\n    function mouseMove({screenX, screenY}) {\r\n        sceneManager.onMouseMove(screenX-canvasHalfWidth, screenY-canvasHalfHeight);\r\n    }\r\n\r\n    function render(time) {\r\n        requestAnimationFrame(render);\r\n        sceneManager.update();\r\n    }\r\n}","import * as THREE from 'three';\r\nimport * as dat from 'dat.gui';\r\n\r\nexport default scene => {\r\n    const maxParticleCount = 1000;\r\n    const particleCount = 100;\r\n    const r = 800;\r\n    const rHalf = r / 2;\r\n    const effectController = {\r\n                showDots: true,\r\n                showLines: true,\r\n                minDistance: 150,\r\n                limitConnections: false,\r\n                maxConnections: 20,\r\n                particleCount: 200\r\n        };\r\n    const group = new THREE.Group();\r\n    const customContainer = document.getElementById('canvas-gui-container');\r\n\r\n    var particles;\r\n    var particlesData = [];\r\n    var positions, colors;\r\n    var pointCloud;\r\n    var particlePositions;\r\n    var linesMesh;\r\n    var gui = new dat.GUI({ autoPlace: false }); \r\n\r\n    // =========CONSTANT==========\r\n    // GUI\r\n    function initGUI() {\r\n        gui.add( effectController, \"showDots\" ).onChange( function ( value ) {\r\n            pointCloud.visible = value;\r\n            } );\r\n        gui.add( effectController, \"showLines\" ).onChange( function ( value ) {\r\n            linesMesh.visible = value;\r\n            } );\r\n        gui.add( effectController, \"minDistance\", 10, 300 );\r\n        gui.add( effectController, \"limitConnections\" );\r\n        gui.add( effectController, \"maxConnections\", 0, 30, 1 );\r\n                    \r\n        customContainer.appendChild(gui.domElement);                \r\n    }\r\n\r\n    // =========EXCUTE==========\r\n    init();\r\n\r\n    function init() {\r\n        initGUI();\r\n\r\n        const helper = new THREE.BoxHelper( new THREE.Mesh( new THREE.BoxBufferGeometry( r, r, r ) ) );\r\n        helper.material.color.setHex( 0x101010 );\r\n        helper.material.blending = THREE.AdditiveBlending;\r\n        helper.material.transparent = true;\r\n        group.add( helper );\r\n        scene.add( group );\r\n\r\n        const segments = maxParticleCount * maxParticleCount;\r\n\r\n        positions = new Float32Array( segments * 3 );\r\n        colors = new Float32Array( segments * 3 );\r\n        var pMaterial = new THREE.PointsMaterial( {\r\n                    color: 0xFFFFFF,\r\n                    size: 3,\r\n                    blending: THREE.AdditiveBlending,\r\n                    transparent: true,\r\n                    sizeAttenuation: false\r\n                } );\r\n        particles = new THREE.BufferGeometry();\r\n        particlePositions = new Float32Array( maxParticleCount * 3 );\r\n\r\n        for ( var i = 0; i < maxParticleCount; i ++ ) {\r\n                    var x = Math.random() * r - r / 2;\r\n                    var y = Math.random() * r - r / 2;\r\n                    var z = Math.random() * r - r / 2;\r\n                    particlePositions[ i * 3 ] = x;\r\n                    particlePositions[ i * 3 + 1 ] = y;\r\n                    particlePositions[ i * 3 + 2 ] = z;\r\n                    // add it to the geometry\r\n                    particlesData.push( {\r\n                        velocity: new THREE.Vector3( - 1 + Math.random() * 2, - 1 + Math.random() * 2, - 1 + Math.random() * 2 ),\r\n                        numConnections: 0\r\n                    } );\r\n                }\r\n        \r\n        particles.setDrawRange( 0, particleCount );\r\n        particles.addAttribute( 'position', new THREE.BufferAttribute( particlePositions, 3 ).setDynamic( true ) );\r\n        \r\n        // create the particle system\r\n        pointCloud = new THREE.Points( particles, pMaterial );\r\n        group.add( pointCloud );\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).setDynamic( true ) );\r\n        geometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).setDynamic( true ) );\r\n        geometry.computeBoundingSphere();\r\n        geometry.setDrawRange( 0, 0 );\r\n        const material = new THREE.LineBasicMaterial( {\r\n                    vertexColors: THREE.VertexColors,\r\n                    blending: THREE.AdditiveBlending,\r\n                    transparent: true\r\n                } );\r\n        linesMesh = new THREE.LineSegments( geometry, material );\r\n        group.add( linesMesh );\r\n\r\n\r\n        /*\r\n        var geometry = new THREE.BufferGeometry();\r\n\r\n        // ============ATTRIBUTES MAP================\r\n        var positions = [];\r\n        var colors = [];\r\n\r\n        // ============VIRABLE VALUE================\r\n        let color = new THREE.Color();\r\n\r\n        let n = 1000, n2 = n / 2; // particles spread in the cube\r\n\r\n        for ( let i = 0; i < particles; i ++ ) {\r\n            let x = Math.random() * n - n2;\r\n            let y = Math.random() * n - n2;\r\n            let z = Math.random() * n - n2;\r\n            positions.push( x, y, z ); \r\n\r\n            // colors\r\n            let vx = ( x / n ) + 0.5;\r\n            let vy = ( y / n ) + 0.5;\r\n            let vz = ( z / n ) + 0.5;\r\n            color.setRGB( vx, vy, vz );\r\n            colors.push( color.r, color.g, color.b );\r\n         }\r\n        \r\n        geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\r\n        geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\r\n\r\n        geometry.computeBoundingSphere();\r\n\r\n        let material = new THREE.PointsMaterial({\r\n            size: 15, vertexColors: THREE.VertexColors }\r\n         );\r\n\r\n        let points = new THREE.Points( geometry, material );\r\n        scene.add( points );\r\n        */\r\n    }\r\n/*    \r\n    function deformGeometry(geometry) {\r\n        for (let i=0; i<geometry.vertices.length; i+=2) {\r\n            const scalar = 1 + Math.random()*0.8;\r\n            geometry.vertices[i].multiplyScalar(scalar)\r\n        }\r\n\r\n        return geometry;\r\n    }\r\n*/\r\n    function update(time) {\r\n        \r\n        var vertexpos = 0;\r\n                var colorpos = 0;\r\n                var numConnected = 0;\r\n                for ( var k = 0; k < particleCount; k ++ ) { particlesData[ k ].numConnections = 0; }\r\n                for ( var i = 0; i < particleCount; i ++ ) {\r\n                    // get the particle\r\n                    var particleData = particlesData[ i ];\r\n                    particlePositions[ i * 3 ] += particleData.velocity.x;\r\n                    particlePositions[ i * 3 + 1 ] += particleData.velocity.y;\r\n                    particlePositions[ i * 3 + 2 ] += particleData.velocity.z;\r\n                    if ( particlePositions[ i * 3 + 1 ] < - rHalf || particlePositions[ i * 3 + 1 ] > rHalf )\r\n                        particleData.velocity.y = - particleData.velocity.y;\r\n                    if ( particlePositions[ i * 3 ] < - rHalf || particlePositions[ i * 3 ] > rHalf )\r\n                        particleData.velocity.x = - particleData.velocity.x;\r\n                    if ( particlePositions[ i * 3 + 2 ] < - rHalf || particlePositions[ i * 3 + 2 ] > rHalf )\r\n                        particleData.velocity.z = - particleData.velocity.z;\r\n                    if ( effectController.limitConnections && particleData.numConnections >= effectController.maxConnections )\r\n                        continue;\r\n                    // Check collision\r\n                    for ( var j = i + 1; j < particleCount; j ++ ) {\r\n                        var particleDataB = particlesData[ j ];\r\n                        if ( effectController.limitConnections && particleDataB.numConnections >= effectController.maxConnections )\r\n                            continue;\r\n                        var dx = particlePositions[ i * 3 ] - particlePositions[ j * 3 ];\r\n                        var dy = particlePositions[ i * 3 + 1 ] - particlePositions[ j * 3 + 1 ];\r\n                        var dz = particlePositions[ i * 3 + 2 ] - particlePositions[ j * 3 + 2 ];\r\n                        var dist = Math.sqrt( dx * dx + dy * dy + dz * dz );\r\n                        if ( dist < effectController.minDistance ) {\r\n                            particleData.numConnections ++;\r\n                            particleDataB.numConnections ++;\r\n                            var alpha = 1.0 - dist / effectController.minDistance;\r\n                            positions[ vertexpos ++ ] = particlePositions[ i * 3 ];\r\n                            positions[ vertexpos ++ ] = particlePositions[ i * 3 + 1 ];\r\n                            positions[ vertexpos ++ ] = particlePositions[ i * 3 + 2 ];\r\n                            positions[ vertexpos ++ ] = particlePositions[ j * 3 ];\r\n                            positions[ vertexpos ++ ] = particlePositions[ j * 3 + 1 ];\r\n                            positions[ vertexpos ++ ] = particlePositions[ j * 3 + 2 ];\r\n                            colors[ colorpos ++ ] = alpha;\r\n                            colors[ colorpos ++ ] = alpha;\r\n                            colors[ colorpos ++ ] = alpha;\r\n                            colors[ colorpos ++ ] = alpha;\r\n                            colors[ colorpos ++ ] = alpha;\r\n                            colors[ colorpos ++ ] = alpha;\r\n                            numConnected ++;\r\n                        }\r\n                    }\r\n                }\r\n                linesMesh.geometry.setDrawRange( 0, numConnected * 2 );\r\n                linesMesh.geometry.attributes.position.needsUpdate = true;\r\n                linesMesh.geometry.attributes.color.needsUpdate = true;\r\n                pointCloud.geometry.attributes.position.needsUpdate = true;\r\n                //requestAnimationFrame( update );\r\n            }\r\n\r\n        /*\r\n        let positions = particles.geometry.attributes.position.array;\r\n        let scales = particles.geometry.attributes.scale.array;\r\n        //let colors = particles.geometry.attributes.color.array;\r\n\r\n        //let color = new THREE.Color();\r\n        let i = 0, j = 0;\r\n        for ( var ix = 0; ix < AMOUNTX; ix ++ ) {\r\n            for ( var iy = 0; iy < AMOUNTY; iy ++ ) {\r\n                // ========================= MOTION Y =========================\r\n                positions[ i + 1 ] = ( Math.sin( ( ix + count ) * 0.3 ) * 150 ) +\r\n                                ( Math.sin( ( iy + count ) * 0.5 ) * 150 );\r\n                scales[ j ] = ( Math.sin( ( ix + count ) * 0.3 ) + 1 ) * 5 +\r\n                                ( Math.sin( ( iy + count ) * 0.5 ) + 1 ) * 5;\r\n\r\n                //color.setHSL( i / numParticles / 2, 1.0, 0.5 );\r\n\r\n                //colors[ i ] = Math.sin(iy + count ); \r\n\r\n                i += 3;\r\n                j ++;\r\n            }\r\n        }\r\n        particles.geometry.attributes.position.needsUpdate = true;\r\n        particles.geometry.attributes.scale.needsUpdate = true;\r\n        particles.geometry.attributes.color.needsUpdate = true;\r\n        count += 0.05;\r\n        */\r\n\r\n    return {\r\n        update\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\nexport default scene => {    \r\n\r\n    const lightIn = new THREE.PointLight(\"#4CAF50\", 30);\r\n    const lightOut = new THREE.PointLight(\"#2196F3\", 10);\r\n    lightOut.position.set(40,20,40);\r\n\r\n    scene.add(lightIn);\r\n    scene.add(lightOut);\r\n\r\n    const rad = 80;\r\n\r\n    function update(time) {\r\n        const x = rad * Math.sin(time*0.2)\r\n        lightOut.position.x = x;\r\n    }\r\n\r\n    return {\r\n        update\r\n    }\r\n}","import * as THREE from 'three';\r\nimport SceneSubject from './SceneSubject';\r\nimport GeneralLights from './GeneralLights';\r\n\r\nexport default canvas => {\r\n\r\n    const clock = new THREE.Clock();\r\n    const origin = new THREE.Vector3(0,0,0);\r\n\r\n    const screenDimensions = {\r\n        width: canvas.width,\r\n        height: canvas.height\r\n    }\r\n\r\n    const mousePosition = {\r\n        x: 0,\r\n        y: 0\r\n    }\r\n\r\n    const scene = buildScene();\r\n    const renderer = buildRender(screenDimensions);\r\n    const camera = buildCamera(screenDimensions);\r\n    const sceneSubjects = createSceneSubjects(scene);\r\n\r\n    function buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"#000\");\r\n\r\n        return scene;\r\n    }\r\n\r\n    function buildRender({ width, height }) {\r\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true, alpha: true }); \r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true; \r\n\r\n        return renderer;\r\n    }\r\n\r\n    function buildCamera({ width, height }) {\r\n        \r\n        const fieldOfView = 45;\r\n        const aspectRatio = window.innerWidth / window.innerHeight;\r\n        const nearPlane = 1;\r\n        const farPlane = 4000; \r\n        const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\r\n\r\n        camera.position.z = 1500;\r\n\r\n        return camera;\r\n    }\r\n\r\n    function createSceneSubjects(scene) {\r\n        \r\n        const sceneSubjects = [\r\n            GeneralLights(scene),\r\n            SceneSubject(scene)\r\n        ];\r\n        \r\n        //const sceneSubjects = SceneSubject(scene);\r\n\r\n        return sceneSubjects;\r\n    }\r\n\r\n    function update() {\r\n        const elapsedTime = clock.getElapsedTime();\r\n\r\n        for(let i=0; i<sceneSubjects.length; i++)\r\n            sceneSubjects[i].update(elapsedTime);\r\n\r\n        updateCameraPositionRelativeToMouse();\r\n\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    function updateCameraPositionRelativeToMouse() {\r\n        camera.position.x += (  (mousePosition.x * 0.15) - camera.position.x ) * 0.15;\r\n        camera.position.y += ( -(mousePosition.y * 0.05) - camera.position.y ) * 0.05;\r\n        camera.lookAt(origin);\r\n    }\r\n\r\n    function onWindowResize() {\r\n        const { width, height } = canvas;\r\n        \r\n        screenDimensions.width = width;\r\n        screenDimensions.height = height;\r\n\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n        \r\n        renderer.setSize(width, height);\r\n    }\r\n\r\n    function onMouseMove(x, y) {\r\n        mousePosition.x = x;\r\n        mousePosition.y = y;\r\n    }\r\n\r\n    return {\r\n        update,\r\n        onWindowResize,\r\n        onMouseMove\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Header} from 'semantic-ui-react';\r\nimport threeEntryPoint from \"./threejs/threeEntryPoint\";\r\nimport \"./canvas.css\";\r\n/*\r\nconst plug_script = (src) => {\r\n  return new Promise(function(resolve, reject){\r\n    let script = document.createElement('script');\r\n    script.src = src;\r\n    script.addEventListener('load', function () {\r\n      resolve();\r\n    });\r\n    script.addEventListener('error', function (e) {\r\n      reject(e);\r\n    });\r\n    document.body.appendChild(script);\r\n  })\r\n};\r\nconst dat_script = plug_script('./threejs/assets/js/libs/dat.gui.min.js');\r\n*/\r\nexport default class CanvasComponent extends Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        activeItem: this.props.activeItem\r\n    };\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n\t    threeEntryPoint(this.threeRootElement);\r\n    }\r\n\t\r\n    render () {\r\n    \t\r\n        return (\r\n        \t\r\n            <div id=\"panel-canvas\" className=\"panel-canvas\" ref={element => this.threeRootElement = element}>\r\n            \t  \r\n            \t  <div id=\"canvas-gui-container\">\r\n            \t  \t<Header as='h2' color='black' inverted text-align='center' key={this.state.activeItem}  style={{fontFamily: 'Titillium Web'}}>{this.state.activeItem.toUpperCase()}</Header>\r\n            \t  </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import SceneManager from './SceneManager';\r\n\r\nexport default container => {\r\n\r\n    const canvas = createCanvas(document, container);\r\n    const sceneManager = SceneManager(canvas);\r\n\r\n    let canvasHalfWidth;\r\n    let canvasHalfHeight;\r\n\r\n    bindEventListeners();\r\n    render();\r\n\r\n    function createCanvas(document, container) {\r\n        const canvas = document.createElement('canvas');     \r\n        container.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    function bindEventListeners() {\r\n        window.onresize = resizeCanvas;\r\n        window.onmousemove = mouseMove;\r\n        resizeCanvas();\t\r\n    }\r\n\r\n    function resizeCanvas() {        \r\n        canvas.style.width = '100%';\r\n        canvas.style.height= '100%';\r\n        \r\n        canvas.width  = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n\r\n        canvasHalfWidth = Math.round(canvas.offsetWidth/2);\r\n        canvasHalfHeight = Math.round(canvas.offsetHeight/2);\r\n\r\n        sceneManager.onWindowResize()\r\n    }\r\n\r\n    function mouseMove({screenX, screenY}) {\r\n        sceneManager.onMouseMove(screenX-canvasHalfWidth, screenY-canvasHalfHeight);\r\n    }\r\n\r\n    function render(time) {\r\n        requestAnimationFrame(render);\r\n        sceneManager.update();\r\n    }\r\n}","import React from 'react';\r\nimport { Menu, Dropdown} from 'semantic-ui-react';\r\nimport logo from './assets/logo.svg';\r\nimport styled, { keyframes } from 'styled-components';\r\n\t\r\n\t// stlyed \r\n\t//======================logo======================\r\n    const spin = keyframes`\r\n    \t0% { transform: rotate(0deg); }\r\n    \t25% { transform: rotate(360deg); }\r\n    \t50% { transform: rotate(0deg); }\r\n    \t75% { transform: rotate(-360deg); }\r\n    \t100% { transform: rotate(0deg); }\r\n\t`;\r\n\r\n  const SpinLogo = styled.img`\r\n\t \tanimation: ${spin} 4s linear infinite;\r\n\t `;\r\n\t//======================menutab======================\r\n\tconst HeaderContain = styled.div`\r\n\t\twidth:100%;\r\n\t`;\r\n\r\n  const menuMapurl = './assets/json/menuMap.json';\r\n\r\nexport default class MenuComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeItem: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(menuMapurl)\r\n    .then((response)=>{\r\n      return response.text();\r\n    })\r\n    .then((data)=>{\r\n      this.setState({menuMap:JSON.parse(data)});\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error);\r\n    });    \r\n  }\r\n\r\n\r\n  menurender = () =>{\r\n    let menuitem=[];\r\n\r\n    if (this.state.menuMap!=null){\r\n\r\n      for(let i=0; i<this.state.menuMap.length; i+=1){\r\n            let type = this.state.menuMap[i].type;\r\n            let title = this.state.menuMap[i].title;\r\n\r\n            //=======================BUTTOn====================\r\n            if (type==='button'){\r\n              menuitem.push(\r\n              <Menu.Item \r\n                key={title} id={title} \r\n                active={this.state.activeItem === {title}}\r\n                onClick={this.props.handleItemUpdate}\r\n              >\r\n                {title.toUpperCase()}\r\n              </Menu.Item>);\r\n\r\n              //=======================DROPDOWN====================\r\n            }else if(type==='dropdown'){\r\n                let dropdownitem=[];\r\n\r\n                for(let j=0; j<this.state.menuMap[i].sub.length; j+=1){\r\n                    let dtype = this.state.menuMap[i].sub[j].type;\r\n                    let dtitle = this.state.menuMap[i].sub[j].title;\r\n                    //=======================TOPIC====================\r\n                    if (dtype==='topic'){\r\n                      dropdownitem.push(<Dropdown.Header key={`${title}-${dtitle}`}>{dtitle.toUpperCase()}</Dropdown.Header>);\r\n                    //=======================DIVIDER====================\r\n                    }else if (dtype==='divider'){\r\n                      dropdownitem.push(<Dropdown.Divider key={`${title}-divider-${j}`}/>);\r\n                    //=======================BUTTON====================\r\n                    }else if (dtype==='button'){\r\n                      dropdownitem.push(\r\n                        <Dropdown.Item\r\n                          key={`${title}-${dtitle}`} id={`${title}-${dtitle}`}\r\n                          active={this.state.activeItem === `${title}-${dtitle}`}\r\n                          onClick={this.props.handleItemUpdate}\r\n                        >\r\n                          {dtitle.toUpperCase()}\r\n                        </Dropdown.Item>);\r\n                    }else if (dtype==='dropdown'){\r\n                            let dropdownitemsub=[];\r\n\r\n                            for(let k=0; k<this.state.menuMap[i].sub[j].sub.length; k+=1){\r\n                                let ddtype = this.state.menuMap[i].sub[j].sub[k].type;\r\n                                let ddtitle = this.state.menuMap[i].sub[j].sub[k].title;\r\n                                //=======================TOPIC====================\r\n                                if (ddtype==='topic'){\r\n                                  dropdownitemsub.push(<Dropdown.Header key={`${title}-${dtitle}-${ddtitle}`}>{ddtitle.toUpperCase()}</Dropdown.Header>);\r\n                                //=======================DIVIDER====================\r\n                                }else if (ddtype==='divider'){\r\n                                  dropdownitemsub.push(<Dropdown.Divider key={`${title}-${dtitle}-divider-${j}`}/>);\r\n                                //=======================BUTTON====================\r\n                                }else if (ddtype==='button'){\r\n                                  dropdownitemsub.push(\r\n                                    <Dropdown.Item\r\n                                      key={`${title}-${dtitle}-${ddtitle}`} id={`${title}-${dtitle}-${ddtitle}`}\r\n                                      active={this.state.activeItem === `${title}-${dtitle}-${ddtitle}`}\r\n                                      onClick={this.props.handleItemUpdate}\r\n                                    >\r\n                                      {ddtitle.toUpperCase()}\r\n                                    </Dropdown.Item>);\r\n                                }\r\n                            }\r\n\r\n                            dropdownitem.push(\r\n                              <Dropdown text={dtitle.toUpperCase()} key={`${title}-${dtitle}`} pointing className='link item left'>\r\n                                <Dropdown.Menu>\r\n                                  {dropdownitemsub}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                            );\r\n                    }\r\n                }\r\n\r\n                menuitem.push(\r\n                    <Dropdown text={title.toUpperCase()} key={title} pointing className='link item'>\r\n                      <Dropdown.Menu>\r\n                        {dropdownitem}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                );\r\n            }\r\n            \r\n      }\r\n    }\r\n    return menuitem;\r\n  };\r\n  \r\n  \r\n  render() {\r\n\r\n\r\n    return (\r\n      <HeaderContain>\r\n        <Menu style={{ fontFamily: 'Titillium Web', fontSize:'1.1em'}}>\r\n          <Menu.Item key='logo-menu'><SpinLogo src={logo} alt='logo-spin'></SpinLogo> CFR Lab </Menu.Item>\r\n          {this.menurender()}\r\n        </Menu>\r\n      </HeaderContain>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Image, Grid, Header } from 'semantic-ui-react';\r\nimport Slider from \"react-slick\";\r\nimport styled from 'styled-components';\r\n\r\n// 匯入 slick的css\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst LRPanelContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: 'auto';\r\n    maxHeight: 75%;\r\n    .txtcontent{\r\n      text-align:justify;\r\n    }\r\n\t`;\r\n \r\nclass LRPanelComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activedata: this.props.activedata\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  // ==================LAYOUT=======================\r\n  render() {\r\n  const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay: true\r\n  };\r\n\r\n  const panelrender =()=>{\r\n      let til = this.state.activedata.title;\r\n      //let tilup = til.toUpperCase();\r\n      let cont = this.state.activedata.content;\r\n      let panelcontent=[]; \r\n      let elements =[];\r\n\r\n      if (this.state.activedata!==null){\r\n        for(let i=0;i<this.state.activedata.pic.length;i+=1){\r\n          let pix = this.state.activedata.pic[i];\r\n          elements.push(<Image src={`${pix}`} key={`${til}-img-${i}`}/>);\r\n        }\r\n      }\r\n\r\n      if (this.state.width<640){\r\n        panelcontent.push(\r\n            <Grid key={`${til}-grid`}>\r\n              <Grid.Row>\r\n                <div>\r\n                 <Slider {...settings}>\r\n                    {elements}\r\n                 </Slider>\r\n                </div>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                  <Header as='h2' style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n                  <p>{cont}</p>\r\n              </Grid.Row>\r\n              </Grid>\r\n            );\r\n      }else{\r\n        let cl = (this.state.width<900)?8:4;\r\n        panelcontent.push(\r\n          <Grid key={`${til}-grid`}>\r\n            <Grid.Row>\r\n              <Grid.Column width={cl}>\r\n                  <Slider {...settings}>\r\n                    {elements}\r\n                 </Slider>\r\n              </Grid.Column>\r\n              <Grid.Column width={16-cl} className='txtcontent'>\r\n                <Header as='h2' style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n                <p>{cont}</p>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            </Grid>\r\n          );\r\n      }\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n    return (\r\n      <LRPanelContain>\r\n          {panelrender()}\r\n      </LRPanelContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LRPanelComponent;\r\n","import React from 'react';\r\nimport { Button, Header, Table, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\n\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst SSTablePanelContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: auto;\r\n    height:65vh;\r\n    .tablecontent{\r\n      text-align:justify;\r\n    }\r\n    .tabletitle{\r\n      background-color:YellowGreen;\r\n    }\r\n    .tableheader{\r\n      background-color:Teal;\r\n      color:White;\r\n    }\r\n\t`;\r\n \r\nclass SSTablePanelComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activedata: this.props.activedata,\r\n        contentdata: this.props.contentdata\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  // ==================LAYOUT=======================\r\n\r\n  panelrender =()=>{\r\n      let til = this.state.activedata.title;\r\n      let typ = this.state.activedata.type;\r\n      let cont = this.state.contentdata;\r\n      let panelcontent=[];\r\n\r\n      let headercont =[];\r\n      let itemcont =[];\r\n\r\n      if (cont!==null){        \r\n        \r\n        // header\r\n        for(let i=0;i<cont.header.length;i+=1){\r\n          headercont.push(<Table.Cell key={`${til}-header-${i}`} >{cont.header[i]}</Table.Cell>);\r\n        }\r\n        // item\r\n        for(let i=0;i<cont.week.length;i+=1){\r\n          if (cont.week[i][0]==='W'){\r\n            // 全行事曆\r\n            if (typ === \"sstableall\"){\r\n              /*\r\n              let docitem = ()=>{\r\n                if (cont.documentpdf[i]===null){return null;}\r\n                else{\r\n                  return\r\n                    (<Table.Cell key={`${til}-documentpdf-${i}`}>\r\n                      \r\n                    </Table.Cell>);\r\n                }\r\n              };\r\n              */\r\n              itemcont.push(\r\n                <Table.Row width={10} key={`${til}-week-${i}`}>\r\n                  <Table.Cell width={1} key={`${til}-week-${i}`}>{cont.week[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-school-${i}`}>{cont.school[i]}</Table.Cell>\r\n                  <Table.Cell width={2} key={`${til}-teacher-${i}`}>{cont.teacher[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-documentpdf-${i}`}>\r\n                    {cont.documentpdf[i]==='' ? null : \r\n                      <Button size='mini' animated onClick= { () => {window.open(`${cont.documentpdf[i]}`,'_blank'); }}>\r\n                        <Button.Content size='mini' visible><Icon name='clipboard outline' /></Button.Content>\r\n                        <Button.Content size='mini' hidden><Icon name='arrow right'/></Button.Content>\r\n                      </Button>}\r\n                  </Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member1-${i}`}>{cont.member1[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member2-${i}`}>{cont.member2[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member3-${i}`}>{cont.member3[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member4-${i}`}>{cont.member4[i]}</Table.Cell>\r\n                  <Table.Cell width={1} key={`${til}-member5-${i}`}>{cont.member5[i]}</Table.Cell>\r\n                </Table.Row>);\r\n              // 各組周記\r\n            }else if (typ === \"sstableteam\"){\r\n              itemcont.push(\r\n                <Table.Row key={`${til}-week-${i}`}>\r\n                  <Table.Cell key={`${til}-week-${i}`}>{cont.week[i]}</Table.Cell>\r\n                  <Table.Cell key={`${til}-content-${i}`}>{cont.content[i]}</Table.Cell>\r\n                  <Table.Cell key={`${til}-urlpdf-${i}`}>\r\n                    {cont.url[i]==='' ? null : \r\n                      <Button size='mini' animated onClick= { () => {window.open(`${cont.url[i]}`,'_blank'); }}>\r\n                        <Button.Content size='mini' visible><Icon name='clipboard outline' /></Button.Content>\r\n                        <Button.Content size='mini' hidden><Icon name='arrow right'/></Button.Content>\r\n                      </Button>}\r\n                  </Table.Cell>\r\n                </Table.Row>);\r\n            }\r\n            \r\n          }else{\r\n            itemcont.push(\r\n              <Table.Row key={`${til}-row-${i}`} className='tabletitle'>\r\n                <Table.Cell colSpan='9' textAlign='center' key={`${til}-week-${i}`} >{cont.week[i]}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          }\r\n        }\r\n\r\n        panelcontent.push(\r\n            <Header as='h2' key={til} style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n            );\r\n\r\n        panelcontent.push(\r\n            <Table striped className='tablecontent' key={`${til}-table`}>\r\n              <Table.Header>\r\n                <Table.Row className='tableheader'>\r\n                  {headercont}\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                  {itemcont}\r\n              </Table.Body>\r\n            </Table>\r\n        );\r\n      }\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n  render() {\r\n        \r\n    return (\r\n      <SSTablePanelContain>\r\n          {this.panelrender()}\r\n      </SSTablePanelContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default SSTablePanelComponent;\r\n","import React from 'react';\r\nimport { Grid, Header, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\n\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst NoneContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: 'auto';\r\n    maxHeight: 75%;\r\n    .txtcontent{\r\n      text-align:justify;\r\n    }\r\n\t`;\r\n \r\nclass NoneComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activeItem: this.props.activeItem\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  // ==================LAYOUT=======================\r\n  nonerender =()=>{\r\n      let panelcontent=[]; \r\n      let til =this.state.activeItem;\r\n      panelcontent.push(\r\n          <Grid key={`${til}-grid`}>\r\n            <Grid.Row>\r\n              <Grid.Column className='txtcontent'  >\r\n                <Header as='h2' key={`${til}-nonetitle`} style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n                <Header as='h5' key={`${til}-nonecontent`}><Icon loading name='setting' />UnderConstruction</Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          );\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n  render() {\r\n        \r\n    return (\r\n      <NoneContain>\r\n          {this.nonerender()}\r\n      </NoneContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NoneComponent;\r\n","import React from 'react';\r\nimport { Image, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport Slider from \"react-slick\";\r\nimport styled from 'styled-components';\r\n\r\n// 匯入 slick的css\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst LRPanelContain = styled.div`\r\n    width:100%;\r\n    padding:1.5em 1.5em 1.5em 1.5em;\r\n    top: 1.5em;\r\n    overflow: 'auto';\r\n    height:65vh;\r\n    .txtcontent{\r\n      text-align:justify;\r\n    }\r\n\t`;\r\n \r\nclass LRTabComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        width: 0, height: 0,\r\n        activedata: this.props.activedata,\r\n        contentdata: this.props.contentdata,\r\n        activegroup:0\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  // ==================RESIZE=======================\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  handleTabChange = (e, { activeIndex }) => {\r\n    this.setState({ activegroup: activeIndex });\r\n    console.log(activeIndex);\r\n  }\r\n  // ==================LAYOUT=======================\r\n  render() {\r\n  const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay: true\r\n  };\r\n  \r\n  const itemspllit =(str,p)=>{\r\n    let ar=str.split(p);\r\n    let datastr=[];\r\n    for (let i=0;i<ar.length;i+=1){\r\n      datastr.push(<p key={`item-${ar[i]}`} style={{lineHeight: '1em'}}>{ar[i]}</p>);\r\n    }\r\n    return datastr;\r\n  }\r\n\r\n  const tabcontent = (data, id)=>{\r\n    let contdata =[];\r\n      contdata.push(<Header key={`header-${id}`} as='h2' style={{fontFamily: 'Titillium Web'}}>{data.topic[id]}</Header>);\r\n      contdata.push(<Header key={`info-${id}`} as='h5' style={{fontFamily: 'Titillium Web'}}>{data.info[id]}</Header>);\r\n    return contdata;\r\n  }\r\n\r\n  const panelrender =()=>{\r\n      let til = this.state.activedata.title;\r\n      //let tilup = til.toUpperCase();\r\n      let cont = this.state.contentdata;\r\n\r\n      let panelcontent=[];\r\n\r\n      let grouppanes = [];\r\n      for (let i=0;i<cont.topic.length;i+=1){\r\n          grouppanes.push({menuItem: `Group${i}`, render: () => <Tab.Pane>{tabcontent(cont, i)}</Tab.Pane>});\r\n      }\r\n\r\n      let elements=(id)=>{\r\n        let picdata=[];\r\n        for (let i=0;i<cont.pic1path[id].length;i+=1){\r\n          picdata.push(<Image src={`${cont.pic1path[id][i]}`} key={`${cont.topic[id]}-img-${i}`}/>);\r\n          console.log(cont.pic1path[id][i]);\r\n        }\r\n        return picdata;\r\n      }\r\n\r\n      if (this.state.width<640){\r\n        panelcontent.push(\r\n            <Grid key={`${til}-grid`}>\r\n              <Grid.Row>\r\n                <div>\r\n                 <Slider {...settings}>\r\n                    {elements(this.state.activegroup)}\r\n                 </Slider>\r\n                </div>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                  <Header as='h2' style={{fontFamily: 'Titillium Web'}}>{til.toUpperCase()}</Header>\r\n              </Grid.Row>\r\n              </Grid>\r\n            );\r\n      }else{\r\n        let cl = (this.state.width<900)?7:5;\r\n        panelcontent.push(\r\n          <Grid key={`${til}-grid`}>\r\n            <Grid.Row>\r\n              <Grid.Column width={cl}>\r\n                <Slider {...settings}>\r\n                  {elements(this.state.activegroup)}\r\n                </Slider>\r\n              </Grid.Column>\r\n              <Grid.Column width={16-cl} className='txtcontent'>\r\n                <Tab panes={grouppanes} activeIndex={this.state.activegroup} onTabChange={this.handleTabChange}/>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row divided style={{marginTop:'0.5em'}}>\r\n              <Grid.Column width={3} >\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'right'}}>[Lecture]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'right', marginTop:'-0.25em'}}>{itemspllit(cont.lecture[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Members]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left', marginTop:'-0.25em'}}>{itemspllit(cont.members[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={3} >\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Hardware]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left', marginTop:'-0.25em'}}>{itemspllit(cont.hardware[this.state.activegroup],\"| \")}</Header>  \r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Software]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left', marginTop:'-0.25em'}}>{itemspllit(cont.software[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <Header as='h6' style={{fontFamily: 'Titillium Web', textAlign: 'left'}}>[Material]</Header>\r\n                <Header as='h5' style={{fontFamily: 'Titillium Web', textAlign: 'left', marginTop:'-0.25em', inlineHeight:''}}>{itemspllit(cont.materials[this.state.activegroup],\"| \")}</Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          );\r\n      }\r\n\r\n      return panelcontent;\r\n  };\r\n\r\n    return (\r\n      <LRPanelContain>\r\n          {panelrender()}\r\n      </LRPanelContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LRTabComponent;\r\n","import React from 'react';\r\nimport { Segment} from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\n\r\nimport CanvasComponent from './CanvasComponent';\r\n\r\nimport MenuComponent from '../menuComponent/menuComponent';\r\n\r\nimport LRPanelComponent from './lrpanelComponent';\r\nimport SSTablePanelComponent from './sstablepanelComponent';\r\nimport NoneComponent from './noneComponent'; \r\nimport LRTabComponent from './lrtabComponent';\r\n\r\n\r\n\t\r\n\t// stlyed \r\n\t//======================panel======================\r\n\tconst PanelContain = styled.div`\r\n    position: fixed;\r\n    z-index: 100;\r\n    width:80%;\r\n    height:60vh;\r\n    max-height:65vh;\r\n    margin-left: 10%;\r\n    top: 1.5em;\r\n    .Panel{\r\n      padding-top:1.5em;\r\n      opacity: 0.8;\r\n    }\r\n\t`;\r\n\r\nclass PanelComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        menuMap:null,\r\n        activeItem: null,\r\n        panelpath:null,\r\n        activedata: null,\r\n        sstabledata:null,\r\n        nonedata:false,\r\n    };\r\n\r\n    this.handleItemUpdate = this.handleItemUpdate.bind(this);\r\n  }\r\n\r\n  // create a function in parent and call it with \"this.props.fucniton\" in child component can get the tag DOM\r\n  handleItemUpdate = (e) =>{\r\n    // 要把會影響的state都列入，變動時renderer才會重整，否則沒列入的state就算變動了，renderer也不會重整\r\n    this.setState({ \r\n      activeItem: e.target.id,\r\n      panelpath: './assets/json/data/'+e.target.id+'.json',\r\n      nonedata: false,\r\n      sstabledata:null,\r\n      activedata: null\r\n      // 確認render即時改變要在setState後面加上props的callback\r\n    },()=>{\r\n      this.updatepanel();\r\n    });\r\n    \r\n    \r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.updatepanel(); \r\n  }\r\n  componentDidCatch() {\r\n    this.setState({nonedata: true});\r\n  }\r\n\r\n  updatepanel = ()=>{\r\n\r\n    let menuval = (this.state.panelpath===null) ? './assets/json/data/about.json' : this.state.panelpath;\r\n    \r\n\r\n    fetch(menuval)\r\n    .then((response)=>{\r\n      return response.text();\r\n    })\r\n    .then((data)=>{\r\n      this.setState({\r\n        activedata:JSON.parse(data)[0],\r\n        nonedata:false\r\n      });\r\n    }).then(()=>{\r\n      // =======================SSTABLE=======================\r\n      if (this.state.activedata.type !== null){\r\n        if (this.state.activedata.type ===\"sstableall\" || this.state.activedata.type ===\"sstableteam\" || this.state.activedata.type ===\"lrtab\") {\r\n          let panelurl = this.state.activedata.url;\r\n\r\n            fetch(panelurl)\r\n              .then((responsetable)=>{\r\n                return responsetable.text();\r\n              })\r\n              \r\n              .then((datatable)=>{\r\n                this.setState({\r\n                  sstabledata:JSON.parse(datatable),\r\n                  nonedata:false\r\n                });\r\n              })\r\n              .catch((errortable)=>{\r\n                console.log(errortable);\r\n              });\r\n        }\r\n      }\r\n    })\r\n    .catch((error)=>{\r\n      this.setState({\r\n        activedata:null,\r\n        nonedata:true});\r\n    });\r\n  }\r\n\r\n  panelrender =()=>{\r\n    let panelitem=[];\r\n    let val = this.state.activedata;\r\n\r\n    if (this.state.activedata !== null){\r\n        \r\n        if (val.type === \"lrpanel\"){\r\n          panelitem.push(<LRPanelComponent activedata={val} key={val.title}></LRPanelComponent>);\r\n\r\n        }else if (val.type === \"sstableall\" || val.type === \"sstableteam\"){\r\n\r\n          if (this.state.sstabledata !== null){\r\n\r\n            let tablejson = this.state.sstabledata;\r\n            let table = [];\r\n\r\n            // ==============================分項\r\n            \r\n              let itemw = [];\r\n              let items = [];\r\n              let itemt = [];\r\n              let itemd = [];\r\n              let itemm1 = [];\r\n              let itemm2 = [];\r\n              let itemm3 = [];\r\n              let itemm4 = [];\r\n              let itemm5 = [];\r\n\r\n            // ==============================全行事曆\r\n            if (val.type === \"sstableall\"){\r\n\r\n              for (let i = 0; i < tablejson.feed.entry.length; i+=1) {\r\n                  let c = tablejson.feed.entry[i].gsx$周次.$t;\r\n                  itemw.push(c);\r\n                  items.push(tablejson.feed.entry[i].gsx$學校行事曆.$t);\r\n                  itemt.push(tablejson.feed.entry[i].gsx$吉甫.$t);\r\n                  itemd.push(tablejson.feed.entry[i].gsx$工作文件.$t);\r\n                  itemm1.push(tablejson.feed.entry[i].gsx$王霄唅.$t);\r\n                  itemm2.push(tablejson.feed.entry[i].gsx$陳又如.$t);\r\n                  itemm3.push(tablejson.feed.entry[i].gsx$陳嘉隆.$t);\r\n                  itemm4.push(tablejson.feed.entry[i].gsx$蔡承恩.$t);\r\n                  itemm5.push(tablejson.feed.entry[i].gsx$譚君恆.$t);                \r\n              }\r\n\r\n              table = {\r\n                'header':['周次','學校行事曆','工作規劃','工作文件','王霄唅','陳又如','陳嘉隆','蔡承恩','譚君恆'],\r\n                'week':itemw,\r\n                'school':items,\r\n                'teacher':itemt,\r\n                'documentpdf':itemd,\r\n                'member1':itemm1,\r\n                'member2':itemm2,\r\n                'member3':itemm3,\r\n                'member4':itemm4,\r\n                'member5':itemm5\r\n              };\r\n            \r\n            }\r\n            // ==============================各組周記\r\n            else if (val.type === \"sstableteam\"){\r\n              for (let i = 0; i < tablejson.feed.entry.length; i+=1) {\r\n                  let c = tablejson.feed.entry[i].gsx$周次.$t;\r\n                  itemw.push(c);\r\n                  items.push(tablejson.feed.entry[i].gsx$內容說明.$t);\r\n                  itemt.push(tablejson.feed.entry[i].gsx$檔案位址.$t);           \r\n              }\r\n\r\n              table = {\r\n                'header':['周次','內容說明','檔案位址'],\r\n                'week':itemw,\r\n                'content':items,\r\n                'url':itemt\r\n              };\r\n            }\r\n            \r\n            panelitem.push(<SSTablePanelComponent activedata={val} contentdata={table} key={val.title}></SSTablePanelComponent>);\r\n          }\r\n\r\n        // ===================canvasComponent========================    \r\n        }else if (val.type === \"canvasapp\"){\r\n          panelitem.push(<CanvasComponent activeItem={val.title} key={val.title}/>);\r\n        // ===================lrtabComponent========================    \r\n        }else if (val.type === \"lrtab\"){\r\n          if (this.state.sstabledata !== null){\r\n\r\n            let tablejson = this.state.sstabledata;\r\n            let table = [];\r\n\r\n            // ==============================分項\r\n            \r\n              let itemtopic = [];\r\n              let itemlecture = [];\r\n              let itemhardware = [];\r\n              let itemsoftware = [];\r\n              let itemmaterials = [];\r\n              let itemmembers = [];\r\n              let iteminfo = [];\r\n              let itempic1path = [];\r\n\r\n              for (let i = 0; i < tablejson.feed.entry.length; i+=1) {\r\n                  itemtopic.push(tablejson.feed.entry[i].gsx$課題.$t); \r\n                  itemlecture.push(tablejson.feed.entry[i].gsx$講師.$t);\r\n                  itemhardware.push(tablejson.feed.entry[i].gsx$硬體.$t);\r\n                  itemsoftware.push(tablejson.feed.entry[i].gsx$軟體.$t);\r\n                  itemmaterials.push(tablejson.feed.entry[i].gsx$材料.$t);\r\n                  itemmembers.push(tablejson.feed.entry[i].gsx$學員.$t);\r\n                  iteminfo.push(tablejson.feed.entry[i].gsx$介紹.$t);\r\n\r\n                  let itempicdir = tablejson.feed.entry[i].gsx$圖片資料夾.$t;\r\n                  let itempic1nms = tablejson.feed.entry[i].gsx$圖片名一.$t.split(\"|\");\r\n                  let itempic1group =[];\r\n                  itempic1nms.forEach(function(item){\r\n                    itempic1group.push(itempicdir.concat(item));\r\n                  });\r\n                  itempic1path.push(itempic1group);\r\n              }\r\n              table = {\r\n                'topic':itemtopic,\r\n                'lecture':itemlecture,\r\n                'hardware':itemhardware,\r\n                'software':itemsoftware,\r\n                'materials':itemmaterials,\r\n                'members':itemmembers,\r\n                'info':iteminfo,\r\n                'pic1path':itempic1path\r\n              };\r\n            \r\n            panelitem.push(<LRTabComponent activedata={val} contentdata={table} key={val.title}></LRTabComponent>);\r\n          }\r\n          \r\n        }\r\n\r\n    // ===================noneCompontent========================\r\n    }else if (this.state.nonedata){\r\n\r\n      panelitem.push(<NoneComponent activeItem={this.state.activeItem} key='nonepanel'></NoneComponent>);\r\n    }\r\n\r\n    return panelitem;\r\n  }\r\n\r\n  render() {\r\n        \r\n    return (\r\n      <PanelContain>\r\n        <MenuComponent menuMap={this.state.menuMap} handleItemUpdate={this.handleItemUpdate} />\r\n        <div className=\"Panel\" >\r\n          <Segment>\r\n            {this.panelrender()}\r\n          </Segment>\r\n        </div>\r\n\r\n      </PanelContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PanelComponent;","import React from 'react';\r\nimport {Container, List, Button, Icon } from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\n\t\r\n\t// stlyed \r\n\t//======================footer======================\r\n\tconst FooterContain = styled.div`\r\n    position: fixed;\r\n\t\tz-index: 100;\r\n\t\twidth:80%;\r\n    margin-left: 10%;\r\n    \r\n    bottom:15px;;\r\n\r\n    p{\r\n      color: white;\r\n    }\r\n\t`;\r\n\r\n\r\nclass FooterComponent extends React.Component {\r\n/*\r\n  constructor(props) {\r\n    super(props);    \r\n  }\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ \r\n      activeItem: name \r\n    });\r\n    console.log(name);\r\n  }\r\n*/\r\n  render() {\r\n    //const { activeItem } = this.state;\r\n        \r\n    return (\r\n      <FooterContain  >\r\n          <Container textAlign='center' >\r\n            <List horizontal divided size='small'>\r\n              <List.Item>\r\n                <Button basic animated color='red'>\r\n                  <Button.Content visible style={{fontFamily: 'Titillium Web'}}>\r\n                    FB\r\n                  </Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon loading name='sync' color='red'/>\r\n                  </Button.Content>\r\n                </Button>\r\n              </List.Item>\r\n\r\n              <List.Item>\r\n                <p>|</p>\r\n              </List.Item>\r\n\r\n              <List.Item>\r\n                <Button basic animated color='red'>\r\n                  <Button.Content visible style={{fontFamily: 'Titillium Web'}}>\r\n                    Contact\r\n                  </Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon loading name='sync' color='red'/>\r\n                  </Button.Content>\r\n                </Button>\r\n              </List.Item>\r\n\r\n              <List.Item>\r\n                <p>|</p>\r\n              </List.Item>\r\n\r\n              <List.Item>\r\n                <Button basic animated color='red'>\r\n                  <Button.Content visible style={{fontFamily: 'Titillium Web'}}>\r\n                    Map\r\n                  </Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon loading name='sync' color='red'/>\r\n                  </Button.Content>\r\n                </Button>\r\n              </List.Item>\r\n\r\n            </List>\r\n          </Container>\r\n          <p style={{fontFamily: 'Titillium Web'}}><br/>Computing Frabrication Research Labortory.<br/>\r\n          2019 All Rights Preserverd. Composing with React, Threejs</p> \r\n      </FooterContain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React from 'react';\nimport './App.css';\nimport Canvas from './component/Canvas';\n\nimport GoogleFontLoader from 'react-google-font-loader';\n\nimport PanelComponent from './component/panelComponent/panelComponent';\nimport FooterComponent from './component/footerComponent/footerComponent';\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n\n\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: 'Titillium Web',\n              weights: [300,700],\n            },\n          ]}\n        />\t    \n    \t<PanelComponent/>\n    \t<Canvas/>\n      \t<FooterComponent/>      \t\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui/dist/semantic.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}